{"version":3,"file":"ej2-circulargauge.min.js","sources":["../../src/circular-gauge/utils/helper.js","../../src/circular-gauge/model/theme.js","../../src/circular-gauge/model/base.js","../../src/circular-gauge/axes/axis.js","../../src/circular-gauge/annotations/annotations.js","../../src/circular-gauge/model/constants.js","../../src/circular-gauge/user-interaction/tooltip.js","../../src/circular-gauge/axes/axis-renderer.js","../../src/circular-gauge/axes/pointer-renderer.js","../../src/circular-gauge/axes/axis-panel.js","../../src/circular-gauge/legend/legend.js","../../src/circular-gauge/model/pdf-export.js","../../src/circular-gauge/model/image-export.js","../../src/circular-gauge/model/print.js","../../src/circular-gauge/circular-gauge.js","../../src/global.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { compile as templateComplier, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { createElement, remove, setStyleAttribute } from '@syncfusion/ej2-base';\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns Size\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n * * @returns number\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n * @returns string\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to set style to the element.\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to measure the element rect.\n * @returns ClientRect\n * @private\n */\nexport function measureElementRect(element) {\n    var bounds;\n    document.body.appendChild(element);\n    bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/**\n * Function to convert the number from string.\n * @returns number\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to create the text element.\n * @returns Element\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    var renderOptions = {};\n    var htmlObject;\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n * @returns Element\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to calculate the sum of array values.\n * @returns number\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n/**\n * Function to calculate the value for linear animation effect\n * @param currentTime\n * @param startValue\n * @param endValue\n * @param duration\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to get the angle from value for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get the degree for circular gauge.\n * @returns number\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the value from angle for circular gauge.\n * @returns number\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n * @returns boolean\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get angle from location for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n * @returns GaugeLocation\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return getRoundedPath(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the rounded range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPath(start, end, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get element from id.\n * @returns Element\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to compile the template function for circular gauge.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template, gauge) {\n    var templateFn = null;\n    var e;\n    try {\n        if (gauge.isBlazor) {\n            var numb = template.match(/\\d+/g).toString();\n            template = numb ? template.replace(numb, '') : template;\n            template = template.indexOf('/') !== -1 ? template.replace('/', '') : template;\n        }\n        if (document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n * @returns IVisiblePointer\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString;\n    tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\n/**\n * Function to get current point for circular gauge using element id.\n * @returns IVisibleRange\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString;\n    tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString[tempString.length - 1]\n    };\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    var templateFn = getTemplateFunction(template, gauge);\n    var tooltipData = templateFn ? templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n/**\n * Function to get the mouse position\n * @param pageX\n * @param pageY\n * @param element\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * Function to convert the label using format for cirular gauge.\n * @returns string\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n * @returns PathOption\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            var space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/**\n * Function to get range color from value for circular gauge.\n * @returns string\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Internal use of circular gauge location\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nexport function showTooltip(text, x, y, areaWidth, id, element) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    var tooltip = document.getElementById(id);\n    var width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            innerHTML: text,\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"'\n        });\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerHTML = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n}\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n/**\n * To trigger the download element\n * @param fileName\n * @param type\n * @param url\n */\nexport function triggerDownload(fileName, type, url, isDownload) {\n    createElement('a', {\n        attrs: {\n            'download': fileName + '.' + type.toLocaleLowerCase(),\n            'href': url\n        }\n    }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n        view: window,\n        bubbles: false,\n        cancelable: true\n    }));\n}\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n/** @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    // switch (theme) {\n    //     case 'Material':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    //      case 'Fabric':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    // }\n    return palette;\n}\n/** @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Sets and gets the options to customize the color and width of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the axis line in circular gauge component.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the axis label in circular gauge component.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge component.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the major and minor tick lines of an axis in circular gauge component.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge component.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the pointer needle in the circular gauge component.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge component.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation element for an axis in circular gauge component.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the pointers of an axis in circular gauge component.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge component.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge component.\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { stringToNumber, getLocationFromAngle, getFontStyle } from '../utils/helper';\nimport { getElement, getTemplateFunction, measureElementRect } from '../utils/helper';\nimport { annotationRender } from '../model/constants';\nimport { createElement, updateBlazorTemplate } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     * @private.\n     */\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    //tslint:disable\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = this.gauge.availableSize.width;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount && !this.gauge.isBlazor) {\n            parentElement.appendChild(element);\n        }\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var _this = this;\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        if (this.gauge.isBlazor) {\n            var cancel = argsData.cancel, name_1 = argsData.name, content = argsData.content, textStyle = argsData.textStyle;\n            argsData = { cancel: cancel, name: name_1, content: content, annotation: annotation, textStyle: textStyle };\n        }\n        this.gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, _this.gauge);\n                if (templateFn && (!_this.gauge.isBlazor ? templateFn(axis, null, null, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length : {})) {\n                    templateElement = Array.prototype.slice.call(templateFn(!_this.gauge.isBlazor ? axis : {}, null, null, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    childElement.appendChild(createElement('div', {\n                        innerHTML: argsData.content,\n                        id: 'StringTemplate',\n                        styles: getFontStyle(argsData.textStyle)\n                    }));\n                }\n                _this.updateLocation(childElement, axis, annotation);\n                element.appendChild(childElement);\n                var parentElement = document.getElementById(_this.elementId + '_Secondary_Element');\n                if (_this.gauge.isBlazor && annotationIndex === (_this.gauge.axes[axisIndex].annotations.length - 1) &&\n                    element && parentElement) {\n                    parentElement.appendChild(element);\n                    for (var i = 0; i < _this.gauge.axes[axisIndex].annotations.length; i++) {\n                        updateBlazorTemplate(_this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + i, 'ContentTemplate', _this.gauge.axes[axisIndex].annotations[i]);\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge component.\n *  @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge component.\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge component.\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge component.\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge component.\n *  @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge component.\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge component.\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge component.\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge component.\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge component.\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge component.\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge component.\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge component.\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge component.\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge component.\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge component.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge component.\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge component.\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge component.\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge component.\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge component.\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge component.\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { getPointer, Rect, getMousePosition, getElementSize, stringToNumber } from '../utils/helper';\nimport { getAngleFromValue, getLabelFormat, getLocationFromAngle } from '../utils/helper';\nimport { Browser, createElement, remove } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:max-func-body-length */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent_1 = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            if (this.gauge.isBlazor) {\n                var name_1 = tooltipArgs.name, cancel = tooltipArgs.cancel, content = tooltipArgs.content, location_1 = tooltipArgs.location, tooltip = tooltipArgs.tooltip, event_1 = tooltipArgs.event, appendInBodyTag = tooltipArgs.appendInBodyTag, type = tooltipArgs.type;\n                tooltipArgs = { name: name_1, cancel: cancel, content: content, location: location_1, tooltip: tooltip, event: event_1, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1) {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    tooltipArgs.tooltip.textStyle.color = tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor;\n                    tooltipArgs.tooltip.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily || tooltipArgs.tooltip.textStyle.fontFamily;\n                    tooltipArgs.tooltip.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        tooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, tooltipArgs.tooltip.textStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent_1 = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            if (this.gauge.isBlazor) {\n                var name_2 = rangeTooltipArgs.name, cancel = rangeTooltipArgs.cancel, content = rangeTooltipArgs.content, location_2 = rangeTooltipArgs.location, tooltip = rangeTooltipArgs.tooltip, event_2 = rangeTooltipArgs.event, appendInBodyTag = rangeTooltipArgs.appendInBodyTag, type = rangeTooltipArgs.type;\n                rangeTooltipArgs = { name: name_2, cancel: cancel, content: content, location: location_2, tooltip: tooltip, event: event_2, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1) {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily;\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipArgs.tooltip.rangeSettings.textStyle, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var annotationAxisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            if (this.gauge.isBlazor) {\n                var name_3 = annotationTooltipArgs.name, cancel = annotationTooltipArgs.cancel, content = annotationTooltipArgs.content, location_3 = annotationTooltipArgs.location, tooltip = annotationTooltipArgs.tooltip, event_3 = annotationTooltipArgs.event, appendInBodyTag = annotationTooltipArgs.appendInBodyTag, type = annotationTooltipArgs.type;\n                annotationTooltipArgs = { name: name_3, cancel: cancel, content: content, location: location_3, tooltip: tooltip, event: event_3, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1) {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.color = annotationTooltipArgs.tooltip.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        annotationTooltipArgs.tooltip.textStyle.fontFamily;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        annotationTooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTooltipArgs.tooltip.annotationSettings.textStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    ;\n    /**\n     * Method to create tooltip svg element.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            template: template,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [tooltipArg.content],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border,\n            blazorTemplate: { name: 'TooltipTemplate', parent: gauge.tooltip }\n        });\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip',\n                styles: 'position: absolute;pointer-events:none;'\n            });\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    ;\n    /**\n     * Method to get parent annotation element.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber;\n        roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n            }\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { getLocationFromAngle, PathOption, stringToNumber, TextOption, textElement, appendPath, toPixel } from '../utils/helper';\nimport { getAngleFromValue, isCompleteAngle, getPathArc, getRoundedPathArc, getRangeColor } from '../utils/helper';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:max-func-body-length */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, style, lastTextHeight, lastLabelAnchor, lastLabelAngle);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, style, currentTextHeight, anchor, angle);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, style, textHeight, anchor, angle);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            style.font.fontFamily = this.gauge.themeStyle.labelFontFamily || style.font.fontFamily;\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     * @private\n     */\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, style, textHeight, anchorPosition, angle) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        else {\n            actualLocation.x = actualLocation.x;\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element, gauge) {\n        var _this = this;\n        var startValue;\n        var endValue;\n        var rangeElement;\n        var ele;\n        ele = (document.getElementById(gauge.element.id + '_Axis_Ranges_ ' + index));\n        rangeElement = (ele) ? document.getElementById(gauge.element.id + '_Axis_Ranges_ ' + index) :\n            gauge.renderer.createGroup({ id: gauge.element.id + '_Axis_Ranges_' + index });\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var startWidth;\n        var endWidth;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        axis.ranges.map(function (range, rangeIndex) {\n            rangeIndex = rangeIndex;\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n            startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            var isAngleCross360 = (startAngle > endAngle);\n            if (axis.rangeGap != null && axis.rangeGap > 0) {\n                startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle : startAngle + (axis.rangeGap / Math.PI);\n                endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle : endAngle -\n                    (axis.rangeGap / Math.PI);\n            }\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle))) {\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                if (range.roundedCornerRadius) {\n                    range.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth), '', ''), rangeElement, gauge));\n                }\n                else {\n                    range.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' +\n                        rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, axis), '', ''), rangeElement, gauge));\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius;\n        actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { linear, getAngleFromValue, getCompleteArc, getRoundedPathArc, getLocationFromAngle, appendPath, textElement, PathOption, TextOption, calculateShapes, Size, stringToNumber } from '../utils/helper';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        axis.pointers.map(function (pointer, pointerIndex) {\n            if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n            }\n            else {\n                pointer.currentDistanceFromScale = pointer.offset;\n            }\n            range = axis.visibleRange;\n            pointer.pathElement = [];\n            _this.calculatePointerRadius(axis, pointer);\n            childElement = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n            });\n            _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n            _this.setPointerValue(axis, pointer, pointer.currentValue);\n            pointerElement.appendChild(childElement);\n            if (animate) {\n                _this.doPointerAnimation(pointer, axis);\n            }\n        });\n        element.appendChild(pointerElement);\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     * @return {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        var color = pointer.color || this.gauge.themeStyle.needleColor;\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, color, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        var capcolor = pointer.cap.color || this.gauge.themeStyle.capColor;\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, capcolor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle && !checkMinValue ? [startAngle, startAngle = endAngle - 1][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        var roundStartAngle;\n        var roundEndAngle;\n        var oldStartValue;\n        var oldEndValue;\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var angle;\n        angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            textElement(textOption, pointer.textStyle, pointer.textStyle.color, parentElement, 'pointer-events : auto; ');\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                    _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, _this.gauge.isBlazor ? {} : { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, _this.gauge.isBlazor ? {} : { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { calculateSum, VisibleLabels, measureText, isCompleteAngle, getLocationFromAngle } from '../utils/helper';\nimport { Size, Rect, stringToNumber, getLabelFormat } from '../utils/helper';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    /* tslint:disable:max-func-body-length */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerX) && isNullOrUndefined(this_1.gauge.centerY)) {\n                var startAngle = void 0;\n                var endAngle = void 0;\n                startAngle = axis.startAngle;\n                startAngle = !isCompleteAngle(startAngle, axis.endAngle) ? startAngle : [0, endAngle = 360][0];\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : endPoint;\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endYDiff = Math.abs(startPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            if (this_1.gauge.isBlazor) {\n                var cancel = args.cancel, name_1 = args.name, currentRadius_1 = args.currentRadius, midPoint = args.midPoint;\n                args = { cancel: cancel, name: name_1, currentRadius: currentRadius_1, midPoint: midPoint };\n            }\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                if (!_this.gauge.isBlazor) {\n                    _this.calculateVisibleLabels(axis);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var _this = this;\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        var _loop_2 = function (i) {\n            roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                    format(roundValue),\n                value: roundValue\n            };\n            if (this_2.gauge.isBlazor) {\n                var axis_1 = argsData.axis, blazorArgsData = __rest(argsData, [\"axis\"]);\n                argsData = blazorArgsData;\n            }\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                    if (i === max && _this.gauge.isBlazor && document.getElementById(_this.gauge.element.id + '_AxesCollection')) {\n                        var currentLast = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value\n                            : null;\n                        if (currentLast === axis.visibleRange.max || axis.showLastLabel !== true) {\n                            _this.getMaxLabelWidth(_this.gauge, axis);\n                            axis.nearSize = axis.nearSize + axis.maxLabelSize.height;\n                            axis.farSize = axis.farSize + axis.maxLabelSize.height;\n                            _this.axisRenderer.drawAxisLabels(axis, _this.gauge.axes.length - 1, (document.getElementById(_this.gauge.element.id + '_Axis_Group_' + (_this.gauge.axes.length - 1))), _this.gauge);\n                        }\n                    }\n                }\n            };\n            axisLabelRenderSuccess.bind(this_2);\n            this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        };\n        var this_2 = this;\n        for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n            _loop_2(i);\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            if (this.gauge.isBlazor) {\n                var axis_2 = argsData.axis, blazorArgsData = __rest(argsData, [\"axis\"]);\n                argsData = blazorArgsData;\n            }\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                    if (_this.gauge.isBlazor && document.getElementById(_this.gauge.element.id + '_AxesCollection')) {\n                        _this.getMaxLabelWidth(_this.gauge, axis);\n                        axis.farSize = axis.farSize + axis.maxLabelSize.height;\n                        axis.nearSize = axis.nearSize + axis.maxLabelSize.height;\n                        _this.axisRenderer.drawAxisLabels(axis, _this.gauge.axes.length - 1, (document.getElementById(_this.gauge.element.id + '_Axis_Group_' + (_this.gauge.axes.length - 1))), _this.gauge);\n                    }\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element, gauge);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     * @return {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { appendPath, textElement, PathOption, TextOption, calculateShapes, textTrim, removeElement } from '../utils/helper';\nimport { Rect, Size, GaugeLocation, stringToNumber, measureText, RectOption, getElement, showTooltip } from '../utils/helper';\nimport { Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Font, Border, Margin } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**  @private */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds, redraw) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID, redraw);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            var start = void 0; // starting shape center x,y position && to resolve lint error used new line for declaration\n            start = new GaugeLocation(legendBounds.x + padding + (legend.shapeWidth / 2), legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.setAttribute('style', 'cursor: ' + ((!legend.toggleVisibility) ? 'auto' : 'pointer'));\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup, redraw);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = '#545454';\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.setAttribute('style', 'cursor: pointer');\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = '1/' + this.totalPages;\n        var pageTextElement = textElement(textOption, legend.textStyle, legend.textStyle.color || this.gauge.themeStyle.labelColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5), y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +\n            padding + size.width)) + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageLength = page * this.maxColumns;\n            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = 'translate(-' + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = (pageNumber) + '/' + this.totalPages;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        textOptions.text = legendOption.text;\n        textOptions.x = legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        var element = textElement(textOptions, legend.textStyle, fontcolor, group, '');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill : this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, '0', '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                this.pageXCollections.push(legendOption.location.x - (this.legend.shapeWidth / 2) - padding);\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n            if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width, this.legendBounds.x);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    /**\n     * To show or hide the legend on clicking the legend.\n     * @return {void}\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled = !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                rangeElement.style.visibility = 'visible';\n                shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex].fill);\n                textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                rangeElement.style.visibility = 'hidden';\n                shapeElement.setAttribute('fill', hiddenColor);\n                textElement_1.setAttribute('fill', hiddenColor);\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[0], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width, legendX) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id, redraw) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath, redraw);\n        legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement, redraw, isAnimate, x, y, start, direction, forceAnimate, isRect, previousRect, animateDuration) {\n        if (isAnimate === void 0) { isAnimate = false; }\n        if (x === void 0) { x = 'x'; }\n        if (y === void 0) { y = 'y'; }\n        if (forceAnimate === void 0) { forceAnimate = false; }\n        if (isRect === void 0) { isRect = false; }\n        if (previousRect === void 0) { previousRect = null; }\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        var duration = animateDuration ? animateDuration : 300;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /** @private */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n    };\n    /**\n     * To find maximum column size for legend\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.move = function (event) {\n        var x = this.gauge.mouseX;\n        var y = this.gauge.mouseY;\n        var targetId = event.target.id;\n        if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1) {\n            var axisIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n            var rangeIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n            var text = '';\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legends = _a[_i];\n                if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                    text = legends.originalText;\n                }\n            }\n            showTooltip(text, x, y, this.gauge.element.offsetWidth, this.gauge.element.id + '_EJ2_Legend_Tooltip', getElement(this.gauge.element.id + '_Secondary_Element'));\n        }\n        else {\n            removeElement(this.gauge.element.id + '_EJ2_Legend_Tooltip');\n        }\n    };\n    /**\n     * Get module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (circulargauge) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the Pdf export for gauge\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     * @param control\n     */\n    function PdfExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     * @param orientation\n     * @param allowDownload\n     * @private\n     */\n    PdfExport.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.\n                    drawImage(new PdfBitmap(imageString), 0, 0, _this.control.availableSize.width, _this.control.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     * @return {void}\n     * @private\n     */\n    PdfExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\nimport { triggerDownload } from '../utils/helper';\n/**\n * Represent the Image Export for gauge\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     * @param control\n     */\n    function ImageExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     * @param allowDownload\n     * @private\n     */\n    ImageExport.prototype.export = function (type, fileName, allowDownload) {\n        var _this = this;\n        var promise = new Promise(function (resolve, reject) {\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                _this.control.svgObject.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     * @return {void}\n     * @private\n     */\n    ImageExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { print as printWindow, createElement } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from './constants';\n/**\n * Represent the print for gauge\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     * @param control\n     */\n    function Print(control) {\n        this.control = control;\n    }\n    /**\n     * To print the gauge\n     * @param elements\n     * @private\n     */\n    Print.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     * @param elements\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print.\n     * @return {void}\n     * @private\n     */\n    Print.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component, isBlazor } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { TextOption, textElement, RectOption, getAngleFromLocation } from './utils/helper';\nimport { getValueFromAngle, removeElement, getRange } from './utils/helper';\nimport { Size, stringToNumber, measureText, Rect, GaugeLocation, getElement, getPointer, setStyles, toPixel } from './utils/helper';\nimport { getAngleFromValue, getPathArc } from './utils/helper';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove, } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { LegendSettings, Legend } from './legend/legend';\nimport { PdfExport } from './model/pdf-export';\nimport { ImageExport } from './model/image-export';\nimport { Print } from './model/print';\n/**\n * Represents the circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isDrag = false;\n        return _this;\n    }\n    CircularGauge_1 = CircularGauge;\n    /**\n     *  To create svg object, renderer and binding events for the container.\n     */\n    //tslint:disable\n    CircularGauge.prototype.preRender = function () {\n        this.isBlazor = isBlazor();\n        if (!this.isBlazor) {\n            this.allowPrint = true;\n            this.allowImageExport = true;\n            this.allowPdfExport = true;\n            CircularGauge_1.Inject(Print);\n            CircularGauge_1.Inject(PdfExport);\n            CircularGauge_1.Inject(ImageExport);\n        }\n        this.unWireEvents();\n        this.trigger(load, this.isBlazor ? null : { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            var dragBlazorArgs;\n            var tooltip = _this.tooltipModule;\n            if (!args.cancel) {\n                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd,\n                    };\n                    dragBlazorArgs = {\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        pointerIndex: dragPointInd,\n                        axisIndex: dragAxisInd,\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = dragBlazorArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, _this.isBlazor ? dragBlazorArgs : dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.slice(-1), 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd,\n                    };\n                    dragBlazorArgs = {\n                        name: dragMove,\n                        type: rangeMove,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd,\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, _this.isBlazor ? dragBlazorArgs : dragArgs);\n                }\n            }\n        });\n        if (!this.isTouch) {\n            if (this.legendModule && this.legendSettings.visible) {\n                this.legendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var gauge = this;\n            var value = void 0;\n            value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                {\n                    var previousValue1 = this.activeRange.currentValue;\n                    this.activeRange.currentValue = value;\n                    var avg = void 0;\n                    var add = (this.activeRange.end - this.activeRange.start);\n                    var div = add / 2;\n                    avg = parseFloat(this.activeRange.start.toString()) + div;\n                    this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : this.activeRange.start);\n                    this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : this.activeRange.end) : value;\n                    this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                    this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n                }\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, _this.isBlazor ? {\n                    name: dragStart,\n                    type: pointerStart,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd,\n                } : {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd,\n                });\n                if (_this.enablePointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.slice(-1), 0);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, _this.isBlazor ? {\n                    name: dragStart,\n                    type: rangeStart,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd,\n                } : {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd,\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        var blazorArgs = {\n            cancel: args.cancel, target: args.target, name: args.name, x: args.x, y: args.y\n        };\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltipInterval;\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, this.isBlazor ? blazorArgs : args);\n        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, this.isBlazor ? {\n                name: dragEnd,\n                type: pointerEnd,\n                currentValue: this.activePointer.currentValue,\n                pointerIndex: pointerInd,\n                axisIndex: axisInd\n            } : {\n                name: dragEnd,\n                type: pointerEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, this.isBlazor ? {\n                name: dragEnd,\n                type: rangeEnd,\n                rangeIndex: rangeInd,\n                axisIndex: axisInd\n            } : {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n            this.isDrag = false;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     * @return {IMouseEventArgs}\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: !this.isBlazor ? this : null,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        this.animatePointer = false;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        else if (this.element.classList.contains('e-circulargauge')) {\n            this.resizeTo = window.setTimeout(function () {\n                _this.createSvg();\n                _this.calculateBounds();\n                _this.renderElements();\n                args.currentSize = _this.availableSize;\n                if (_this.isBlazor) {\n                    var previousSize = args.previousSize, name_1 = args.name, currentSize = args.currentSize;\n                    args = { previousSize: previousSize, name: name_1, currentSize: currentSize };\n                }\n                _this.trigger(resized, args);\n            }, 500);\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        for (var i = 0; i < this.axes.length; i++) {\n            for (var j = 0; j < this.axes[i].annotations.length; j++) {\n                resetBlazorTemplate(this.element.id + '_Axis' + i + '_ContentTemplate' + j, '_ContentTemplate');\n            }\n        }\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        var centerX = this.centerX !== null ?\n            stringToNumber(this.centerX, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n        var centerY = this.centerY !== null ?\n            stringToNumber(this.centerY, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        this.midPoint = new GaugeLocation(centerX, centerY);\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, this.isBlazor ? {} : { gauge: this });\n        removeElement(\"gauge-measuretext\");\n    };\n    /**\n     * Method to render legend for accumulation chart\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;\n            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param conetent - Specifies the content for the annotation in circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            if (!isElementExist) {\n                getElement(this.element.id + '_Secondary_Element').appendChild(element);\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     * @param id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     * @param type - Specifies the type of the export.\n     * @param fileName - Specifies the file name for the exported file.\n     * @param orientation - Specified the orientation for the exported pdf document.\n     * @param allowDownload - Specifies whether to download as a file.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type == 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    /**\n     * Method to set mouse x, y from events\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param start - Specifies the start value for the current range in circular gauge.\n     * @param end - Specifies the end value for the current range i circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'legendSettings':\n                    refreshWithoutAnimation = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    var CircularGauge_1;\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = CircularGauge_1 = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n","import * as index from './index';\nindex.CircularGauge.Inject(index.GaugeTooltip, index.Annotations, index.Legend, index.Print, index.PdfExport, index.ImageExport);\nexport * from './index';\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","setStyles","element","fill","border","setStyleAttribute","stroke","stroke-width","width","measureElementRect","bounds","getBoundingClientRect","removeElement","stringToNumber","containerSize","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","gauge","functionName","calculateSum","from","to","values","sum","length","linear","currentTime","startValue","endValue","duration","Math","cos","PI","getAngleFromValue","maximumValue","minimumValue","startAngle","endAngle","isClockWise","angle","isCompleteAngle","getDegree","round","degree","getValueFromAngle","totalAngle","floor","getAngleFromLocation","center","point","atan2","getLocationFromAngle","radius","radian","GaugeLocation","sin","getPathArc","start","end","startWidth","endWidth","range","axis","startRadius","isNullOrUndefined","position","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","getRangePath","getCirclePath","innerStart","innerEnd","clockWise","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getRoundedPath","outerOldEnd","innerOldEnd","outerOldStart","innerOldStart","getCompleteArc","innerRadius","checkMinValue","getCompletePath","getElement","getTemplateFunction","template","templateFn","isBlazor","numb","match","toString","replace","querySelectorAll","charAt","templateComplier","querySelector","trim","e","remove","getPointer","targetId","tempString","split","axisIndex","pointerIndex","getRange","rangeIndex","getElementSize","elementSize","tooltipData","templateElement","templateLength","height","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getLabelFormat","format","calculateShapes","location","shape","url","path","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","space","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","textTrim","maxWidth","label","i","substring","showTooltip","areaWidth","tooltip","triggerDownload","fileName","type","isDownload","attrs","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","window","bubbles","cancelable","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","tooltipFillColor","tooltipFontColor","labelColor","lineColor","majorTickColor","minorTickColor","pointerColor","capColor","needleColor","needleTailColor","fontSize","labelFontFamily","tooltipFillOpacity","tooltipTextOpacity","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","axisLabelFont","legendLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","Annotations","elementId","renderAnnotation","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","name_1","trigger","observedArgs","length_1","slice","updateLocation","updateBlazorTemplate","currentRadius","midPoint","description","getModuleName","destroy","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","abs","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent_1","RegExp","tooltipArgs","pointer","event","appendInBodyTag","pointerTooltip","tooltipRect","findPosition","themeStyle","svgTooltip","svgTooltipCreate","arrowInverted","appendTo","parseFloat","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent_1","rangeTooltipArgs","rangeTooltip","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","name_3","location_3","event_3","annotationTooltip","annotationTemplate","elementSizeAn","tooltipPosition","removeTooltip","tooltipArg","Tooltip","enable","data","enableAnimation","inverted","areaBounds","blazorTemplate","className","child","roundingPlaces","toFixed","addLeft","addTop","addHeight","addWidth","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","drawAxisLine","lineStyle","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","lastlabel","FindAxisLabelCollision","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","push","axisLineWidth","drawAxisRange","rangeElement","ele","roundedStartAngle","roundedEndAngle","pathElement","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","isAngleCross360","rangeGap","startAndEndRangeGap","roundedCornerRadius","process","ceil","rangeColors","PointerRenderer","drawPointers","animate","pointerElement","pointers","calculatePointerRadius","setPointerValue","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","needleStartWidth","needleEndWidth","mid","needleTail","capcolor","cap","roundStartAngle","roundEndAngle","oldStartValue","oldEndValue","minRadius","drawMarkerPointer","shapeBasedOnPosition","markerHeight","imageUrl","drawRangeBarPointer","animation","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","__rest","s","t","getOwnPropertySymbols","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","this_1","_i","_a","moveToCenter","centerX","centerY","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","gaugeRect","calculateNumericInterval","currentRadius_1","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","minimum","maximum","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","pow","log","currentInterval","this_2","blazorArgsData","axisLabelRenderSuccess","getMaxLabelWidth","lastLabel","maxVal","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","Location","LegendSettings","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendSettings","legendID","click","getLegendOptions","legendCollection","j","legendText","LegendOptions","visible","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","redraw","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translatePage","pagingText","page","pageNumber","translate","textContent","group","fontcolor","prevLegend","maxColumnWidth","previousBound","totalRowCount","availablewidth","getAvailWidth","legendItemsId","toggledIndex","legendItemsId_1","isNaN","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","visibility","legendCollections","legendCollections_1","pageUp","pageText","tx","legendX","drawRectangle","legendItemsGroup","clippath","createClipPath","isAnimate","forceAnimate","isRect","previousRect","animateDuration","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","columns_1","move","mouseX","mouseY","legends","originalText","offsetWidth","circulargauge","PdfExport","control","export","orientation","allowDownload","Promise","resolve","reject","userAgent","PdfPageOrientation","Landscape","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image","Image","context","getContext","onload","drawImage","revokeObjectURL","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","ImageExport","svgData","outerHTML","image_1","context_1","Print","print","elements","printWindow","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","div","forEach","cloneNode","Element","CircularGauge","CircularGauge_1","preRender","allowPrint","allowImageExport","allowPdfExport","Inject","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderComplete","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","isPointer","mouseLeave","isTouch","gaugeResize","setGaugeStyle","setMouseXY","legendModule","getMouseArgs","dragArgs","dragBlazorArgs","tooltipModule","enableRangeDrag","activePointer","dragPointInd","dragAxisInd","activeAxis","previousValue","pointerDrag","activeRange","dragRangeInd","rangeDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","previousValue1","avg","pointInd","axisInd","rangeInd","blazorArgs","pointerInd","clientX","clientY","previousSize","currentSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","resetBlazorTemplate","childNodes","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","containerHeight","offsetHeight","borderWidth","join","titleHeight","title","titleStyle","renderBorder","renderTitle","tabIndex","isProtectedOnChange","setAnnotationValue","isElementExist","printModule","pdfExportModule","imageExportModule","svgRect","setRangeValue","axisRange","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","Event","NotifyPropertyChanges","Component","index.CircularGauge","index.GaugeTooltip","index.Annotations","index.Legend","index.Print","index.PdfExport","index.ImageExport"],"mappings":"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"}