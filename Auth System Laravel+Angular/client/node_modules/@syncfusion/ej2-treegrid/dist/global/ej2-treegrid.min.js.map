{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex],\n            requestType: action\n        });\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselecting = 'rowDeselecting';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns <= this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        for (var i = 0; i < Object.keys(data).length; i++) {\n            var tempData = data[i];\n            this.hierarchyData.push(extend({}, tempData));\n            if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                this.taskIds.push(tempData[this.parent.idMapping]);\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            _this.clearTemplate(args, index);\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.updateSelectionProperty = function () {\n        if (!isBlazor()) {\n            this.selectedRowIndex = this.grid.selectedRowIndex;\n        }\n        else if (isBlazor() && this.isServerRendered) {\n            this.allowServerDataBinding = false;\n            this.setProperties({ selectedRowIndex: this.grid.selectedRowIndex }, true);\n            this.allowServerDataBinding = true;\n        }\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var updateColTypeObj = 'updateColTypeObj';\n        if (!isNullOrUndefined(this.grid.editModule)) {\n            this.grid.editModule[updateColTypeObj]();\n        }\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.cellSelected = function (args) {\n            var cellSelectedArgs;\n            if (isBlazor() && _this.isServerRendered) {\n                cellSelectedArgs = { data: args.data, cellIndex: args.cellIndex };\n                _this.trigger('cellSelected', cellSelectedArgs);\n            }\n            else {\n                _this.trigger('cellSelected', args);\n            }\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridRowSelectEvents();\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.extendedGridBatchEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.extendedGridRowSelectEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = function (args) {\n            if (isNullOrUndefined(args.target) || !(args.target.classList.contains('e-treegridexpand') ||\n                args.target.classList.contains('e-treegridcollapse'))) {\n                treeGrid.notify(events.rowSelecting, args);\n                _this.trigger(events.rowSelecting, args);\n            }\n            else {\n                args.cancel = true;\n            }\n        };\n        this.grid.rowSelected = function (args) {\n            _this.updateSelectionProperty();\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.updateSelectionProperty();\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.rowDeselecting = function (args) {\n            if (isNullOrUndefined(args.target) || !(args.target.classList.contains('e-treegridexpand') ||\n                args.target.classList.contains('e-treegridcollapse'))) {\n                treeGrid.notify(events.rowDeselecting, args);\n                _this.trigger(events.rowDeselecting, args);\n            }\n            else {\n                args.cancel = true;\n            }\n        };\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n    };\n    TreeGrid.prototype.extendedGridBatchEvents = function () {\n        var _this = this;\n        var beforeBatchSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beforeBatchSave)) {\n                beforeBatchSave = this.grid.beforeBatchSave;\n            }\n        }\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beforeBatchSave && typeof beforeBatchSave === 'function') {\n                    beforeBatchSave.apply(_this, [args]);\n                }\n            }\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            var griddata = this.grid.getCurrentViewRecords()[index];\n            extend(griddata, data);\n            this.grid.editModule.updateRow(index, griddata);\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        var data = rowData;\n        data.level = level;\n        data.index = record.index;\n        data.childRecords = record.childRecords;\n        data.taskData = record.taskData;\n        data.uniqueID = record.uniqueID;\n        data.parentItem = record.parentItem;\n        data.checkboxState = record.checkboxState;\n        data.hasChildRecords = record.hasChildRecords;\n        data.parentUniqueID = record.parentUniqueID;\n        data.expanded = record.expanded;\n        this.grid.setRowData(key, data);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.allowServerDataBinding = false;\n        }\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n        if (isBlazor() && this.isServerRendered) {\n            this.allowServerDataBinding = true;\n        }\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.refresh();\n            srcControl.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                if (this.treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_2;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            if (childRecordsLength) {\n                var _loop_1 = function (summaryRowIndex, len_1) {\n                    var item = void 0;\n                    item = {};\n                    for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                        var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                            this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                        item[field] = null;\n                    }\n                    if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        var idx_1;\n                        flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                            idx_1 = i;\n                            return;\n                        } });\n                        var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                        var summaryParent = extend({}, parentRecord);\n                        delete summaryParent.childRecords;\n                        delete summaryParent[this_1.parent.childMapping];\n                        setValue('parentItem', summaryParent, item);\n                        var level = getObject('level', summaryParent);\n                        setValue('level', level + 1, item);\n                        var index = getObject('index', summaryParent);\n                        setValue('isSummaryRow', true, item);\n                        setValue('parentUniqueID', summaryParent.uniqueID, item);\n                        if (isSort) {\n                            var childRecords = getObject('childRecords', parentRecord);\n                            if (childRecords.length) {\n                                childRecords.push(item);\n                            }\n                        }\n                        flatRecords.splice(currentIndex, 0, item);\n                    }\n                    else {\n                        return \"continue\";\n                    }\n                };\n                var this_1 = this;\n                for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                    _loop_1(summaryRowIndex, len_1);\n                }\n                this.flatChildRecords = [];\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            var treeCell = void 0;\n            if (this.parent.allowRowDragAndDrop === true && !(this.parent.rowDropSettings.targetID)) {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex + 1];\n            }\n            else {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex];\n            }\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            var mRow = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row) === -1 && this.parent.frozenColumns > 0) ?\n                    this.parent.grid.getMovableRows().indexOf(row) : this.parent.getRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.blazorTemplates(args);\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                if (this.parent.frozenColumns > 0) {\n                    mRow = this.parent.grid.getMovableRows()[rowIndex_1];\n                    removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n                    removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                }\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                this.parent.grid.focusModule.restoreFocus();\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' ||\n                this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                this.parent.grid.contentModule[r].splice(0, 1);\n                this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    this.parent.grid.contentModule[frows].splice(0, 1);\n                    this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n                this.contents.scrollTop = 0;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            if (viewInfo.event === 'refresh-virtual-block') {\n                this.parent.refresh();\n            }\n            else {\n                this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', info, this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","taskData","hasOwnProperty","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","parentUniqueID","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","TreeClipboard","_this","call","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","window","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","args","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","getModuleName","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","enableVirtualization","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","collapsed","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataStateChange","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","updateSelectionProperty","allowServerDataBinding","selectedRowIndex","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","treeGrid","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","cellSelected","cellSelectedArgs","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","printComplete","actionFailure","extendedGridRowSelectEvents","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","extendedGridBatchEvents","bindGridDragEvents","bindCallBackEvents","rowSelecting","rowSelected","rowDeselected","rowDeselecting","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","beginEdit","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","begineditArgs","cellEdit","cellSave","events_1","boundedEvents","pop","isExpandRefresh","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","cellSaved","promise","beforeBatchSave","batchAdd","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionComplete","actionBegin","expandicon","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","stackedHeader","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","srcControl","targetIndex","isNaN","getTargetIdx","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_2","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","types","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","actualIndex","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","startIndex","endIndex","indexValue","Edit","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","doubleClickTarget","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","treeCell","mRow","form","rowIndex_1","primaryKeys_1","blazorTemplates","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","previousValue","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","onDataReady","observers","observes","scrollArgs","scrollListeners","setVirtualHeight","getRowHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze"],"mappings":"uEAIO,SAASA,GAAaC,GACzB,GAAIA,EAAOC,qBAAsBC,eAAa,CAC1C,GAAIC,GAAUH,EAAOC,WAAWE,OAChC,OAAQA,aAAmBC,iBACtBD,YAAmBE,kBAAmBF,YAAmBG,qBACzDH,YAAmBI,iBAAiBJ,YAAmBK,cAEhE,OAAO,EAEX,QAAgBC,GAAgBT,GAC5B,SAAIA,EAAOC,YAAc,UAAYD,GAAOC,YAKhD,QAAgBS,GAAiBV,GAC7B,IAAK,GAAIW,GAAI,EAAGA,EAAIX,EAAOY,QAAQC,OAAQF,IACvC,GAAIX,EAAOY,QAAQD,GAAGG,aAClB,OAAO,CAGf,QAAO,EAEX,QAAgBC,GAAuBf,GACnC,SAAMgB,oBAAkBhB,EAAOiB,KAAKC,eAAeC,MAA2C,KAAnCnB,EAAOiB,KAAKC,eAAeC,KACzC,UAAxCnB,EAAOkB,eAAeE,eAAqE,SAAxCpB,EAAOkB,eAAeE,kBACzEpB,EAAOqB,iBAAkBrB,EAAOiB,KAAKK,eAAeV,QAAQC,QAChB,UAAxCb,EAAOsB,eAAeF,eAAqE,SAAxCpB,EAAOsB,eAAeF,gBAQtF,QAAgBG,GAAkBC,GAC9B,GAAIC,EACJA,KAEA,KAAK,GAAId,GAAI,EAAGe,EADIC,OAAOC,KAAKJ,GAASX,OACJF,EAAIe,EAAKf,IAC3BkB,YAAU,kBAAmBL,EAAQb,KAEhDc,EAAMK,KAAKN,EAAQb,GAG3B,OAAOc,GAKX,QAAgBM,GAAgB/B,EAAQgC,EAAQC,GAC5C,GAEIC,GAFAC,EAAenB,oBAAkBgB,EAAOI,YAAc,KACtDC,EAAcrC,EAAQgC,EAAOI,WAAWE,SAE5C,OAAoB,OAAhBH,KACInC,EAAOuC,eAAkBvB,oBAAkBmB,EAAanC,EAAOwC,sBAC3DL,EAAanC,EAAOwC,qBAIO,IAA1BL,EAAaM,YAGbN,EAAaC,aAClBF,EAAcG,EAAcrC,EAAQmC,EAAaC,WAAWE,UACxDJ,GAAelC,EAAOuC,gBAAkBvB,oBAAkBkB,EAAYlC,EAAOwC,uBACzEN,EAAYlC,EAAOwC,qBACvBN,EAAYO,UAAW,GAChB,KAEPP,IAAwC,IAAzBA,EAAYO,aAGtBP,GACEH,EAAgB/B,EAAQkC,EAAaD,OAjBhDE,EAAaM,UAAW,GACjB,IA+BnB,QAAgBC,GAAoBlB,GAChC,GAAIC,KACJ,IAAIT,oBAAkBQ,KAAcA,EAAQmB,kBAAoB3B,oBAAkBQ,EAAQoB,gBAClFpB,EAAQoB,aAAa/B,OACzB,QAEJ,KAAKG,oBAAkBQ,EAAQoB,cAE3B,IAAK,GADDA,GAAepB,EAAQoB,aAClBjC,EAAI,EAAGe,EAAMC,OAAOC,KAAKgB,GAAc/B,OAAQF,EAAIe,EAAKf,IAC7Dc,EAAMK,KAAKc,EAAajC,KACpBiC,EAAajC,GAAGgC,kBAAqB3B,oBAAkB4B,EAAajC,GAAGiC,eACvEA,EAAajC,GAAGiC,aAAa/B,UAC7BY,EAAQA,EAAMoB,OAAOH,EAAoBE,EAAajC,KAIlE,OAAOc,GAEX,QAAgBqB,GAAU9C,GACtB,GAAID,EAAaC,GAAS,CACtB,GAAI+C,GAAK/C,EAAOC,UAChB,QAAQe,oBAAkB+B,EAAGC,OAEjC,OAAO,EAEX,QAAgBC,GAAYC,GAIxB,IAAK,GAFDC,GACAvB,EAFAwB,KAGKzC,EAAI,EAAGuC,GAASvC,EAAIuC,EAAMrC,OAAQF,IAAK,CAC5CiB,EAAOD,OAAOC,KAAKsB,EAAMvC,IACzBwC,IACA,KAAK,GAAIE,GAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IAC7BF,EAAIvB,EAAKyB,IAAMH,EAAMvC,GAAGiB,EAAKyB,GAEjCD,GAAOtB,KAAKqB,GAEhB,MAAOC,GAEX,QAAgBE,GAAaC,GAMzB,aALOA,GAAMZ,sBACNY,GAAMX,mBACNW,GAAMC,YACND,GAAMnB,iBACNmB,GAAME,MACNF,EAEX,QAAgBlB,GAAcrC,EAAQuD,EAAOG,GACzC,GAAIA,EAAe,CAEf,MAAO1D,GAAe,yBAAEuD,GAIxB,MAAOvD,GAAS,mBAAEuD,GChJnB,QAASI,GAAWC,EAASC,EAASC,EAAiBC,EAAaC,EAAeC,EAAYC,GAClG,GAGIvD,GACA0C,EAEAc,EANAZ,EAAQK,EAAQL,MAChBa,EAASR,EAAQQ,OAMjBjD,EAAM0C,EAAQ5C,KAAKoD,0BAA0B,GAC7CC,EAAWT,EAAQ5D,qBAAsBC,eACzC2D,EAAQ5D,WAAWA,WAAWsE,KAAOV,EAAQ5D,WAC7CuE,KACAC,EAAelB,EACfmB,GAAS,CAIb,IAHkC,UAA9Bb,EAAQc,aAAaC,OACrBT,EAAeN,EAAQ5C,KAAK4D,WAAWC,mBAE5B,QAAXV,GAAgC,cAAXA,GAAyD,UAA9BP,EAAQc,aAAaC,MAClET,EAAyB,aAAEtD,OAAU,CACxC,GAAIkE,GAASC,EAAUpB,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,EAChGX,GAAQwB,EAAOxB,MACfmB,EAASK,EAAOL,OAQpB,GANInB,YAAiB0B,OACjBT,EAAevB,EAAYM,GAG3BiB,EAAa1C,KAAKoD,YAAW3B,KAE5BmB,IAAsB,QAAXN,GAC6B,QAAxCP,EAAQc,aAAaQ,gBAAoE,WAAxCtB,EAAQc,aAAaQ,gBACvE,IAAK,GAAIC,GAAI,EAAGA,EAAIZ,EAAa3D,OAAQuE,IAAK,CACJ,gBAA1BZ,GAAaY,GAAGjE,KACxBqD,EAAaY,GAAKZ,EAAaY,GAAGjE,GAEtC,IAAIS,GAAOD,OAAOC,KAAK4C,EAAaY,GAAGC,SACvC1E,GAAI2D,EAASzD,MA0Eb,MAAOF,KAAOA,GAAK,GAEC,UA3EN,WACV,GAAI2D,EAAS3D,GAAGQ,KAASqD,EAAaY,GAAGjE,GAAM,CAC3C,GAAe,WAAXiD,EAuBC,CACD,GAAe,SAAXA,EACA,IAAKf,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACrBiB,EAAS3D,GAAG2E,eAAe1D,EAAKyB,MAAuC,SAA9BQ,EAAQc,aAAaC,OACzD5D,oBAAkBmD,IAAyD,IAAxCA,EAA2B,eAAEtD,QAClEe,EAAKyB,KAAOY,KACE5B,EAAcwB,EAASW,EAAaY,GAAG9C,UAC7C+C,SAASzD,EAAKyB,IAAMiB,EAAS3D,GAAGiB,EAAKyB,IAAMmB,EAAaY,GAAGxD,EAAKyB,SAIlF,IAAe,QAAXe,GAA+B,cAAXA,EAAwB,CACjD,GAAIZ,OAAQ,EACgC,WAAxCK,EAAQc,aAAaQ,eACjBrB,GACAW,EAAaY,SAASxB,EAAQ0B,iBAAmBjB,EAAS3D,GAAGkD,EAAQ2B,WACrElB,EAASmB,OAAO9E,EAAI,EAAG,EAAG8D,EAAaY,YAGlCf,EAAS3D,GAAG2E,eAAezB,EAAQ6B,gBACpCpB,EAAS3D,GAAGkD,EAAQ6B,kBAExBpB,EAAS3D,GAAGkD,EAAQ6B,cAAc5D,KAAK2C,EAAaY,UACpDM,EAAgBxE,EAAKmD,EAAS3D,GAAIyD,EAAQP,EAASC,EAAiBW,IAG3B,UAAxCZ,EAAQc,aAAaQ,gBAC1Bb,EAASmB,OAAO9E,EAAI,EAAG,EAAG8D,EAAaY,UACvCM,EAAgBxE,EAAKmD,EAAS3D,GAAIyD,EAAQP,EAASC,EAAiBW,IAE9DV,EAIuC,UAAxCF,EAAQc,aAAaQ,iBAC1Bb,EAASmB,OAAO9E,EAAG,EAAG8D,EAAaY,UACnCM,EAAgBxE,EAAKmD,EAAS3D,GAAIyD,EAAQP,EAASC,EAAiBW,KALpEjB,EAAQ,EACRc,EAASmB,OAAOjC,EAAO,EAAGiB,EAAaY,WAO/C,MAAO,QA7DP,GAAIO,GAAgBtB,EAAS3D,EAE7B,IADA2D,EAASmB,OAAO9E,EAAG,GACfmD,EAAiB,CACjB,IAAK9C,oBAAkB4E,EAAc/B,EAAQ0B,kBAKzC,IAAK,GAJDM,GAAahC,EAAQiC,SAASC,OAAO,SAAUC,GAC/C,MAAOA,GAAEnC,EAAQ2B,aAAeI,EAAc/B,EAAQ0B,mBACvD,GACC3C,EAAeiD,EAAaA,EAAWhC,EAAQ6B,iBAC1CO,EAAIrD,EAAa/B,OAAS,EAAGoF,GAAK,EAAGA,IAC1C,GAAIrD,EAAaqD,GAAGpC,EAAQ2B,aAAeI,EAAc/B,EAAQ2B,WAAY,CACzE5C,EAAa6C,OAAOQ,EAAG,GAClBrD,EAAa/B,SACdgF,EAAWlD,iBAAkB,EAC7BgD,EAAgBxE,EAAK0E,EAAYzB,EAAQP,EAASC,GAEtD,OAIZ,MAAO,aA6CT9C,qBAAkBsD,EAAS3D,GAAGkD,EAAQ6B,gBACxCQ,EAAmB5B,EAAS3D,GAAGkD,EAAQ6B,cAAelB,EAAaY,GAAIhB,EAAQjD,EAAK0C,EAASC,EAAiBW,EAAcR,IAC5H0B,EAAgBxE,EAAKmD,EAAS3D,GAAIyD,EAAQP,EAASC,UAY3E,QAAgBkB,GAAUpB,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,GAC/F,GAAIX,GACAmB,GAAS,EACTyB,EAAqBtC,EAAQ5C,KAAKmF,uBAGtC,QAFA7C,EAAQ2B,YAAWtB,EAAQL,OAC3BA,EAAQD,EAAaC,GACbM,EAAQc,aAAaQ,gBACzB,IAAK,MACDb,EAAS+B,QAAQ9C,GACjBmB,GAAS,CACT,MACJ,KAAK,SACDJ,EAASxC,KAAKyB,GACdmB,GAAS,CACT,MACJ,KAAK,QAOGnB,EAAQD,EANPtC,oBAAkBkD,GAKnBX,EAAQ2B,YAAWiB,EAAmBpC,EAAc,IAJpDR,EAAQ2B,YAAWhB,GAOvB,MACJ,KAAK,QACL,IAAK,QACD,GAAKlD,oBAAkBkD,GAIlB,CACD,GAAIoC,GAAczC,EAAQ5C,KAAKoD,0BAA0B,GACrDkC,EAAcJ,EAAmBpC,EAOrCR,GAAQD,EALJC,GADCvC,oBAAkBuF,IAAgBA,EAAYD,KAAiB1C,EAAQL,MAAM+C,KAAmC,IAAnBtC,EACtFkB,YAAWqB,GAGXrB,YAAWtB,EAAQL,YAT/BA,GAAQD,EADRC,EAAQ2B,YAAWhB,KAcA,IAAnBF,IACAM,EAAS+B,QAAQ9C,GACjBmB,GAAS,GAGrB,OAASnB,MAAOA,EAAOmB,OAAQA,GAEnC,QAAgBwB,GAAmBtD,EAAc4B,EAAcJ,EAAQjD,EAAK0C,EAASC,EAAiBW,EAAcR,GAGhH,IAFA,GAAIuC,IAAa,EACbnD,EAAIT,EAAa/B,OACdwC,KAAOA,GAAK,GACf,GAAIT,EAAaS,GAAGlC,KAASqD,EAAarD,IACrC2C,GAAmBlB,EAAaS,GAAGQ,EAAQ0B,mBAAqBf,EAAaX,EAAQ2B,WAAa,CACnG,GAAe,SAAXpB,EAAmB,CAGnB,IAAK,GAFDxC,GAAOD,OAAOC,KAAK4C,GACnBiC,EAAapE,EAAcwB,EAASW,EAAalC,UAC5C3B,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,KACzBiC,EAAaS,GAAGiC,eAAe1D,EAAKjB,KAAsC,SAA9BkD,EAAQc,aAAaC,MAAmBhD,EAAKjB,KAAOsD,IAChGwC,EAAW7E,EAAKjB,IAAM8F,EAAWpB,SAASzD,EAAKjB,IAAMiC,EAAaS,GAAGzB,EAAKjB,IAAM6D,EAAa5C,EAAKjB,IAG1G,OAEC,GAAe,QAAXyD,GAA+B,cAAXA,EACmB,UAAxCP,EAAQc,aAAaQ,eACjBrB,GACAW,EAAaZ,EAAQ0B,iBAAmB3C,EAAaS,GAAGQ,EAAQ2B,WAChE5C,EAAa6C,OAAOpC,EAAI,EAAG,EAAGoB,GAC9BkB,EAAgBxE,EAAKyB,EAAaS,GAAIe,EAAQP,EAASC,EAAiBW,KAGnE7B,EAAaS,GAAGiC,eAAezB,EAAQ6B,gBACxC9C,EAAaS,GAAGQ,EAAQ6B,kBAE5B9C,EAAaS,GAAGQ,EAAQ6B,cAAc5D,KAAK2C,EAAaY,UACxDM,EAAgBxE,EAAKyB,EAAaS,GAAIe,EAAQP,EAASC,EAAiBW,IAG/B,UAAxCZ,EAAQc,aAAaQ,gBAC1BvC,EAAa6C,OAAOpC,EAAG,EAAGoB,EAAaY,UACvCM,EAAgBxE,EAAKyB,EAAaS,GAAIe,EAAQP,EAASC,EAAiBW,IAE3B,UAAxCZ,EAAQc,aAAaQ,iBAC1BvC,EAAa6C,OAAOpC,EAAI,EAAG,EAAGoB,EAAaY,UAC3CM,EAAgBxE,EAAKyB,EAAaS,GAAIe,EAAQP,EAASC,EAAiBW,QAG3E,CACgB7B,EAAaS,GAAGjB,UACjCQ,GAAa6C,OAAOpC,EAAG,GAClBT,EAAa/B,SACd2F,GAAa,QAIfxF,qBAAkB4B,EAAaS,GAAGQ,EAAQ6B,gBAC5CQ,EAAmBtD,EAAaS,GAAGQ,EAAQ6B,cAAelB,EAAcJ,EAAQjD,EAAK0C,EAASC,EAAiBW,EAAcR,IAC7H0B,EAAgBxE,EAAKyB,EAAaS,GAAIe,EAAQP,EAASC,EAInE,OAAO0C,GAEX,QAAgBb,GAAgBxE,EAAKa,EAAQoC,EAAQP,EAASC,EAAiB4C,GAC3E,GAA6C,UAAxC7C,EAAQc,aAAaQ,gBAAsE,UAAxCtB,EAAQc,aAAaQ,gBACzD,QAAXf,GAA+B,cAAXA,GAA6BpD,oBAAkB0F,EAAMtE,YAI7E,CACD,GACIuE,GADAC,EAAiB/C,EAAQ5C,KAAKmF,uBAQlC,IANAQ,EAAeC,IAAI,SAAUb,EAAGrF,GAAK,GAAIqF,EAAE7E,KAASa,EAAOb,GAEvD,YADAwF,EAAUhG,KAGdqB,EAAS4E,EAAeD,GACxB3E,EAAOW,iBAAkB,EACV,QAAXyB,GAA+B,cAAXA,EAAwB,CAC5CpC,EAAOS,UAAW,EAClBT,EAAOW,iBAAkB,EACrBkB,EAAQiD,aAAalG,QAAQC,QAAUG,oBAAkB0F,KACzDA,EAAQE,EAAeb,OAAO,SAAUC,GACpC,MAAIA,GAAEe,iBAAmB/E,EAAOM,SACrB0D,EAGA,OAInB,IAAIpD,GAAe8D,EAAQA,YAAiBzB,OAAQyB,EAAM,GAAKA,EAAQE,EAAeD,EAAU,EACpD,WAAxC9C,EAAQc,aAAaQ,iBAChBnD,EAAOsD,eAAe,gBAIlBtE,oBAAkB0F,IAAU1E,EAAOb,KAASuF,EAAMvF,IACnDa,EAAOY,aAAad,KAAK4E,GAJ7B1E,EAAOY,iBAOwC,IAA/CZ,EAAOY,aAAaoE,QAAQpE,IAAwBZ,EAAOb,KAASuF,EAAMvF,IAC1Ea,EAAOY,aAAayD,QAAQzD,GAE5BkB,IACK9B,EAAOsD,eAAezB,EAAQ6B,gBAC/B1D,EAAO6B,EAAQ6B,mBAEyC,IAAxD1D,EAAO6B,EAAQ6B,cAAcsB,QAAQpE,IAAwBZ,EAAOb,KAASuF,EAAMvF,IACnFa,EAAO6B,EAAQ6B,cAAcW,QAAQzD,KAQrD,IAAK,GAHD0D,GAAczC,EAAQ5C,KAAKoD,0BAA0B,GACrD4C,EAAOpD,EAAQ5C,KAAKhB,qBAAsBC,eAC1C2D,EAAQ5C,KAAKhB,WAAWA,WAAWsE,KAAOV,EAAQ5C,KAAKhB,WAClDU,EAAI,EAAGA,EAAIsG,EAAKpG,OAAQF,IAC7B,GAAIsG,EAAKtG,GAAG2F,KAAiBtE,EAAOsE,GAAc,CAC9CW,EAAKtG,GAAKqB,CACV,OAGR6B,EAAQ5C,KAAKiG,WAAW/F,EAAKa,EAC7B,IAAImF,GAAMtD,EAAQuD,cAAcT,EACE,WAA9B9C,EAAQc,aAAaC,OACrBuC,EAAMtD,EAAQwD,UAAUxD,EAAQ5C,KAAKqG,wBAAwBtF,EAAOb,KAExE,IAAIoG,OAAa,IACb1D,EAAQ2D,YAAc3D,EAAQ4D,sBAC9BF,EAAa1D,EAAQ6D,qBAAqBf,IAE9C9C,EAAQ8D,aAAaC,YACjBX,KAAMjF,EAAQ6F,KAAMV,EAAIW,MAAMjE,EAAQkE,iBAAmBZ,EAAIW,MAAMjE,EAAQkE,iBACrER,EAAWO,MAAMjE,EAAQkE,gBAAkBlE,EAAQmE,eACzDC,OAAQpE,EAAQ5C,KAAKiH,aAAarE,EAAQkE,iBAC1CI,YAAa/D,QAtEA/B,GAAcwB,EAAS6C,EAAMtE,WAAWE,UAC9CM,aAAad,KAAK4E,GClOrC,GAAI0B,GAAwB,WACxB,QAASA,GAAOC,GAMZC,KAAKC,cAAe,EAKpBD,KAAKE,QAKLF,KAAKG,mBAAoB,EAMzBH,KAAKI,iBAAkB,EAMvBJ,KAAKK,gBAAiB,EAMtBL,KAAKjH,gBAAiB,EAMtBiH,KAAKM,cAAe,EAMpBN,KAAKO,eAAgB,EAWrBP,KAAKvC,UACL+C,QAAMR,KAAMD,GAEhB,MAAOD,MCjEPW,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrH,OAAOwH,iBAChBC,uBAA2BnE,QAAS,SAAUgE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIjD,KAAKiD,GAAOA,EAAE5D,eAAeW,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavH,OAAO6H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQxI,EAAKyI,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUjJ,OAAQkJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjI,OAAOqI,yBAAyBL,EAAQxI,GAAOyI,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxI,EAAKyI,OACpH,KAAK,GAAIjJ,GAAI+I,EAAW7I,OAAS,EAAGF,GAAK,EAAGA,KAASsI,EAAIS,EAAW/I,MAAIoJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxI,EAAK4I,GAAKd,EAAEU,EAAQxI,KAAS4I,EAChJ,OAAOF,GAAI,GAAKE,GAAKpI,OAAOwI,eAAeR,EAAQxI,EAAK4I,GAAIA,GAM5DK,EAA2B,SAAUC,GAErC,QAASD,KACL,MAAkB,QAAXC,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAsC/D,MAxCAS,GAAUqB,EAAWC,GAIrBZ,GACIc,cACDH,EAAUb,UAAW,YAAS,IACjCE,GACIc,cACDH,EAAUb,UAAW,eAAY,IACpCE,GACIc,cACDH,EAAUb,UAAW,YAAS,IACjCE,GACIc,cACDH,EAAUb,UAAW,gBAAa,IACrCE,GACIc,cACDH,EAAUb,UAAW,mBAAgB,IACxCE,GACIc,cACDH,EAAUb,UAAW,gBAAa,IACrCE,GACIc,gBACDH,EAAUb,UAAW,wBAAqB,IAC7CE,GACIc,gBACDH,EAAUb,UAAW,qBAAkB,IAC1CE,GACIc,cACDH,EAAUb,UAAW,WAAQ,IAChCE,GACIc,cACDH,EAAUb,UAAW,kBAAe,IACvCE,GACIc,cACDH,EAAUb,UAAW,UAAO,IAC/BE,GACIc,cACDH,EAAUb,UAAW,mBAAgB,IACjCa,GACTI,iBAKEC,EAAgC,SAAUJ,GAE1C,QAASI,KACL,MAAkB,QAAXJ,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,MA5BAS,GAAU0B,EAAgBJ,GAI1BZ,GACIiB,gBAAeN,IAChBK,EAAelB,UAAW,cAAW,IACxCE,GACIc,WAAS,cACVE,EAAelB,UAAW,WAAQ,IACrCE,GACIc,cACDE,EAAelB,UAAW,WAAQ,IACrCE,GACIc,YAAS,IACVE,EAAelB,UAAW,0BAAuB,IACpDE,GACIc,WAAS,OACVE,EAAelB,UAAW,yBAAsB,IACnDE,GACIc,cACDE,EAAelB,UAAW,gBAAa,IAC1CE,GACIc,YAAS,IACVE,EAAelB,UAAW,mBAAgB,IAC7CE,GACIc,WAAS,WACVE,EAAelB,UAAW,oBAAiB,IACvCkB,GACTD,iBCpGEzB,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrH,OAAOwH,iBAChBC,uBAA2BnE,QAAS,SAAUgE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIjD,KAAKiD,GAAOA,EAAE5D,eAAeW,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavH,OAAO6H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQxI,EAAKyI,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUjJ,OAAQkJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjI,OAAOqI,yBAAyBL,EAAQxI,GAAOyI,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxI,EAAKyI,OACpH,KAAK,GAAIjJ,GAAI+I,EAAW7I,OAAS,EAAGF,GAAK,EAAGA,KAASsI,EAAIS,EAAW/I,MAAIoJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxI,EAAK4I,GAAKd,EAAEU,EAAQxI,KAAS4I,EAChJ,OAAOF,GAAI,GAAKE,GAAKpI,OAAOwI,eAAeR,EAAQxI,EAAK4I,GAAIA,GAM5DY,EAAkC,SAAUN,GAE5C,QAASM,KACL,MAAkB,QAAXN,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAK/D,MAPAS,GAAU4B,EAAkBN,GAI5BZ,GACIc,WAAS,SACVI,EAAiBpB,UAAW,eAAY,IACpCoB,GACTH,iBChCEzB,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrH,OAAOwH,iBAChBC,uBAA2BnE,QAAS,SAAUgE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIjD,KAAKiD,GAAOA,EAAE5D,eAAeW,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavH,OAAO6H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QASnFuB,EAA+B,SAAUP,GAEzC,QAASO,GAAc5K,GACnB,GAAI6K,GAAQR,EAAOS,KAAKxC,KAAMtI,EAAOiB,OAASqH,IAI9C,OAHAuC,GAAME,gBAAkB,GACxBF,EAAMG,4BACNH,EAAMI,eAAiBjL,EAChB6K,EAsJX,MA5JA9B,GAAU6B,EAAeP,GAQzBO,EAAcrB,UAAU2B,YAAc,SAAUC,GAC5C,GAIIvE,GAAiB0B,KAAK2C,eAAe7E,uBACzC,IAAyC,KAArCgF,OAAOC,eAAeC,WAAmB,CACzChD,KAAKiD,kBAAkBhI,MAAQ+E,KAAgB,YAAI,EACnD,IAAIkD,GAAOlD,KAAK2C,eAAehK,KAAKoG,SACpC,IAAmD,SAA/CiB,KAAK2C,eAAeQ,kBAAkB7G,KAAiB,CAIvD,IAAK,GAHD8G,GAAkBpD,KAAK2C,eAAeU,wBAAwBC,KAAK,SAAUC,EAAG3C,GAChF,MAAO2C,GAAI3C,IAENvI,EAAI,EAAGA,EAAI+K,EAAgB7K,OAAQF,IAIxC,GAHIA,EAAI,IACJ2H,KAAKyC,iBAAmB,OAEvBS,EAAKE,EAAgB/K,IAAImL,UAAUC,SAAS,gBAAiB,CAC9D,GAAIjE,MAAWkE,MAAMlB,KAAKU,EAAKE,EAAgB/K,IAAIsL,iBAAiB,eAChEC,EAAW5D,KAAK2C,eAAekB,qBAAqBxL,GAAW,UACV,IAArD2H,KAAK0C,yBAAyBhE,QAAQkF,KACQ,WAA1C5D,KAAK2C,eAAemB,mBAA4E,SAA1C9D,KAAK2C,eAAemB,mBAC1E9D,KAAK+D,kBAAkBzF,EAAgB8E,EAAgB/K,GAAI6K,EAAML,EAAYxK,GAEjF2H,KAAgB,YAAER,GAAO,EAAO,KAAMqD,GACtC7C,KAAKyC,iBAAmBzC,KAAgB,YACxCA,KAAK0C,yBAAyBlJ,KAAKoK,GACnC5D,KAAgB,YAAI,GAC0B,UAA1CA,KAAK2C,eAAemB,mBAA2E,SAA1C9D,KAAK2C,eAAemB,mBACzE9D,KAAKgE,iBAAiB1F,EAAgB8E,EAAgB/K,GAAI6K,EAAML,IAKhF,GAAIA,EAAY,CAEZ,IAAK,GADDoB,MACK5L,EAAI,EAAGA,EAAI2H,KAAK2C,eAAeuB,oBAAoB3L,OAAQF,IAChE4L,EAAgB5L,GAAK2H,KAAK2C,eAAeuB,oBAAoB7L,GAAG8L,UAEpEnE,MAAgB,YAAEiE,GAAiB,EAAO,KAAMpB,GAChD7C,KAAKyC,gBAAkBzC,KAAgB,YAAI,KAAOA,KAAKyC,gBAE3D,GAAI2B,IACAzF,KAAMqB,KAAKyC,gBACX4B,QAAQ,EAGZ,IADArE,KAAK2C,eAAe2B,QCjBZ,aDiBuCF,GAC3CA,EAAKC,OACL,MAEJrE,MAAKiD,kBAAkBhI,MAAQ+E,KAAgB,YAAIoE,EAAKzF,KACnD4F,UAAQC,UAAUC,MAAM,qBAIzBzE,KAAKiD,kBAAkByB,kBAAkB,EAAG1E,KAAKiD,kBAAkBhI,MAAM1C,QAHzEyH,KAAKiD,kBAAkB0B,SAK3B3E,KAAa,UAAI,EACjBA,KAAK0C,4BACL1C,KAAKyC,gBAAkB,OAGvBV,GAAOd,UAAU2B,YAAYJ,KAAKxC,KAAM6C,KAIpDP,EAAcrB,UAAU8C,kBAAoB,SAAUzF,EAAgB5C,EAAewH,EAAML,EAAY3H,GAMnG,IAAKxC,oBAAkB4F,EAAe5C,GAAyB,YAE3D,IAAK,GADDkJ,GAAYtG,EAAe5C,GAAyB,WAAO,MACtDrD,EAAI,EAAGA,EAAIuM,EAAY,EAAGvM,IAC/B,IAAK,GAAI0C,GAAI,EAAGA,EAAIuD,EAAe/F,OAAQwC,IACvC,IAAKrC,oBAAkB4F,EAAe5C,GAAyB,aAC3D4C,EAAevD,GAAW,WAAMuD,EAAe5C,GAAyB,WAAU,SAAG,CACrFA,EAAgBX,CAChB,IAAIyE,MAAWkE,MAAMlB,KAAKU,EAAKxH,GAAeiI,iBAAiB,eAC3DC,EAAWtF,EAAevD,GAAW,QACzC,KAAyD,IAArDiF,KAAK0C,yBAAyBhE,QAAQkF,GAAkB,CACxD5D,KAAgB,YAAER,GAAO,EAAO,KAAMqD,GAElC7C,KAAKyC,gBADLvH,EAAQ,EACe8E,KAAKyC,gBAAkBzC,KAAgB,YAAI,KAG3CA,KAAgB,YAAI,KAAOA,KAAKyC,gBAE3DzC,KAAK0C,yBAAyBlJ,KAAKoK,GACnC5D,KAAgB,YAAI,EACpB,UAOxBsC,EAAcrB,UAAU4D,KAAO,SAAUhC,GACrCd,EAAOd,UAAU4D,KAAKrC,KAAKxC,KAAM6C,IAErCP,EAAcrB,UAAU6D,MAAQ,SAAUnG,EAAMoG,EAAUC,GACtDjD,EAAOd,UAAU6D,MAAMtC,KAAKxC,KAAMrB,EAAMoG,EAAUC,IAMtD1C,EAAcrB,UAAUgE,cAAgB,WACpC,MAAO,aAQX3C,EAAcrB,UAAUiE,QAAU,WAC9BnD,EAAOd,UAAUiE,QAAQ1C,KAAKxC,OAElCsC,EAAcrB,UAAU+C,iBAAmB,SAAU1F,EAAgB5C,EAAewH,EAAML,GAMtF,GAAIvE,EAAe5C,GAA8B,gBAE7C,IAAK,GADDyJ,GAAY7G,EAAe5C,GAA2B,aACjDrD,EAAI,EAAGA,EAAI8M,EAAU5M,OAAQF,IAClC,IAAK,GAAI0C,GAAI,EAAGA,EAAIuD,EAAe/F,OAAQwC,IACvC,IAAKrC,oBAAkByM,EAAU9M,GAAW,WAAMiG,EAAevD,GAAW,WAAMoK,EAAU9M,GAAW,SAAG,CACtG,IAAMK,oBAAkBwK,EAAKnI,MAASmI,EAAKnI,GAAGyI,UAAUC,SAAS,gBAAiB,CAC9E,GAAIjE,MAAWkE,MAAMlB,KAAKU,EAAKnI,GAAG4I,iBAAiB,eAC/CC,EAAWtF,EAAevD,GAAW,UACgB,IAArDiF,KAAK0C,yBAAyBhE,QAAQkF,KACtC5D,KAAgB,YAAER,GAAO,EAAO,KAAMqD,GACtC7C,KAAKyC,iBAAoB,KAAOzC,KAAgB,YAChDA,KAAgB,YAAI,GACpBA,KAAK0C,yBAAyBlJ,KAAKoK,GACnC5D,KAAKgE,iBAAiB1F,EAAgBvD,EAAGmI,EAAML,IAGvD,QAMbP,GACT8C,aExKEC,EAA2B,WAI3B,QAASA,GAAU3N,GACfsI,KAAKtI,OAASA,EACdsI,KAAKsF,iBACLtF,KAAKoD,mBACLpD,KAAKuF,mBA2aT,MAraAF,GAAUpE,UAAUgE,cAAgB,WAChC,MAAO,aAEXI,EAAUpE,UAAUsE,iBAAmB,WACnCvF,KAAKtI,OAAO8N,GAAG,eAAgBxF,KAAKyF,eAAgBzF,MACpDA,KAAKtI,OAAO8N,GAAG,iBAAkBxF,KAAK0F,eAAgB1F,MACtDA,KAAKtI,OAAO8N,GAAG,oBAAqBxF,KAAK2F,kBAAmB3F,MAC5DA,KAAKtI,OAAOiB,KAAK6M,GAAG,mBAAoBxF,KAAKyF,eAAgBzF,MAC7DA,KAAKtI,OAAO8N,GAAG,oBAAqBxF,KAAK4F,kBAAmB5F,OAEhEqF,EAAUpE,UAAU4E,oBAAsB,WAClC7F,KAAKtI,OAAOoO,cAGhB9F,KAAKtI,OAAOqO,IAAI,eAAgB/F,KAAKyF,gBACrCzF,KAAKtI,OAAOqO,IAAI,iBAAkB/F,KAAK0F,gBACvC1F,KAAKtI,OAAOiB,KAAKoN,IAAI,mBAAoB/F,KAAKyF,gBAC9CzF,KAAKtI,OAAOqO,IAAI,oBAAqB/F,KAAK4F,mBAC1C5F,KAAKtI,OAAOqO,IAAI,oBAAqB/F,KAAK2F,qBAO9CN,EAAUpE,UAAUiE,QAAU,WAC1BlF,KAAK6F,uBAETR,EAAUpE,UAAU2E,kBAAoB,SAAUxB,GAC9C,GAEI4B,GAFA3E,EAAS9H,YAAU,SAAU6K,GAC7B6B,EAAYC,eAAa7E,EAAQ,qBAErC,IAAI4E,GAAaA,EAAUtC,iBAAiB,sBAAsBpL,OAAS,EAAG,CAC1EyN,EAAWC,EAAUE,cAAc,yBACnC,IAAIpB,OAAW,IACfA,MACSvL,KAAK6H,EAAO+E,QAAQ,MAAMrB,UACnC/E,KAAKqG,iBAAiBtB,GACtB/E,KAAKsG,sBAAsBN,EAAUA,EAASO,mBAAmB/C,UAAUC,SAAS,WAAYpC,EAAO+E,QAAQ,WAE9G,IAAIH,GAAaA,EAAUtC,iBAAiB,oBAAoBpL,OAAS,GAAKyH,KAAKtI,OAAO8O,mBAAoB,CAC/G,GAAIC,IAAiBR,EAAUE,cAAc,YAAY3C,UAAUC,SAAS,aACpEwC,EAAUE,cAAc,YAAY3C,UAAUC,SAAS,SAC/DzD,MAAK0G,gBAAgBD,GACrBT,EAAWC,EAAUE,cAAc,0BACnCnG,KAAKsG,sBAAsBN,EAAUS,EAAepF,EAAO+E,QAAQ,SAG3Ef,EAAUpE,UAAUqF,sBAAwB,SAAUN,EAAUW,EAAYC,GACxE,GAAIjI,GAAOqB,KAAKtI,OAAOoG,wBAAwB8I,EAAW7B,UACtDX,GAASyC,QAASF,EAAYtF,OAAQ2E,EAAUY,WAAYA,EAC5DE,QAASd,EAASxC,UAAUC,SAAS,mBAC/BzD,KAAKtI,OAAOqP,oBAAsBpI,EAC5CqB,MAAKtI,OAAO4M,QDrDQ,iBCqDuBF,IAE/CiB,EAAUpE,UAAU+F,uBAAyB,WAIzC,IAAK,GAHDC,GACAC,EACA5O,EAAW0H,KAAKtI,OAAe,QAC1ByP,EAAM,EAAGA,EAAM7O,EAAQC,OAAQ4O,IAChC7O,EAAQ6O,GAAK3O,eACbyO,EAAajH,KAAKtI,OAAOY,QAAQ6O,GAAKC,IAI9C,KAAK,GADDC,GAAmBrH,KAAKtI,OAAO4P,mBAAmB3D,iBAAiB,oBAAoBpL,OAClFwC,EAAI,EAAGA,EAAIsM,EAAkBtM,IACjBiF,KAAKtI,OAAO4P,mBAAmB3D,iBAAiB,oBAAoB5I,GACtEwM,aAAa,kBAAoBN,IAC5CC,EAAcnM,EAGtB,OAAOmM,IAEX7B,EAAUpE,UAAUwE,eAAiB,WAEjC,GADAzF,KAAKkH,YAAclH,KAAKgH,yBACpBhH,KAAKkH,aAAe,GAAoF,IAA/ElH,KAAKtI,OAAO4P,mBAAmB3D,iBAAiB,oBAAoBpL,OAAc,CAC3G,GAAIiP,GAAgBxH,KAAKtI,OAAO4P,mBAAmB3D,iBAAiB,oBAAoB3D,KAAKkH,aACzFjB,MAAY,GAEZwB,EAAYzH,KAAKtI,OAAOgQ,cAAc,SAAWC,UAAW,kBAAmBC,OAASC,KAAQ,eACpG5B,EAAY6B,iBAAe9H,KAAKtI,OAAOgQ,eAAe,GAASb,SAFnD,EAEmEkB,MAAO,OAC5EvE,UAAUwE,IAAI,uBACxB/B,EAAUE,cAAc,YAAY8B,MAAMC,MAAQ,OAClDjC,EAAUkC,aAAaV,EAAUW,YAAanC,EAAUoC,YACnD3P,oBAAkB8O,IACnBA,EAAcW,aAAalC,EAAWuB,EAAca,YAEpDrI,KAAKtI,OAAO8O,oBACZxG,KAAK0G,sBAGR,IAAI1G,KAAKkH,aAAe,GAAKlH,KAAKtI,OAAO4P,mBAAmB3D,iBAAiB,oBAAoBpL,OAAS,EAAG,CAC9G,GACIkO,IADAR,EAAYjG,KAAKtI,OAAO4P,mBAAmB3D,iBAAiB,uBAAuB,IACzDwC,cAAc,YAAY3C,UAAUC,SAAS,UACvEzD,MAAKtI,OAAO8O,oBAAsBC,GAClCzG,KAAK0G,gBAAgBD,KAIjCpB,EAAUpE,UAAUqH,qBAAuB,SAAUlE,GACjD,GAAI6B,GACAwB,EAAYzH,KAAKtI,OAAOgQ,cAAc,SAAWC,UAAW,oBAAqBC,OAASC,KAAQ,cAClGlJ,EAAOyF,EAAKzF,IAChByF,GAAK7E,KAAKiE,UAAUwE,IAAI,sBACxB5D,EAAK7E,KAAKgJ,aAAa,aAAc,WACrC,IAAItN,IAASvC,oBAAkBiG,EAAK6J,gBAAyC,YAAvB7J,EAAK6J,aAI3D,KAHAvC,EAAY6B,iBAAe9H,KAAKtI,OAAOgQ,eAAe,GAASb,QAAS5L,EAAO8M,MAAO,OAC5EvE,UAAUwE,IAAI,uBACxB/B,EAAUE,cAAc,YAAY8B,MAAMC,MAAQ,OACvB,kBAAvBvJ,EAAK6J,cAAmC,CACxC,GAAIC,GAAWxC,EAAUtC,iBAAiB,YAAY,EACtD+E,gBAAaD,IAAY,UAAW,SAAU,cAC9CxC,EAAUE,cAAc,YAAY3C,UAAUwE,IAAI,UAGtD,MADA/B,GAAUkC,aAAaV,EAAUW,YAAanC,EAAUoC,YACjDpC,GAEXZ,EAAUpE,UAAUyE,eAAiB,SAAUiD,GAC3C,GAAI1C,GAAYjG,KAAKsI,qBAAqBK,GACtCC,EAAeD,EAAUpJ,KAAK4G,cAAc,0BAChD,IAAKzN,oBAAkBkQ,GAKlB,CACD,GAAIC,GAAU7I,KAAKtI,OAAOgQ,cAAc,QAAUC,UAAW,mBACzDhJ,EAAOgK,EAAUpJ,KAAKuJ,SAC1BH,GAAUpJ,KAAKuJ,UAAY,GAC3BD,EAAQC,UAAYnK,CACpB,IAAIoK,GAAS/I,KAAKtI,OAAOgQ,cAAc,OAASC,UAAW,4BAC3DoB,GAAOC,YAAY/C,GACnB8C,EAAOC,YAAYH,GACnBF,EAAUpJ,KAAKyJ,YAAYD,OAZtBJ,GAAUpJ,KAAK4G,cAAc,yBAC9ByC,EAAaT,aAAalC,EAAW2C,EAAajF,iBAAiB,eAAe,KAc9F0B,EAAUpE,UAAUoF,iBAAmB,SAAU4C,GAE7C,IAAK,GAAI5Q,GAAI,EAAGA,EAAI4Q,EAAW1Q,OAAQF,IAAK,CACxC,GAAIqB,GAASsG,KAAKtI,OAAOoG,wBAAwBmL,EAAW5Q,IACxD6Q,EAAanP,EAAciG,KAAKtI,OAAQgC,EAAOM,UAG/CwO,EAA0C,aAF9C9O,EAAUyP,cAAsD,kBAAxCnJ,KAAKtI,OAAOC,WAAsB,YACtD+B,EAASwP,GACeV,cAA+B,QAAU,SACrE9O,GAAO8O,cAAgBA,CAEvB,KAAK,GADDlP,GAAOD,OAAOC,KAAKI,GACdqB,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzBmO,EAAWlM,eAAe1D,EAAKyB,MAC/BmO,EAAW5P,EAAKyB,IAAMrB,EAAOJ,EAAKyB,IAG1CiF,MAAKoJ,gBAAgB1P,EAAQ8O,GAAe,GACxCxI,KAAKtI,OAAO8O,oBACZxG,KAAK0G,oBAIjBrB,EAAUpE,UAAUmI,gBAAkB,SAAU1P,EAAQ8O,EAAea,GACnE,GAAI9Q,GAAS,CAKb,IAJAyH,KAAKsJ,oBAAoB5P,EAAQ8O,IAC5Ba,GAAe3P,EAAOI,YAAckG,KAAKtI,OAAO8O,oBACjDxG,KAAKuJ,sBAAsB7P,EAAOI,YAElCJ,EAAOY,cAAgB0F,KAAKtI,OAAO8O,mBAAoB,CACvD,GAAIlM,GAAeZ,EAAOY,cACrB5B,oBAAkBsH,KAAKtI,OAAO8R,eAC/BxJ,KAAKtI,OAAO8R,aAAaC,eAAelR,OAAS,GAAKyH,KAAKtI,OAAO8O,qBAClElM,EAAe0F,KAAK0J,wBAAwBpP,IAEhD/B,EAAS+B,EAAa/B,MACtB,KAAK,GAAIoR,GAAQ,EAAGA,EAAQpR,EAAQoR,IAC3BrP,EAAaqP,GAAOC,eACjBtP,EAAaqP,GAAOtP,gBACpB2F,KAAKoJ,gBAAgB9O,EAAaqP,GAAQnB,GAAe,GAGzDxI,KAAKsJ,oBAAoBhP,EAAaqP,GAAQnB,MAMlEnD,EAAUpE,UAAUyI,wBAA0B,SAAUpP,GACpD,GAAIiI,GAAQvC,IAIZ,OAH2B1F,GAAamD,OAAO,SAAUC,GACrD,MAAO6E,GAAM7K,OAAO8R,aAAaC,eAAe/K,QAAQhB,IAAM,KAItE2H,EAAUpE,UAAUsI,sBAAwB,SAAU1P,GAClD,GACItB,GAAS,EACT+B,KACAZ,EAASK,EAAciG,KAAKtI,OAAQmC,EAAaG,SACjDN,IAAUA,EAAOY,eACjBA,EAAeZ,EAAOY,eAErB5B,oBAAkBsH,KAAKtI,OAAO8R,eAC/BxJ,KAAKtI,OAAO8R,aAAaC,eAAelR,OAAS,GAAKyH,KAAKtI,OAAO8O,qBAClElM,EAAe0F,KAAK0J,wBAAwBpP,IAEhD/B,EAAS+B,GAAgBA,EAAa/B,MACtC,IAAIsR,GAAU,EACVC,EAAoB,CACxB,KAAKpR,oBAAkBgB,GAAS,CAkB5B,IAAK,GADDqQ,GAAS/J,KACJ3H,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,KAjB3B,SAAUA,GACpB,GAAI2R,GAAcD,EAAOrS,OAAOoG,wBAAwBL,OAAO,SAAUC,GACrE,MAAOA,GAAE1D,WAAaM,EAAajC,GAAG2B,WAEtCiQ,EAAgBlQ,EAAcgQ,EAAOrS,OAAQ4C,EAAajC,GAAG2B,UAC7DkQ,EAAkBf,cAAwD,kBAA1CY,EAAOrS,OAAOC,WAAsB,YACpEqS,EAAY,GAAKC,CAChBvR,qBAAkBwR,KACkB,kBAAjCA,EAAe1B,cACfqB,IAEsC,UAAjCK,EAAe1B,eACpBsB,MAMAzR,EAGRqB,GAAO8O,cADPqB,EAAU,GAAMC,EAAoB,GAAKA,IAAsBvR,EACxC,gBAEI,IAAtBuR,GAAuC,IAAZD,EACT,UAGA,QAE3B7J,KAAKsJ,oBAAoB5P,EAAQA,EAAO8O,eACpC9O,EAAOI,YACPkG,KAAKuJ,sBAAsB7P,EAAOI,cAI9CuL,EAAUpE,UAAUyF,gBAAkB,SAAUyD,GAC5C,GAAI5H,GAAQvC,KAGRzH,EAAS,EACToG,GAASjG,oBAAkBsH,KAAKtI,OAAO8R,eACvCxJ,KAAKtI,OAAO8R,aAAaC,eAAelR,OAAS,EAAKyH,KAAKtI,OAAO8R,aAAaC,eAC/EzJ,KAAKtI,OAAO8F,QAGhB,IAFAmB,EAAQwK,cAAsD,kBAAxCnJ,KAAKtI,OAAOC,WAAsB,aAA0BF,EAAauI,KAAKtI,QAChGsI,KAAKtI,OAAOoG,wBAA0Ba,GACrCjG,oBAAkByR,GACnB,IAAK,GAAI9R,GAAI,EAAGA,EAAIsG,EAAKpG,OAAQF,IAC7B,GAAI8R,EAAU,CACV,GAA8B,UAA1BxL,EAAKtG,GAAGmQ,cACR,QAEJ7J,GAAKtG,GAAGmQ,cAAgB,QACxBxI,KAAKsJ,oBAAoB3K,EAAKtG,GAAIsG,EAAKtG,GAAGmQ,mBAGlCxI,MAAKsF,cAAc5G,QAAQC,EAAKtG,KAC3B,IACTsG,EAAKtG,GAAGmQ,cAAgB,UACxBxI,KAAKsJ,oBAAoB3K,EAAKtG,GAAIsG,EAAKtG,GAAGmQ,eACtCxI,KAAKtI,OAAO8O,oBACZxG,KAAKuJ,sBAAsB5K,EAAKtG,MAMnC,IAAb8R,GAAsBnK,KAAKtI,OAAO0S,uBAClCpK,KAAKsF,iBACLtF,KAAKoD,mBACLzE,EAAKlB,OAAO,SAAU4M,GAClBA,EAAI7B,cAAgB,UACpBjG,EAAM+G,oBAAoBe,EAAKA,EAAI7B,kBAG3CjQ,EAASyH,KAAKsF,cAAc/M,MAC5B,IAAIkQ,GAAWzI,KAAKtI,OAAO4P,mBAAmB3D,iBAAiB,YAAY,EACvEpL,GAAS,GAAKoG,EAAKpG,OAAS,EACxBA,IAAWoG,EAAKpG,QAAW4R,GAK3BzB,eAAaD,IAAY,WACzBA,EAASjF,UAAUwE,IAAI,aALvBU,eAAaD,IAAY,YACzBA,EAASjF,UAAUwE,IAAI,WAQ3BU,eAAaD,IAAY,UAAW,YAG5CpD,EAAUpE,UAAUqI,oBAAsB,SAAUW,EAAetD,EAAYlJ,GAC3E,GAGI6M,GAIA7B,EAPA/O,EAASsG,KAAKtI,OAAOoG,wBAAwBL,OAAO,SAAUC,GAC9D,MAAOA,GAAE1D,WAAaiQ,EAAcjQ,WAIpCuQ,EAAcvK,KAAKtI,OAAOoG,wBAAwBY,QAAQhF,EAAO,IACjE8Q,EAAiBzQ,EAAciG,KAAKtI,OAAQuS,EAAcjQ,SAE9D,IAAIuQ,GAAe,EAAG,CAClB,GAAIE,GAAKzK,KAAKtI,OAAOqH,UAAUwL,GAC3BG,MAAY,IACZ1K,KAAKtI,OAAOwH,YAAcc,KAAKtI,OAAOyH,sBACtCuL,EAAY1K,KAAKtI,OAAOiT,qBAAqBJ,IAEjD9B,EAAWgC,EAAG9G,iBAAiB,YAAY,GAAK8G,EAAG9G,iBAAiB,YAAY,GAC1E+G,EAAU/G,iBAAiB,YAAY,GACxCjL,oBAAkB+P,IACnBC,eAAaD,IAAY,UAAW,SAAU,cAStD,GANA6B,EAAiBnB,cAAsD,kBAAxCnJ,KAAKtI,OAAOC,WAAsB,YAC7D+B,EAAO,GAAK8Q,EACZ9R,oBAAkB4R,KAClBA,EAAgBL,GAEpBK,EAAc9B,cAAgB7B,EACX,UAAfA,GAA0BjO,oBAAkBuR,EAAcL,eACrC,IAAjBW,IAAqE,IAA/CvK,KAAKoD,gBAAgB1E,QAAQ6L,IACnDvK,KAAKoD,gBAAgB5J,KAAK+Q,IAEqB,IAA/CvK,KAAKsF,cAAc5G,QAAQ4L,KAA2C,IAAjBC,IACnD7R,oBAAkBsH,KAAKtI,OAAO8R,eAAiBxJ,KAAKtI,OAAO8R,aAAaC,eAAelR,OAAS,GAClGyH,KAAKsF,cAAc9L,KAAK8Q,IAEuB,IAA/CtK,KAAKsF,cAAc5G,QAAQ4L,IAA2B5R,oBAAkBsH,KAAKtI,OAAO8R,eACjC,IAAnDxJ,KAAKtI,OAAO8R,aAAaC,eAAelR,QACxCyH,KAAKsF,cAAc9L,KAAK8Q,IAEuB,IAA/CtK,KAAKsF,cAAc5G,QAAQ4L,IAAyB5R,oBAAkBsH,KAAKtI,OAAO8R,eAClFxJ,KAAKsF,cAAc9L,KAAK8Q,OAG3B,KAAoB,YAAf3D,GAA2C,kBAAfA,IAAmCjO,oBAAkBuR,EAAcL,cAAe,CACpH,GAAI1O,GAAQ8E,KAAKsF,cAAc5G,QAAQ4L,EAIvC,KAHe,IAAXpP,GACA8E,KAAKsF,cAAcnI,OAAOjC,EAAO,IAEc,IAA/C8E,KAAKoD,gBAAgB1E,QAAQ6L,GAAqB,CAClD,GAAIK,GAAe5K,KAAKoD,gBAAgB1E,QAAQ6L,EAChDvK,MAAKoD,gBAAgBjG,OAAOyN,EAAc,IAGlD,GAAIC,GAA+B,kBAAflE,EAAiC,SAAW,KAAOA,CACnE4D,IAAe,IACV7R,oBAAkB+P,IACnBA,EAASjF,UAAUwE,IAAI6C,KAInCxF,EAAUpE,UAAU0E,kBAAoB,SAAUvB,GAC9C,GAEIe,GACA2F,EAHAvI,EAAQvC,KACRH,EAAcuE,EAAKvE,WAGvB,IAAIzH,EAAiB4H,KAAKtI,SAClBsI,KAAKtI,OAAO8O,mBACZ,GAAqB,YAAhB3G,GAA6C,WAAhBA,EAA2B,CACzD,GAAIqD,GAAOlD,KAAKtI,OAAOiB,KAAKoG,SAE5B+L,IADA3F,EAAYnF,KAAKtI,OAAOoG,yBACAvF,OACxByH,KAAKoD,kBACL,KAAS/K,EAAI,EAAGA,EAAIyS,EAAazS,IACxB6K,EAAK7K,GAAGmL,UAAUC,SAAS,iBAC5BzD,KAAKsJ,oBAAoBnE,EAAU9M,GAAI8M,EAAU9M,GAAGmQ,eAAe,OAI1E,IAAoB,WAAhB3I,GAA4C,QAAhBuE,EAAKtI,OAAkB,CACxD,GAAIiP,KACgB,YAAhBlL,EACAkL,EAAc3G,EAAKzF,KAGnBoM,EAAYvR,KAAK4K,EAAKzF,KAE1B,KAAK,GAAItG,GAAI,EAAGA,EAAI0S,EAAYxS,OAAQF,IAAK,CACzC,GAAoB,WAAhBwH,EAA0B,CAC1B,GAAI3E,GAAQ8E,KAAKtI,OAAO8F,SAASkB,QAAQqM,EAAY1S,IACjDuS,EAAe5K,KAAKoD,gBAAgB1E,QAAQxD,EAChD8E,MAAKoD,gBAAgBjG,OAAOyN,EAAc,GAC1C5K,KAAKsJ,oBAAoByB,EAAY1S,GAAI,WAExCK,oBAAkBqS,EAAY1S,GAAGyB,aAClCkG,KAAKuJ,sBAAsBwB,EAAY1S,GAAGyB,iBAIxB,QAArBsK,EAAKvE,aAAyBG,KAAKtI,OAAO8O,mBAC/CpC,EAAKzF,KAAK6J,cAAgB,WAEL,cAAhB3I,GAA+C,cAAhBA,GAA+C,YAAhBA,IAC/DpI,EAAauI,KAAKtI,WACtBsI,KAAKsF,iBACLtF,KAAKoD,oBACL+B,GAAczM,oBAAkBsH,KAAKtI,OAAO8R,eAAiBxJ,KAAKtI,OAAO8R,aAAaC,eAAelR,OAAS,EAC1GyH,KAAKtI,OAAOoG,wBAA0BkC,KAAKtI,OAAO8F,UAC5CwN,QAAQ,SAAUtR,GACpBA,EAAOW,gBACPkI,EAAMgH,sBAAsB7P,GAG5B6I,EAAM+G,oBAAoB5P,EAAQA,EAAO8O,iBAGjDxI,KAAK0G,oBAKrBrB,EAAUpE,UAAUgK,kBAAoB,WACpC,MAAOjL,MAAKsF,eAEhBD,EAAUpE,UAAUiK,qBAAuB,WACvC,MAAOlL,MAAKoD,iBAETiC,KCrbP8F,EAAuB,WAIvB,QAASA,GAAMzT,GACXsI,KAAKtI,OAASA,EACd0T,OAAKC,OAAOC,SACZtL,KAAKuF,mBAqCT,MA/BA4F,GAAMlK,UAAUgE,cAAgB,WAC5B,MAAO,SAKXkG,EAAMlK,UAAUsE,iBAAmB,WAC/BvF,KAAKtI,OAAOiB,KAAK6M,GFwBE,iBExBuBxF,KAAKuL,cAAevL,OAElEmL,EAAMlK,UAAU4E,oBAAsB,WAClC7F,KAAKtI,OAAOiB,KAAKoN,IFqBE,iBErBwB/F,KAAKuL,gBAEpDJ,EAAMlK,UAAUsK,cAAgB,SAAUC,GACtC,GAAI7S,GAAOY,YAAU,YAAaiS,GAC9BC,EAAclS,YAAU,UAAWiS,EACvC7S,GAAK4M,iBF1Bc,gBE0ByBvF,KAAKtI,OAAOiB,KAAK+S,eAC7D/S,EAAK4M,iBF/Ba,eE+ByBvF,KAAKtI,OAAOiB,KAAKgT,cAC5DhT,EAAK4M,iBF1BgB,kBE0ByBvF,KAAKtI,OAAOiB,KAAKiT,iBAC/DC,YAAUJ,GAAc,eAE5BN,EAAMlK,UAAU6K,MAAQ,WACpB9L,KAAKtI,OAAOiB,KAAKmT,SAOrBX,EAAMlK,UAAUiE,QAAU,WACtBlF,KAAK6F,uBAEFsF,KCnDP1K,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrH,OAAOwH,iBAChBC,uBAA2BnE,QAAS,SAAUgE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIjD,KAAKiD,GAAOA,EAAE5D,eAAeW,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavH,OAAO6H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQxI,EAAKyI,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUjJ,OAAQkJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjI,OAAOqI,yBAAyBL,EAAQxI,GAAOyI,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxI,EAAKyI,OACpH,KAAK,GAAIjJ,GAAI+I,EAAW7I,OAAS,EAAGF,GAAK,EAAGA,KAASsI,EAAIS,EAAW/I,MAAIoJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxI,EAAK4I,GAAKd,EAAEU,EAAQxI,KAAS4I,EAChJ,OAAOF,GAAI,GAAKE,GAAKpI,OAAOwI,eAAeR,EAAQxI,EAAK4I,GAAIA,GAM5DsK,EAAgC,SAAUhK,GAE1C,QAASgK,KACL,MAAkB,QAAXhK,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAiB/D,MAnBAS,GAAUsL,EAAgBhK,GAI1BZ,GACIc,cACD8J,EAAe9K,UAAW,aAAU,IACvCE,GACIc,YAAS,IACV8J,EAAe9K,UAAW,iBAAc,IAC3CE,GACIc,WAAS,aACV8J,EAAe9K,UAAW,eAAY,IACzCE,GACIc,cACD8J,EAAe9K,UAAW,UAAO,IACpCE,GACIc,cACD8J,EAAe9K,UAAW,oBAAiB,IACvC8K,GACT7J,iBC5CEzB,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrH,OAAOwH,iBAChBC,uBAA2BnE,QAAS,SAAUgE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIjD,KAAKiD,GAAOA,EAAE5D,eAAeW,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavH,OAAO6H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQxI,EAAKyI,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUjJ,OAAQkJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjI,OAAOqI,yBAAyBL,EAAQxI,GAAOyI,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxI,EAAKyI,OACpH,KAAK,GAAIjJ,GAAI+I,EAAW7I,OAAS,EAAGF,GAAK,EAAGA,KAASsI,EAAIS,EAAW/I,MAAIoJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxI,EAAK4I,GAAKd,EAAEU,EAAQxI,KAAS4I,EAChJ,OAAOF,GAAI,GAAKE,GAAKpI,OAAOwI,eAAeR,EAAQxI,EAAK4I,GAAIA,GAM5DuK,EAAmC,SAAUjK,GAE7C,QAASiK,KACL,MAAkB,QAAXjK,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAuB/D,MAzBAS,GAAUuL,EAAmBjK,GAI7BZ,GACIc,WAAS,QACV+J,EAAkB/K,UAAW,WAAQ,IACxCE,GACIc,WAAS,SACV+J,EAAkB/K,UAAW,wBAAqB,IACrDE,GACIc,WAAS,WACV+J,EAAkB/K,UAAW,WAAQ,IACxCE,GACIc,YAAS,IACV+J,EAAkB/K,UAAW,uBAAoB,IACpDE,GACIc,WAAS,YACV+J,EAAkB/K,UAAW,mBAAgB,IAChDE,GACIc,YAAS,IACV+J,EAAkB/K,UAAW,mBAAgB,IAChDE,GACIc,YAAS,IACV+J,EAAkB/K,UAAW,mBAAgB,IACzC+K,GACT9J,iBC1CE+J,EAAwB,WAIxB,QAASA,GAAOvU,GACZsI,KAAKtI,OAASA,EACdsI,KAAKkM,eAAiB,KACtBlM,KAAKtI,OAAOiB,KAAK6M,GAAG,kBAAmBxF,KAAKmM,qBAAsBnM,MAmMtE,MA9LAiM,GAAOhL,UAAUmL,YAAc,SAAUhI,GACrC,GAAKA,EAAKzF,KAAV,CAGA,GAAIA,GAAOyF,EAAKzF,KACZpB,EAAaoB,EAAK7E,UAgBtB,IAdKpB,oBAAkBiG,EAAK7E,aAAgBrB,EAAuBuH,KAAKtI,SACjEsI,KAAKtI,OAAO2U,aAA2D,SAA1CrM,KAAKtI,OAAO4U,aAAaC,gBACpD9U,EAAauI,KAAKtI,SAAY8C,EAAUwF,KAAKtI,UAUzC0M,EAAKvF,IAAI0I,aAAa,kBATvB5I,EAAK7E,WAAWoB,OACP8E,KAAKtI,OAAOuC,kBAAoBvB,oBAAkB6E,EAAWyC,KAAKtI,OAAOwC,sBACtFqD,EAAWyC,KAAKtI,OAAOwC,sBAAwB8F,KAAKtI,OAAO8U,qBAC1D/S,EAAgBuG,KAAKtI,OAAQ0M,EAAKzF,KAAMqB,KAAKtI,OAAOiB,KAAKmF,4BAE1DsG,EAAKvF,IAAIoJ,MAAMwE,QAAU,SAM7BhV,EAAauI,KAAKtI,UAAY8C,EAAUwF,KAAKtI,QAAS,CACtD,GAAIgV,GAAU1M,KAAKtI,OACfiV,EAAY3M,KAAKtI,OAAOoG,wBAAwBL,OAAO,SAAU4M,GACjE,MAAOuC,YAASF,EAAQxP,UAAWmN,KAASuC,WAASF,EAAQzP,gBAAiB0B,IAElF,IAAIgO,EAAUpU,OAAS,EAAG,CACtB,GAAIkU,GAAUE,EAAU,GAAGxS,SAAW,YAAc,MACpDiK,GAAKvF,IAAI0J,aAAa,QAAS,YAAckE,EAAU,MAI9ClT,YAAU,eAAgB6K,EAAKzF,OAE5CkN,YAAUzH,EAAKvF,KAAM,gBAErBuF,EAAKvF,IAAIsH,cAAc,qBACvB/B,EAAKvF,IAAI0J,aAAa,gBAAiB,QAElCnE,EAAKvF,IAAIsH,cAAc,wBAC5B/B,EAAKvF,IAAI0J,aAAa,gBAAiB,SAEvCvI,KAAKtI,OAAO8U,mBAAqBxM,KAAKtI,OAAOuC,gBACxCvB,oBAAkBiG,EAAK7E,cACxBsK,EAAKvF,IAAIoJ,MAAMwE,QAAU,SAGjCzM,KAAKtI,OAAO4M,QL9DM,eK8DuBF,KAK7C6H,EAAOhL,UAAU3B,WAAa,SAAU8E,GACpC,GAAKA,EAAKzF,KAAV,CAGA,GAEIzD,GAIA2R,EANAlU,EAAOqH,KAAKtI,OAAOiB,KACnBgG,EAAOyF,EAAKzF,KAGZmO,EADcpU,oBAAkBiG,EAAKoO,aACjBpO,EAAKxD,MAAQwD,EAAKoO,YACtCC,EAAkB,EAElBrN,EAASK,KAAKtI,OAAOuV,iBAAiB7I,EAAKzE,OAAOuN,OAClDC,EAAaxO,EAAKiL,YAOtB,IAFI1O,EAJCxC,oBAAkBiG,EAAK7E,YAIhB6E,EAAKzD,MAHLyD,EAAK7E,WAAWoB,MAKxBvC,EAAKyU,oBAAoBhJ,EAAKzE,OAAOyH,OAASpH,KAAKtI,OAAO+H,kBACjC,QAArB2E,EAAKvE,aAA8C,WAArBuE,EAAKvE,aAA4BnH,oBAAkB0L,EAAK7E,KAAK4G,cAAc,iBAAkB,CAM/H,IAAK,GALDwC,GAAYjB,gBAAc,OAASC,UAAW,2BAC9C0F,EAAkB3F,gBAAc,QAChCC,UAAW,iBACX2F,OAAQ,uCAEHC,EAAI,EAAGA,EAAIT,EAAKS,IACrBP,GAAmB,GACnBrE,EAAUK,YAAYqE,EAAgBjF,YAE1C,IAAIoF,GAAgB9U,oBAAkBiG,EAAK8O,yBACN9O,EAAKtE,gBAApCsE,EAAK8O,uBAIX,IAHID,IAAiB9U,oBAAkBiG,EAAKrE,gBACxCkT,IAA8C,IAA7B7O,EAAKrE,aAAa/B,SAEnCiV,EAAc,CACd3B,YAAUzH,EAAK7E,MAAO,gBACtB,IAAImO,GAAahG,gBAAc,QAAUC,UAAW,YAChDgG,MAAS,EAETA,GADA3N,KAAKtI,OAAOuC,cACH0E,EAAKxE,WACTzB,oBAAkBiG,EAAKqB,KAAKtI,OAAOwC,sBAAwByE,EAAKqB,KAAKtI,OAAOwC,uBAC5E8F,KAAKtI,OAAO8U,qBAGL7N,EAAKxE,WAAaV,EAAgBuG,KAAKtI,OAAQiH,EAAMqB,KAAKtI,OAAOiB,KAAKmF,yBAEtF,IAAI8P,IAAY,CACXlV,qBAAkBiG,EAAK7E,aAAiBpB,oBAAkBiG,EAAKqB,KAAKtI,OAAOwC,uBACzEyE,EAAKqB,KAAKtI,OAAOwC,qBACf8F,KAAKtI,OAAO2U,aAA2D,SAA1CrM,KAAKtI,OAAO4U,aAAaC,eAC3DqB,GAAanU,EAAgBuG,KAAKtI,OAAQ0M,EAAKzF,KAAMqB,KAAKtI,OAAOiB,KAAKmF,0BAE1E+N,YAAU6B,GAAcC,GAAUC,EAAa,mBAAqB,sBACpEZ,GAAmB,GACnBrE,EAAUK,YAAY0E,GACtBL,EAAgBpF,MAAMC,MAAQ,MAC9B8E,GAAmB,EACnBrE,EAAUK,YAAYqE,EAAgBjF,kBAEjC0E,IAAQA,IAAQnO,EAAKxD,SAE1B6R,GAAmB,GACnBrE,EAAUK,YAAYqE,EAAgBjF,aACtCO,EAAUK,YAAYqE,EAAgBjF,aAM1CyE,GAAcnF,gBAAc,QAAUC,UAAW,eAC7C3H,KAAKtI,OAAOmW,gBACZhB,EAAY5E,MAAMC,MAAQ,eAAiB8E,EAAkB,OAEjEnB,YAAUzH,EAAK7E,MAAO,iBAAmBrE,EAAQ,QAAUyD,EAAKxD,OAChE6E,KAAK8N,eAAe1J,EAAMyI,EAAalE,GACvCA,EAAUK,YAAY6D,GACtBzI,EAAK7E,KAAKyJ,YAAYL,GAU1B,GARI3I,KAAKtI,OAAOgI,cAAgBM,KAAKtI,OAAO+H,iBACxC9G,EAAKyU,oBAAoBhJ,EAAKzE,OAAOyH,OAASpH,KAAKtI,OAAOgI,cAAgB,EAC1EmM,YAAUzH,EAAK7E,MAAO,iBAAmBrE,EAAQ,QAAUyD,EAAKxD,OAE3D6E,KAAKtI,OAAOgI,eAAiBM,KAAKtI,OAAO+H,iBAC9C9G,EAAKyU,oBAAoBhJ,EAAKzE,OAAOyH,OAASpH,KAAKtI,OAAOgI,cAAgB,GAC1EmM,YAAUzH,EAAK7E,MAAO,iBAAmBrE,EAAQ,QAAUyD,EAAKxD,QAE/DzC,oBAAkBiH,IAAWA,EAAOnH,eACrCwH,KAAKtI,OAAOqW,OAAO,iBAAkB3J,GACjCpE,KAAKtI,OAAOmW,eAAe,CAC3B,GAAIG,GAAkB5J,EAAK7E,KAAKoE,iBAAiB,YAAY,EAE7DqJ,IADYiB,SAASD,EAAgB/F,MAAMC,MAAO,IAElD8E,GAAmB,IAEfH,EADAlU,EAAKyU,oBAAoBhJ,EAAKzE,OAAOyH,OAASpH,KAAKtI,OAAO+H,gBAC5C2E,EAAK7E,KAAK4G,cAAc,eAGxB/B,EAAK7E,KAAK4G,cAAc,oBAE9B8B,MAAMC,MAAQ,eAAiB8E,EAAkB,MAGrE,GAAIG,EAAY,CACZtB,YAAUzH,EAAK7E,MAAO,gBACtB,IAAI2O,GAAc3U,YAAU6K,EAAKzE,OAAOuN,MAAO9I,EAAKzF,KACV,OAA1CyF,EAAK7E,KAAK4G,cAAc,eACpB/B,EAAK7E,KAAK4G,cAAc,eAAe2C,UAAYoF,EAAc9J,EAAK7E,KAAKuJ,UAAYoF,EAE3FxV,oBAAkBsH,KAAKtI,OAAOyW,cAC9BnO,KAAKtI,OAAO4M,QL7KG,gBK6K2BF,KAGlD6H,EAAOhL,UAAU6M,eAAiB,SAAU1J,EAAMyI,EAAalE,GAC3D,GAAIyF,GAAwD,MAA1ChK,EAAK7E,KAAK4G,cAAc,eACtC/B,EAAK7E,KAAK4G,cAAc,eAAe2C,UAAY1E,EAAK7E,KAAKuJ,SACjE,IAAsC,gBAA1B1E,GAAKzE,iBAAiCK,KAAKkM,eACnDmC,iBAAexB,EAAa7M,KAAKkM,gBACjClM,KAAKkM,eAAiB,KACtB9H,EAAK7E,KAAKuJ,UAAY,OAErB,IAAI1E,EAAK7E,KAAKiE,UAAUC,SAAS,kBAElC,IAAK,GADDrK,GAAMgL,EAAK7E,KAAK+O,SAAS/V,OAChB,EAAOa,EAAKA,EAAMgL,EAAK7E,KAAK+O,SAAS/V,OAC9CsU,EAAY7D,YAAY5E,EAAK7E,KAAK+O,SADzB,QAKbzB,GAAY/D,UAAYsF,EACxBhK,EAAK7E,KAAKuJ,UAAY,IAG9BmD,EAAOhL,UAAUkL,qBAAuB,SAAU/H,GAC9CpE,KAAKkM,eAAiB9H,EAAKmK,UAE/BtC,EAAOhL,UAAUiE,QAAU,WACvBlF,KAAKtI,OAAOiB,KAAKoN,IAAI,kBAAmB/F,KAAKmM,uBAE1CF,KCxMPuC,EAAkC,WAClC,QAASA,GAAiB7V,GACtBqH,KAAKyO,aAAe,eACpBzO,KAAKtI,OAASiB,EACdqH,KAAK0O,eACL1O,KAAK2O,WACL3O,KAAK4O,iBACL5O,KAAK6O,aAAe,EACpB7O,KAAK8O,cACL9O,KAAK+O,cAAe,EACpB/O,KAAKuF,mBACLvF,KAAKgP,eACLhP,KAAKxE,iBAAmB9C,oBAAkBsH,KAAKtI,OAAOuF,iBAghB1D,MA3gBAuR,GAAiBvN,UAAUsE,iBAAmB,WAC1CvF,KAAKtI,OAAO8N,GAAG,oBAAqBxF,KAAKiP,uBAAwBjP,MACjEA,KAAKtI,OAAOiB,KAAK6M,GAAG,gBAAiBxF,KAAKkP,aAAclP,MACxDA,KAAKtI,OAAO8N,GAAG,eAAgBxF,KAAKmP,WAAYnP,MAChDA,KAAKtI,OAAO8N,GNcM,eMdkBxF,KAAKoP,qBAAsBpP,MAC/DA,KAAKtI,OAAO8N,GAAG,gBAAiBxF,KAAKqP,cAAerP,OAKxDwO,EAAiBvN,UAAU4E,oBAAsB,WACzC7F,KAAKtI,OAAOoO,cAGhB9F,KAAKtI,OAAOqO,INIM,eMJmB/F,KAAKoP,sBAC1CpP,KAAKtI,OAAOqO,IAAI,oBAAqB/F,KAAKiP,wBAC1CjP,KAAKtI,OAAOqO,IAAI,eAAgB/F,KAAKmP,YACrCnP,KAAKtI,OAAOqO,IAAI,gBAAiB/F,KAAKqP,eACtCrP,KAAKtI,OAAOiB,KAAKoN,IAAI,gBAAiB/F,KAAKkP,gBAO/CV,EAAiBvN,UAAUiE,QAAU,WACjClF,KAAK6F,uBAGT2I,EAAiBvN,UAAUqO,SAAW,WAClC,MAAMtP,MAAKtI,OAAOC,qBAAsBC,gBAW5C4W,EAAiBvN,UAAUsO,kBAAoB,SAAU5Q,GACrD,GAAI4D,GAAQvC,IACZA,MAAKtI,OAAO8F,SAAyC,IAA7BnE,OAAOC,KAAKqF,GAAMpG,QAAkByH,KAAKtI,OAAOC,qBAAsBC,kBAC1FoI,KAAKtI,OAAOC,WAChBqI,KAAKtI,OAAO6F,aAEZ,IAAK9F,EAAauI,KAAKtI,UAAY8C,EAAUwF,KAAKtI,SAAYiH,YAAgB/G,kBAAiB+G,YAAgBhC,QAAQ,CACnH,GAAIlC,GAAKuF,KAAKtI,OAAOC,UACrB,IAAIqI,KAAKtI,OAAOuF,gBAAiB,CAC7B+C,KAAKtI,OAAO8X,MAAQ9W,oBAAkBsH,KAAKtI,OAAO8X,OAC9C,GAAIC,SAAUzP,KAAKtI,OAAO8X,MAC1BxP,KAAKtI,OAAOuF,iBACR+C,KAAKtI,OAAOuC,gBACZ+F,KAAKtI,OAAO8X,MAAME,MAAM1P,KAAKtI,OAAOuF,gBAAiB,QAAS,MAC9D+C,KAAKtI,OAAO8X,MAAMG,UAAU,YAAa3P,KAAKtI,OAAOwF,WAI7D,KAAK8C,KAAKtI,OAAOkY,kBAA6D,kBAAxC5P,KAAKtI,OAAOC,WAAsB,aAA0BqI,KAAKtI,OAAmB,gBAAI,CAC1H,GAAImY,GAAM7P,KAAKtI,OAAO8X,MAAMM,OAC5BD,GAAIE,YACJF,EAAMA,EAAIlL,QAAQ3E,KAAKtI,OAAOuF,mBAC1B9E,iBAAkB,EACtBsC,EAAGuV,aAAaH,GAAKI,KAAK,SAAUvS,GAChC6E,EAAMmM,YAAcwB,WAASC,SAASzS,EAAE0S,OAAQ7N,EAAM7K,OAAOuF,iBAAiB,GAIlE,IAHF1D,YAAU,sBAAuBgJ,EAAM7K,QAAQ+F,OAAO,SAAUC,GACtE,MAAoC,OAA7BA,EAAE2S,YAAYC,aACtB/X,SAECgY,WAAS,+BAA+B,EAAMhO,EAAM7K,QAC/CgB,oBAAkB6J,EAAMiO,mBACzBD,WAAS,UAAU,EAAOhO,EAAMiO,iBAChC5D,WAAS,oBAAqBrK,EAAM7K,QAAQ+Y,mBAAmBlO,EAAMiO,iBACrEjO,EAAMiO,gBAAkB,MAE5BjO,EAAM7K,OAAOiB,KAAK+X,uBAM7B/R,aAAgBhC,QACrBqD,KAAK2Q,gBAAgBhS,IAG7B6P,EAAiBvN,UAAU0P,gBAAkB,SAAUhS,GACnDqB,KAAK4O,iBACL5O,KAAK2O,UACL,KAAStW,EAAI,EAAGA,EAAIgB,OAAOC,KAAKqF,GAAMpG,OAAQF,IAAK,CAC/C,GAAIuY,GAAWjS,EAAKtG,EACpB2H,MAAK4O,cAAcpV,KAAKoD,YAAWgU,IAC9BlY,oBAAkBkY,EAAS5Q,KAAKtI,OAAOwF,aACxC8C,KAAK2O,QAAQnV,KAAKoX,EAAS5Q,KAAKtI,OAAOwF,YAG/C,GAAI8C,KAAKxE,gBAAiB,CAItB,IAAK,GAHDqV,MACAC,EAAc,GAAIlZ,eAAYoI,KAAK4O,eAAemC,cAAa,GAAItB,UAClEuB,MAAMhR,KAAKtI,OAAOuF,kBACd5E,EAAI,EAAGA,EAAIyY,EAAYvY,OAAQF,IAAK,CACzC,GAAI4Y,GAAYH,EAAYzY,GACxB6C,EAAQ8E,KAAK2O,QAAQjQ,QAAQuS,EAAUpY,IAC3C,KAAKH,oBAAkBuY,EAAUpY,MACzBqC,GAAS,EADjB,CAEQ,GAAIiK,GAAa8L,EAAgB,KACjCjR,MAAK4O,cAAc1T,GAAO8E,KAAKtI,OAAO0F,cAAgB+H,MAI9D0L,GAASrX,KAAKwI,MAAM6O,EAAUI,EAAUC,OAE5ClR,KAAK4O,cAAgB5O,KAAKmR,oBAAoBN,GAElD,GAAKxX,OAAOC,KAAK0G,KAAK4O,eAAerW,OAMjCyH,KAAKoR,cAAcpR,KAAK4O,mBANiB,CACzC,GACIyC,KAAkBrR,KAAKtI,OAAOC,qBAAsBC,iBAAgBoI,KAAKtI,OAAc,OAC3FsI,MAAKtI,OAAO8F,SAAW6T,EAAiBrR,KAAKtI,qBAKjDsI,KAAK6O,aAAe,GAYxBL,EAAiBvN,UAAUkQ,oBAAsB,SAAUN,GAEvD,IADA,GAAIT,MACGpQ,KAAK4O,cAAcrW,OAAS,GAAKsY,EAAStY,OAAS,GAAG,CACzD,GAAI2C,GAAQ2V,EAASnS,QAAQsB,KAAK4O,cAAc,KACjC,IAAX1T,EACA8E,KAAK4O,cAAc0C,SAGnBlB,EAAO5W,KAAKwG,KAAK4O,cAAc0C,SAC/BT,EAAS1T,OAAOjC,EAAO,IAG/B,MAAOkV,IAMX5B,EAAiBvN,UAAUgO,uBAAyB,SAAU7K,GAC1D,GAAIlL,GAAUkL,EAAKgM,MAGnB,IAAKpQ,KAAKtI,OAAOkY,iBAAoB5P,KAAK0O,YAAYnW,QACP,kBAAxCyH,KAAKtI,OAAOC,WAAsB,cAA0BqI,KAAKtI,OAAmB,gBAAOsI,KAAKtI,OAAO6Z,kBAK1G,GAA8C,kBAAxCvR,KAAKtI,OAAOC,WAAsB,cAA0BqI,KAAKtI,OAAmB,gBAAOsI,KAAKtI,OAAO6Z,kBAgBpG7Y,oBAAkBQ,IACnB8G,KAAKuP,kBAAkBrW,OAhB3B,KAAK,GAAImR,GAAM,EAAGA,EAAMnR,EAAQX,OAAQ8R,IAChC3R,oBAAkBQ,EAAQmR,GAAKnP,SAC/BhC,EAAQmR,GAAKtN,SAAWH,YAAW1D,EAAQmR,IAC3CnR,EAAQmR,GAAKrQ,SAAWwX,SAAOxR,KAAKtI,OAAO+Z,QAAQC,GAAK,UACxDnB,WAAS,sBAAwBrX,EAAQmR,GAAKrQ,SAAUd,EAAQmR,GAAMrK,KAAKtI,QAC3EwB,EAAQmR,GAAKlP,MAAQ,EACrBjC,EAAQmR,GAAKnP,MAAQyW,KAAKC,KAAqB,IAAhBD,KAAKE,WAC/B3Y,EAAQmR,GAAKrK,KAAKtI,OAAOkY,mBAAuF,IAAnE5P,KAAK0O,YAAYhQ,QAAQxF,EAAQmR,GAAKrK,KAAKtI,OAAOwF,eAChGhE,EAAQmR,GAAKhQ,iBAAkB,GAEnCnB,EAAQmR,GAAK7B,cAAgB,eAfzCxI,MAAKwQ,gBAAkBpM,EACvBmM,WAAS,UAAU,EAAMnM,EAwB7BA,GAAKgM,OAAkD,kBAAxCpQ,KAAKtI,OAAOC,WAAsB,cAA0BqI,KAAKtI,OAAmB,iBAAMgB,oBAAkBQ,IACpH8G,KAAKtI,OAAO6Z,kBAAoBvR,KAAKtI,OAAO8F,SAAWtE,EAC9D8G,KAAKtI,OAAOqW,OAAO,gBAAiB3J,IAMxCoK,EAAiBvN,UAAUmO,qBAAuB,SAAU0C,EAAYC,GACpE,GAAIC,GAAWhS,KAAKtI,OAAOqH,SAC3B,IAAIiB,KAAKtI,OAAOyW,YAAa,CACzB,GAAIjL,GAAOlD,KAAKtI,OAAOua,kBAAkB/O,IACzC8O,MAActO,MAAMlB,KAAKU,GAE7B,GAAI8G,EAGJ,IAAI8H,EAAW5O,KAAK3K,OAAS,EAAG,CACvBwZ,IACDD,EAAWpY,OAAOS,UAAW,EAEjC,KAAK,GAAI9B,GAAI,EAAGA,EAAIyZ,EAAW5O,KAAK3K,OAAQF,IAAK,CAQ7C,GAPI8Q,cAAcnJ,KAAKtI,OAAOwa,kBAC1BxJ,eAAaoJ,EAAW5O,KAAK7K,IAAK,sBAClCwT,YAAUiG,EAAW5O,KAAK7K,IAAK,sBAG/ByZ,EAAW5O,KAAK7K,GAAG4P,MAAMwE,QAAU,YAElCtD,cAAuD,kBAAxCnJ,KAAKtI,OAAOC,WAAsB,cAA0BqI,KAAKtI,OAAmB,gBACjGsI,KAAKtI,OAAO6Z,kBAAmB,CAClC,GAAIY,GAAYL,EAAW5O,KAAK7K,GAAG+Z,uBAAuB,sBAAsB,EAChFpI,GAAchK,KAAKtI,OAAOyW,YAAcnO,KAAKtI,OAAOiB,KAAKmF,wBAAwBgU,EAAW5O,KAAK7K,GAAG0M,UAChG/E,KAAKtI,OAAOiB,KAAK0Z,oBAAoBP,EAAW5O,KAAK7K,GAAGkP,aAAa,aAAa5I,MACjFjG,oBAAkByZ,IAAcnI,EAAY7P,WAC7C0R,YAAUsG,GAAY,oBACtBzJ,eAAayJ,GAAY,sBAE7B,IAAIG,OACJA,EAAYN,EAASvU,OAAO,SAAUgE,GAClC,MAAOA,GAAE0E,cAAc,kBAAoB6D,EAAY9O,MAAQ,SAAW8O,EAAY7O,MAAQ,OAEpF5C,QAAUyR,EAAY7P,UAChC6F,KAAKoP,sBAAuB1V,OAAQsQ,EAAa9G,KAAMoP,EAAWC,UAAWT,EAAWS,YAAa,GAG7G,GAAIC,GAAcV,EAAW5O,KAAK7K,GAAG8N,cAAc,uBAC9CzN,qBAAkB8Z,IACnBxS,KAAKtI,OAAOiB,KAAK8Z,gBAAgB9E,OAAO6E,QAKhDxS,MAAK0S,sBAAuBhZ,OAAQoY,EAAWpY,OAAQwJ,KAAM4O,EAAW5O,KAAMqP,UAAWT,EAAWS,aAG5G/D,EAAiBvN,UAAUyR,qBAAuB,SAAUZ,EAAYC,GACpE,GAAIxP,GAAQvC,KACRoE,GAASvF,IAAKiT,EAAWS,UAAW5T,KAAMmT,EAAWpY,QACrDe,EAAKuF,KAAKtI,OAAOC,WACjBkY,EAAM7P,KAAKtI,OAAOiB,KAAKga,gBAAgBC,gBACvCC,EAAchD,EAAIE,QAAQtS,OAAO,SAAUC,GAAK,MAAgB,WAATA,EAAEoV,IAA4B,YAATpV,EAAEoV,IAClFjD,GAAIE,QAAU8C,EACdhD,EAAI1X,iBAAkB,EACtB0X,EAAIH,MAAM1P,KAAKtI,OAAOuF,gBAAiB,QAAS6U,EAAWpY,OAAOsG,KAAKtI,OAAOwF,YAC9E6V,cAAY/S,KAAKtI,OAAO+Z,SACxBhX,EAAGuV,aAAaH,GAAKI,KAAK,SAAUvS,GAChC,GAAIvE,GAAQoJ,EAAM7K,OAAOiB,KAAKqa,gBAC1BC,EAAM9Z,EAAMuF,QAAQoT,EAAWpY,QAC/BwZ,EAAY3Z,YAAU,mBAAoBmE,GAC1C0S,EAAS1S,EAAE0S,MACf0B,GAAWpY,OAAOY,aAAe8V,CACjC,KAAK,GAAI3O,GAAI,EAAGA,EAAI2O,EAAO7X,OAAQkJ,IAAK,CACpC2O,EAAO3O,GAAG1E,SAAWH,YAAWwT,EAAO3O,IACvC2O,EAAO3O,GAAGtG,MAAQ2W,EAAWpY,OAAOyB,MAAQ,EAC5CiV,EAAO3O,GAAGvG,MAAQyW,KAAKC,KAAqB,IAAhBD,KAAKE,SACjC,IAAItU,GAAaX,YAAWkV,EAAWpY,cAChC6D,GAAWjD,aAClB8V,EAAO3O,GAAG3H,WAAayD,EACvB6S,EAAO3O,GAAGhD,eAAiBqT,EAAWpY,OAAOM,SAC7CoW,EAAO3O,GAAGzH,SAAWwX,SAAOjP,EAAM7K,OAAO+Z,QAAQC,GAAK,UACtDtB,EAAO3O,GAAG+G,cAAgB,UAC1B+H,WAAS,sBAAwBH,EAAO3O,GAAGzH,SAAUoW,EAAO3O,GAAIc,EAAM7K,SAEjE0Y,EAAO3O,GAAGc,EAAM7K,OAAOkY,mBAAsF,IAAlErN,EAAMmM,YAAYhQ,QAAQ0R,EAAO3O,GAAGc,EAAM7K,OAAOwF,aACxFgW,IAAcA,EAAUzR,KAC7B2O,EAAO3O,GAAGpH,iBAAkB,EAC5B+V,EAAO3O,GAAGtH,UAAW,GAEzBhB,EAAMgE,OAAO8V,EAAMxR,EAAI,EAAG,EAAG2O,EAAO3O,IAMxC,GAJA8O,WAAS,SAAUpX,EAAOuE,GAC1B6S,WAAS,SAAU,sBAAuB7S,GAC1C6E,EAAM7K,OAAO4M,QN9RG,iBM8R4B5G,GAC5CgT,cAAYnO,EAAM7K,OAAO+Z,SACrBlP,EAAM7K,OAAOiB,KAAKwa,WAAW5a,OAAS,IAAMgK,EAAM7K,OAAO0S,qBAAsB,CAC/E,GAAIgJ,GAAY7Z,YAAU,QAASmE,EAKnC,IAHIhF,oBAAkB0a,KAClBA,EAAYxG,WAAS,yBAA0BrK,EAAM7K,QAAQ2b,eAAe,GAAI5D,YAE/E/W,oBAAkB0a,GAAY,CAC/B,GAAIE,GAAeF,EAAUrD,QAAQtS,OAAO,SAAU8V,GAAK,MAAgB,iBAATA,EAAET,IACpEpV,GAAU,OAAI6E,EAAM7K,OAAO8b,cAAcC,sBAAsBH,EAAc5V,EAAU,QAAG,IAGlGA,EAAEiM,MAAQpH,EAAM7K,OAAOiB,KAAK2T,aAAaoH,iBACzC,IAAIC,KACApR,GAAM7K,OAAO0S,sBACb7H,EAAMqR,oBAAoBD,GAE9B/G,WAAS,oBAAqBrK,EAAM7K,QAAQ+Y,mBAAmB/S,EAAGiW,GAClEpR,EAAM7K,OAAO4M,QN7RH,WM6R4BF,MAG9CoK,EAAiBvN,UAAU2S,oBAAsB,SAAUD,GACvDA,EAAY9T,YAAc,UAC1B0Q,WAAS,oBAAoB,EAAMoD,EACnC,IAAIE,GAAgBjH,WAAS,qBAAsB5M,KAAKtI,QACpDoc,EAAclH,WAAS,cAAeiH,GACtCE,EAAWnH,WAAS,WAAYiH,EAChCC,GAAYE,UAAYhU,KAAKtI,OAAOiB,KAAK2T,aAAa2H,cAAgBH,EAAYI,SAASC,OAC3FnU,KAAKtI,OAAOiB,KAAK2T,aAAa2H,YAAcF,EAASI,OAG7D3F,EAAiBvN,UAAUiO,aAAe,WACtClP,KAAK+O,cAAe,GAExBP,EAAiBvN,UAAUmQ,cAAgB,SAAUzS,EAAMyV,GAEvD,IAAK,GADDC,MACKhc,EAAI,EAAGe,EAAMC,OAAOC,KAAKqF,GAAMpG,OAAQF,EAAIe,EAAKf,IAAK,CAC1D,GAAIic,GAAc1X,YAAW+B,EAAKtG,GAClCic,GAAYvX,SAAW4B,EAAKtG,EAC5B,IAAI8C,GAAQ,CAyBZ,IAxBA6E,KAAK6O,cACAyF,EAAYtX,eAAe,WAC5BsX,EAAYpZ,MAAQ8E,KAAK6O,eAExBnW,oBAAkB4b,EAAYtU,KAAKtI,OAAO0F,gBAC1CkX,EAAYtU,KAAKtI,OAAOkY,kBAAoBzX,EAAgB6H,KAAKtI,WAClE4c,EAAYja,iBAAkB,EAC1B2F,KAAKtI,OAAO8U,oBAAsB9T,oBAAkBsH,KAAKtI,OAAO6c,kBAC7D7b,oBAAkB4b,EAAYtU,KAAKtI,OAAO0F,eAC7CkX,EAAYna,UAAW,EAGvBma,EAAYna,WAAYzB,oBAAkB4b,EAAYtU,KAAKtI,OAAOwC,sBAC5Doa,EAAYtU,KAAKtI,OAAOwC,qBAGjCoa,EAAYtX,eAAe,WAC5BsX,EAAYpZ,OAAQoZ,EAAYja,gBAAkB2F,KAAK6O,cAEvD7O,KAAKxE,iBAAmB9C,oBAAkB4b,EAAYtU,KAAKtI,OAAOuF,mBAClE+C,KAAKtI,OAAO6F,WAAW/D,KAAK8a,GAEhCA,EAAYta,SAAWwX,SAAOxR,KAAKtI,OAAO+Z,QAAQC,GAAK,UACvDnB,WAAS,sBAAwB+D,EAAYta,SAAUsa,EAAatU,KAAKtI,SACpEgB,oBAAkB0b,GAAgB,CACnC,GAAI7W,GAAaX,YAAWwX,SACrB7W,GAAWjD,mBACXiD,GAAWyC,KAAKtI,OAAO0F,cAC1B4C,KAAKxE,uBACE+B,GAAWR,SAASiD,KAAKtI,OAAO0F,cAE3CkX,EAAYxa,WAAayD,EACzB+W,EAAY7V,eAAiBlB,EAAWvD,SACxCmB,EAAQiZ,EAAcjZ,MAAQ,EAYlC,GAVKmZ,EAAYtX,eAAe,WAC5BsX,EAAYnZ,MAAQA,GAExBmZ,EAAY9L,cAAgB,WACxB9P,oBAAkB4b,EAAYtU,KAAKtI,OAAOuF,mBAAqBqX,EAAYxa,aAC3EkG,KAAKtI,OAAO8F,SAAShE,KAAK8a,GAEzBtU,KAAKxE,iBAAyC,IAAtB8Y,EAAYnZ,OACrC6E,KAAKtI,OAAO6F,WAAW/D,KAAK8a,IAE3B5b,oBAAkB4b,EAAYtU,KAAKtI,OAAO0F,eAAiBkX,EAAYtU,KAAKtI,OAAO0F,cAAc7E,QAAS,CAC3G,GAAImB,GAASsG,KAAKoR,cAAckD,EAAYtU,KAAKtI,OAAO0F,cAAekX,EACvEA,GAAYha,aAAeZ,EAE/B2a,EAAa7a,KAAK8a,GAEtB,MAAOD,IAMX7F,EAAiBvN,UAAUoO,cAAgB,SAAUjL,GACjD,GAIIoQ,GAJAC,EAAWlb,YAAU,WAAY6K,GACjCsQ,EAAanb,YAAU,aAAc6K,GACrCuQ,EAAapb,YAAU,aAAc6K,GACrCwQ,EAAarb,YAAU,aAAc6K,GAErCyQ,EAAatb,YAAU,aAAc6K,GACrCvE,EAActG,YAAU,cAAe6K,GACvC0Q,EAAavb,YAAU,OAAQ6K,GAC/BtI,EAASvC,YAAU,SAAU6K,GAC7B2Q,EAAgBF,EAChBG,EAAuBhV,KAAKtI,OAAOqE,0BAA0B,GAC7DkZ,EAAY1b,YAAU,OAAQwb,EAC5Brc,qBAAkBqc,IAAqBrc,oBAAkBqc,EAAcjZ,SAAsC,QAAzBiZ,EAAcjZ,QAC/FpD,oBAAkBqc,EAAcpW,QAAUjG,oBAAkBqc,EAAcpW,KAAKqW,MACpFD,EAAcpW,KAAKqW,GAAwB5Q,EAAKgM,OAAO2E,EAAc7Z,OAAO8Z,GAC5EC,EAAUlY,SAASiY,GAAwB5Q,EAAKgM,OAAO2E,EAAc7Z,OAAO8Z,MAE1Etc,oBAAkBmc,IAAexb,OAAOC,KAAKub,GAAYtc,QAA2B,SAAhBsH,KACtEA,EAAcA,GAA4BgV,EAAWhV,YACrDiV,EAAaA,GAA0Bvb,YAAU,OAAQsb,GACzD/Y,EAASA,GAAkBvC,YAAU,SAAUsb,GACT,UAAlC7U,KAAKtI,OAAO2E,aAAaC,OACzB0D,KAAKnE,aAAemE,KAAKtI,OAAOiB,KAAK4D,WAAWC,oBAErC,QAAXV,GAAqC,cAAhB+D,GAAkE,UAAlCG,KAAKtI,OAAO2E,aAAaC,MAC3E0D,KAAKnE,aAAamE,KAAKyO,cAAclW,UACxCyH,KAAKtI,OAAOiB,KAAKqa,gBAAkB5O,EAAKgM,QAExCpQ,KAAKtI,OAAOwd,aACZlV,KAAKmV,aAAaL,EAAYhZ,EAAQ+D,GAU9C,IAAIuV,IANAZ,EADAC,IAAa/b,oBAAkBgc,GACrBA,EAGAvc,EAAgB6H,KAAKtI,QAAUkV,WAAS,SAAU5M,KAAKtI,OAAOiB,KAAKhB,YACvEqI,KAAKtI,OAAOiB,KAAKhB,qBAEMC,eAAc4c,EAAQ7c,WAAWsE,KAAOuY,EACrE7K,EAAQxR,EAAgB6H,KAAKtI,QAAUkV,WAAS,QAAS5M,KAAKtI,OAAOC,YACnEyd,EAAQ7c,MACd,IAAKyH,KAAKtI,OAAOiB,KAAKI,gBAAkBiH,KAAKtI,OAAOiB,KAAKK,eAAeV,QAAQC,QAC3EyH,KAAKtI,OAAOiB,KAAKC,eAAeC,IAAIN,OAAS,EAAI,CAClD,GAAIsX,GAAM,GAAIJ,SACV2D,EAAY7Z,YAAU,QAAS6K,EAC/B1L,qBAAkB0a,KAClBA,EAAY,GAAI3D,SAChB2D,EAAYxG,WAAS,yBAA0B5M,KAAKtI,QAAQ2d,YAAYjC,GACxEA,EAAYxG,WAAS,yBAA0B5M,KAAKtI,QAAQ4d,YAAYlC,GAE5E,IAAImC,GAAYnC,EAAUrD,QAAQtS,OAAO,SAAU8V,GAAK,MAAgB,YAATA,EAAET,KAC7D0C,EAAYpC,EAAUrD,QAAQtS,OAAO,SAAU8V,GAAK,MAAgB,aAATA,EAAET,IACjEjD,GAAIE,QAAUwF,EAAUhb,OAAOib,EAC/B,IAAIC,GAAe,GAAI7d,eAAYwd,GAASrE,aAAalB,EAIzD,IAHA7P,KAAKtI,OAAOqW,OAAO,oBAAsBpP,KAAM8W,IAC/CL,EAAUpV,KAAKgP,YAAYoB,OAC3BpQ,KAAKgP,YAAYoB,OAAS,KACtBpQ,KAAKtI,OAAOiB,KAAKwa,WAAW5a,OAAS,EAAG,CACpCiX,EAAQjW,YAAU,QAAS6K,EAI/B,IAHI1L,oBAAkB0a,KAClBA,EAAYxG,WAAS,yBAA0B5M,KAAKtI,QAAQ2b,eAAe,GAAI5D,YAE9E/W,oBAAkB8W,GAAQ,CACvB8D,EAAe9D,EAAMO,QAAQtS,OAAO,SAAU8V,GAAK,MAAgB,iBAATA,EAAET,IAChEsC,GAAUpV,KAAKtI,OAAO8b,cAAcC,sBAAsBH,EAAc8B,GAAS,KAI7F,GAAIpV,KAAKtI,OAAOiB,KAAKwa,WAAW5a,QAA2D,IAAjDyH,KAAKtI,OAAOiB,KAAK6F,aAAalG,QAAQC,QACtB,IAAnDyH,KAAKtI,OAAOiB,KAAKK,eAAeV,QAAQC,SAAiByH,KAAKtI,OAAOiB,KAAKC,eAAeC,IAAIN,OAAQ,CACpG6a,EAAY7Z,YAAU,QAAS6K,EAC/B1L,qBAAkB0a,KAClBA,EAAYxG,WAAS,yBAA0B5M,KAAKtI,QAAQ2b,eAAe,GAAI5D,UAE/E6D,GAAeF,EAAUrD,QAAQtS,OAAO,SAAU8V,GAAK,MAAgB,iBAATA,EAAET,IACpEsC,GAAUpV,KAAKtI,OAAO8b,cAAcC,sBAAsBH,EAActT,KAAKtI,OAAO8F,UAAU,GAElG,GAAIwC,KAAKtI,OAAOiB,KAAK6F,aAAalG,QAAQC,OAAS,GAAKyH,KAAK+O,aAAc,CACvE/O,KAAK+O,cAAe,CACpB,IAAIxR,OAAa,EACjBA,GAEayC,KAAKtI,OAAO6F,UAIzB,KAAK,GAFDiS,GAAQjW,YAAU,QAAS6K,GAC3BsR,EAAS,GAAIjG,SACRkG,EAAM3V,KAAKtI,OAAOiB,KAAK6F,aAAalG,QAAQC,OAAS,EAAGod,GAAO,EAAGA,IAAO,CAC9E,GAAIxO,GAAMnH,KAAKtI,OAAOuV,iBAAiBjN,KAAKtI,OAAOiB,KAAK6F,aAAalG,QAAQqd,GAAKzI,OAC9E0I,EAAUzO,EAAI0O,eAAiB7V,KAAKsP,WACpCnI,EAAI0O,aAAaC,KAAK3O,GACtBnH,KAAKtI,OAAOiB,KAAK6F,aAAalG,QAAQqd,GAAKI,SAC/CL,GAAOM,OAAOhW,KAAKtI,OAAOiB,KAAK6F,aAAalG,QAAQqd,GAAKzI,MAAO0I,GAEpE,GAEIK,IAAa/Z,aAFE,GAAItE,eAAY2F,GAAYwT,aAAa2E,GAEfD,aAAcL,EAASM,OAAQA,EAM5E,IALA1V,KAAKtI,OAAOqW,OAAO,aAAckI,GACjCb,EAAUa,EAAS/Z,aACnB8D,KAAKgP,YAAYoB,OAAS,KAC1BpQ,KAAK8O,WAAasG,EAClBpV,KAAKtI,OAAOqW,OAAO,kBACf/N,KAAKtI,OAAOiB,KAAKwa,WAAW5a,OAAS,IAAMG,oBAAkB8W,GAAQ,CACrE,GAEI8D,GADU/Z,YAAU,QAAS6K,GACN2L,QAAQtS,OAAO,SAAU8V,GAAK,MAAgB,iBAATA,EAAET,IAClEsC,GAAUpV,KAAKtI,OAAO8b,cAAcC,sBAAsBH,EAActT,KAAK8O,YAHhE,IAMrBnF,EAAQxR,EAAgB6H,KAAKtI,QAAUkV,WAAS,QAAS5M,KAAKtI,OAAOC,YAC/Dyd,EAAQ7c,MACd,IAAI2d,GAAOlW,KAAKmW,OAAOf,EAASzL,EAAO8K,EAAUG,EAAYD,EAAYvQ,EACzEgR,GAAUc,EAAK9F,OACfzG,EAAQuM,EAAKvM,MACbvF,EAAKgM,OAASgF,EACdhR,EAAKuF,MAAQA,EACb3J,KAAKtI,OAAOqW,OAAO,gBAAiB3J,IAExCoK,EAAiBvN,UAAUkV,OAAS,SAAUf,EAASzL,EAAO8K,EAAUG,EAAYD,EAAYvQ,GAc5F,OAbIpE,KAAKtI,OAAO2U,aAAiBoI,GAA2B,gBAAfE,GACpCC,GAAwC,gBAA1B5U,KAAKtI,OAAO0e,WAM1BpW,KAAKtI,OAAO0S,sBAA0BqK,GAA2B,gBAAfE,IACvD3U,KAAKtI,OAAOqW,ONheG,iBMge4BqC,OAAQgF,EAASzL,MAAOA,EAAOkL,WAAYjI,WAAS,aAAcxI,KAC7GgR,EAAUpV,KAAKgP,YAAYoB,OAC3BzG,EAAQ3J,KAAKgP,YAAYrF,QARzB3J,KAAKtI,OAAOqW,ON1dG,iBM0d4BqC,OAAQgF,EAASzL,MAAOA,IACnEyL,EAAUpV,KAAKgP,YAAYoB,OAC3BzG,EAAQxR,EAAgB6H,KAAKtI,QAAUkV,WAAS,QAAS5M,KAAKtI,OAAOC,YAC/DqI,KAAKgP,YAAYrF,QAObyG,OAAQgF,EAASzL,MAAOA,IAM1C6E,EAAiBvN,UAAUkO,WAAa,SAAUkH,GAC9CrW,KAAKgP,YAAcqH,GAEvB7H,EAAiBvN,UAAUkU,aAAe,SAAUL,EAAYhZ,EAAQ+D,GAC/C,WAAhBA,GAA4C,SAAhBA,GAC7BG,KAAKtI,OAAOqW,ONjeA,cMie4B9S,MAAO6Z,EAAYhZ,OAAQA,GAAU+D,IAE7D,cAAhBA,GAAiE,UAAlCG,KAAKtI,OAAO2E,aAAaC,MACxD0D,KAAKtI,OAAOqW,ON1cD,iBM6cZS,MCjiBX,SAAW8H,GACPA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAmB,MAAI,IAAM,QACzCA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAwB,WAAI,IAAM,cAC/CA,gBAAgBA,mBAMnB,SAAWC,GACPA,EAAiBA,EAA0B,QAAI,GAAK,UACpDA,EAAiBA,EAA6B,WAAI,GAAK,aACvDA,EAAiBA,EAAgC,cAAI,GAAK,gBAC1DA,EAAiBA,EAAiC,eAAI,GAAK,iBAC3DA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAA4B,UAAI,GAAK,YACtDA,EAAiBA,EAA8B,YAAI,GAAK,cACxDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAAyB,OAAI,IAAM,UACrDA,qBAAqBA,uBC3CxB,IAAI9V,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrH,OAAOwH,iBAChBC,uBAA2BnE,QAAS,SAAUgE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIjD,KAAKiD,GAAOA,EAAE5D,eAAeW,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavH,OAAO6H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQxI,EAAKyI,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUjJ,OAAQkJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjI,OAAOqI,yBAAyBL,EAAQxI,GAAOyI,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxI,EAAKyI,OACpH,KAAK,GAAIjJ,GAAI+I,EAAW7I,OAAS,EAAGF,GAAK,EAAGA,KAASsI,EAAIS,EAAW/I,MAAIoJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxI,EAAK4I,GAAKd,EAAEU,EAAQxI,KAAS4I,EAChJ,OAAOF,GAAI,GAAKE,GAAKpI,OAAOwI,eAAeR,EAAQxI,EAAK4I,GAAIA,GAM5D+U,EAA8B,SAAUzU,GAExC,QAASyU,KACL,MAAkB,QAAXzU,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,MA5BAS,GAAU+V,EAAczU,GAIxBZ,GACIc,WAAS,KACVuU,EAAavV,UAAW,eAAY,IACvCE,GACIc,WAAS,IACVuU,EAAavV,UAAW,gBAAa,IACxCE,GACIc,WAAS,IACVuU,EAAavV,UAAW,kBAAe,IAC1CE,GACIc,cACDuU,EAAavV,UAAW,wBAAqB,IAChDE,GACIc,YAAS,IACVuU,EAAavV,UAAW,wBAAqB,IAChDE,GACIc,YAAS,IACVuU,EAAavV,UAAW,gBAAa,IACxCE,GACIc,WAAS,OACVuU,EAAavV,UAAW,eAAY,IACvCE,GACIc,WAAS,QACVuU,EAAavV,UAAW,mBAAgB,IACpCuV,GACTtU,iBCrDEzB,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrH,OAAOwH,iBAChBC,uBAA2BnE,QAAS,SAAUgE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIjD,KAAKiD,GAAOA,EAAE5D,eAAeW,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavH,OAAO6H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQxI,EAAKyI,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUjJ,OAAQkJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjI,OAAOqI,yBAAyBL,EAAQxI,GAAOyI,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxI,EAAKyI,OACpH,KAAK,GAAIjJ,GAAI+I,EAAW7I,OAAS,EAAGF,GAAK,EAAGA,KAASsI,EAAIS,EAAW/I,MAAIoJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxI,EAAK4I,GAAKd,EAAEU,EAAQxI,KAAS4I,EAChJ,OAAOF,GAAI,GAAKE,GAAKpI,OAAOwI,eAAeR,EAAQxI,EAAK4I,GAAIA,GAQ5DgV,EAAiC,SAAU1U,GAE3C,QAAS0U,KACL,GAAIlU,GAAmB,OAAXR,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,IAGhE,OAFAuC,GAAMmU,KAAO,GAAIC,wBACjBpU,EAAMqU,cACCrU,EAmEX,MAxEA9B,GAAUgW,EAAiB1U,GAU3B0U,EAAgBxV,UAAU4V,aAAe,SAAUC,GAC3C9W,KAAK+W,SAAW/W,KAAK+W,OAAOC,UAAYhX,KAAK+W,OAAOA,UACpD/W,KAAKiX,SAAWjX,KAAKkX,kBAAkBlX,KAAK+W,UAMpDN,EAAgBxV,UAAUiW,kBAAoB,SAAUH,GACpD,MAAIA,GAAOlP,KACA7H,KAAK0W,KAAKS,cAAcJ,GAGxB/W,KAAK0W,KAAKU,gBAAgBL,IAMzCN,EAAgBxV,UAAUoW,aAAe,WACrC,MAAOrX,MAAKiX,UAKhBR,EAAgBxV,UAAUqW,YAAc,SAAUC,OAC/B,KAAXA,IAAqBA,UACGC,KAAxBxX,KAAKyX,iBACLzX,KAAK4W,WAAWc,eAAaC,WAAUA,WAASC,WAAc9E,GAAI+E,UAAQ7X,KAAKyX,eAAgBF,GAC3FO,SAAU,oBAMtBrB,EAAgBxV,UAAU8W,YAAc,SAAUlQ,GAC9C,MAAO7H,MAAK4W,WAAWc,eAAaC,WAAU9P,KAKlD4O,EAAgBxV,UAAU+W,oBAAsB,SAAUC,GACtDjY,KAAKkY,cAAcD,GAAM,IAE7B9W,GACIc,cACDwU,EAAgBxV,UAAW,WAAQ,IACtCE,GACIc,cACDwU,EAAgBxV,UAAW,qBAAkB,IAChDE,GACIc,cACDwU,EAAgBxV,UAAW,YAAS,IACvCE,GACIc,cACDwU,EAAgBxV,UAAW,aAAU,IACxCE,GACIc,cACDwU,EAAgBxV,UAAW,iBAAc,IAC5CE,GACIc,cACDwU,EAAgBxV,UAAW,sBAAmB,IAC1CwV,GACTvU,iBAEEiW,EAA8B,SAAUpW,GAExC,QAASoW,KACL,MAAkB,QAAXpW,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,MAVAS,GAAU0X,EAAcpW,GAIxBZ,GACIiB,gBAAeqU,IAChB0B,EAAalX,UAAW,cAAW,IACtCE,GACIc,YAAS,IACVkW,EAAalX,UAAW,uBAAoB,IACxCkX,GACTjW,iBCjHEzB,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrH,OAAOwH,iBAChBC,uBAA2BnE,QAAS,SAAUgE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIjD,KAAKiD,GAAOA,EAAE5D,eAAeW,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavH,OAAO6H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQxI,EAAKyI,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUjJ,OAAQkJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjI,OAAOqI,yBAAyBL,EAAQxI,GAAOyI,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxI,EAAKyI,OACpH,KAAK,GAAIjJ,GAAI+I,EAAW7I,OAAS,EAAGF,GAAK,EAAGA,KAASsI,EAAIS,EAAW/I,MAAIoJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxI,EAAK4I,GAAKd,EAAEU,EAAQxI,KAAS4I,EAChJ,OAAOF,GAAI,GAAKE,GAAKpI,OAAOwI,eAAeR,EAAQxI,EAAK4I,GAAIA,GAM5D2W,EAA8B,SAAUrW,GAExC,QAASqW,KACL,MAAkB,QAAXrW,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAgC/D,MAlCAS,GAAU2X,EAAcrW,GAIxBZ,GACIc,YAAS,IACVmW,EAAanX,UAAW,kBAAe,IAC1CE,GACIc,YAAS,IACVmW,EAAanX,UAAW,mBAAgB,IAC3CE,GACIc,YAAS,IACVmW,EAAanX,UAAW,oBAAiB,IAC5CE,GACIc,WAAS,SACVmW,EAAanX,UAAW,WAAQ,IACnCE,GACIc,WAAS,QACVmW,EAAanX,UAAW,qBAAkB,IAC7CE,GACIc,YAAS,IACVmW,EAAanX,UAAW,0BAAuB,IAClDE,GACIc,YAAS,IACVmW,EAAanX,UAAW,wBAAqB,IAChDE,GACIc,YAAS,IACVmW,EAAanX,UAAW,8BAA2B,IACtDE,GACIc,WAAS,KACVmW,EAAanX,UAAW,eAAY,IACvCE,GACIc,gBACDmW,EAAanX,UAAW,aAAU,IAC9BmX,GACTlW,iBC3DEzB,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrH,OAAOwH,iBAChBC,uBAA2BnE,QAAS,SAAUgE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIjD,KAAKiD,GAAOA,EAAE5D,eAAeW,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavH,OAAO6H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQxI,EAAKyI,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUjJ,OAAQkJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjI,OAAOqI,yBAAyBL,EAAQxI,GAAOyI,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxI,EAAKyI,OACpH,KAAK,GAAIjJ,GAAI+I,EAAW7I,OAAS,EAAGF,GAAK,EAAGA,KAASsI,EAAIS,EAAW/I,MAAIoJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxI,EAAK4I,GAAKd,EAAEU,EAAQxI,KAAS4I,EAChJ,OAAOF,GAAI,GAAKE,GAAKpI,OAAOwI,eAAeR,EAAQxI,EAAK4I,GAAIA,GAM5D4W,EAAgC,SAAUtW,GAE1C,QAASsW,KACL,MAAkB,QAAXtW,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,MAVAS,GAAU4X,EAAgBtW,GAI1BZ,GACIc,cACDoW,EAAepX,UAAW,YAAS,IACtCE,GACIc,cACDoW,EAAepX,UAAW,gBAAa,IACnCoX,GACTnW,iBAKEoW,GAA8B,SAAUvW,GAExC,QAASuW,KACL,MAAkB,QAAXvW,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,MAVAS,GAAU6X,EAAcvW,GAIxBZ,GACIiB,gBAAeiW,IAChBC,EAAarX,UAAW,cAAW,IACtCE,GACIc,YAAS,IACVqW,EAAarX,UAAW,kBAAe,IACnCqX,GACTpW,iBCpDEzB,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrH,OAAOwH,iBAChBC,uBAA2BnE,QAAS,SAAUgE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIjD,KAAKiD,GAAOA,EAAE5D,eAAeW,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAavH,OAAO6H,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQxI,EAAKyI,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUjJ,OAAQkJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjI,OAAOqI,yBAAyBL,EAAQxI,GAAOyI,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQxI,EAAKyI,OACpH,KAAK,GAAIjJ,GAAI+I,EAAW7I,OAAS,EAAGF,GAAK,EAAGA,KAASsI,EAAIS,EAAW/I,MAAIoJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQxI,EAAK4I,GAAKd,EAAEU,EAAQxI,KAAS4I,EAChJ,OAAOF,GAAI,GAAKE,GAAKpI,OAAOwI,eAAeR,EAAQxI,EAAK4I,GAAIA,GAuC5D8W,GAA0B,SAAUxW,GAEpC,QAASwW,GAASxY,EAAS0R,GACvB,GAAIlP,GAAQR,EAAOS,KAAKxC,KAAMD,EAAS0R,IAAYzR,IAUnD,OATAuC,GAAMyM,eACNzM,EAAMiW,sBACNjW,EAAMkW,4BACNlW,EAAMmW,eAAiB,iBACvBnW,EAAMoW,eAAiB,iBACvBpW,EAAMkM,aAAe,eACrBmK,EAAWvN,OAAOwN,GAClBtI,WAAS,mBAAoBhO,EAAMuW,yBAA0BvW,GAC7DA,EAAM5J,KAAO,GAAIyS,QACV7I,EAZX9B,GAAU8X,EAAUxW,GAcpB6W,EAAaL,EAUbA,EAAStX,UAAU8X,YAAc,SAAUC,EAAuBC,EAElEC,EAAUC,GACN,MAAIhQ,eACAnJ,KAAKoZ,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,GAC/E,MAEJnZ,KAAKoZ,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGZ,EAAStX,UAAUqY,UAAY,SAAUN,EAEzCC,EAAkBC,EAAUC,GACxB,MAAIhQ,eACAnJ,KAAKoZ,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,GAC/E,MAEJnZ,KAAKoZ,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGZ,EAAStX,UAAUsY,UAAY,SAAUC,EAEzCP,EAAkBQ,EAAQN,GACtB,MAAIhQ,eACAnJ,KAAK0Z,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,GACjE,MAEJnZ,KAAK0Z,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,IAMnFZ,EAAStX,UAAUgE,cAAgB,WAC/B,MAAO,YAMXsT,EAAStX,UAAU0Y,UAAY,WAC3B3Z,KAAK4Z,iBACL5Z,KAAK6Z,iBACL7Z,KAAK8Z,eACDC,MAAO,QACPC,MAAO,QACPC,OAAQ,UACRC,UAAW,aACXC,YAAa,eACbC,UAAW,SACXC,WAAY,WAEhBra,KAAKsa,KAAO,GAAIC,QAAK,WAAYva,KAAK8Z,cAAe9Z,KAAKwa,QACtDxa,KAAKxE,iBAAmB9C,oBAAkBsH,KAAK5C,gBAC/C4C,KAAK5C,aAAe,aAU5Bmb,EAAStX,UAAUwZ,aAAe,SAAU9e,EAAYoa,EAAW2E,GAC/D1a,KAAK2a,WAAWC,WAAWjf,EAAYoa,EAAW2E,IAMtDnC,EAAStX,UAAU4Z,aAAe,WAC1B7a,KAAK2a,YACL3a,KAAK2a,WAAWE,gBASxBtC,EAAStX,UAAU6Z,iBAAmB,SAAU5N,GAC5ClN,KAAK2a,WAAWG,iBAAiB5N,IASrCqL,EAAStX,UAAU8Z,OAAS,SAAUC,GAClChb,KAAKrH,KAAKoiB,OAAOC,IAYrBzC,EAAStX,UAAUga,eAAiB,SAAUC,GAC1Clb,KAAKmb,aAAaF,eAAeC,GACjClb,KAAKob,qBAQT7C,EAAStX,UAAUoa,eAAiB,SAAUC,EAAWC,GACrDvb,KAAKrH,KAAK0iB,eAAeC,EAAWC,IAExChD,EAAStX,UAAU2Y,eAAiB,WAEhC,GACI4B,GADAhB,EAASD,OAAKC,MAElBgB,MACAjL,WAASvQ,KAAKwa,UAAYgB,EAC1B,IAAIC,EACJA,MACAA,EAAaliB,YAAUyG,KAAKwa,OAAQA,EACpC,IAAIkB,EACJA,MACAA,EAAiBniB,YAAUyG,KAAKiF,gBAAiBwW,GACjDlL,WAAS,OAAQmL,EAAgBniB,YAAUyG,KAAKwa,OAAQgB,IACxDjB,OAAKoB,KAAKH,IAQdjD,EAAStX,UAAU6K,MAAQ,WACvB9L,KAAK4b,YAAY9P,SAErByM,EAAStX,UAAU4a,yBAA2B,SAAUne,GACpD,GAAIsC,KAAK8b,cACL,OAAQpe,EAAE5B,QACN,IAAK,gBACDkE,KAAK+b,WACL,MACJ,KAAK,cACD/b,KAAKgc,aACL,MACJ,KAAK,mBACD,GAEIC,GAFiBve,EAAE2D,OACa+E,QAAQ,cACXA,QAAQ,MACrC8V,EAAcD,EAAY9V,cAAc,oBACxB,QAAhB+V,OAAwC1E,KAAhB0E,GACxBlc,KAAKmc,sBAAsBF,EAAY9V,cAAc,qBAEzD,MACJ,KAAK,qBACD,GAEIiW,GAFe1e,EAAE2D,OACW+E,QAAQ,cACXA,QAAQ,MACjCiW,EAAYD,EAAUjW,cAAc,sBACtB,QAAdkW,OAAoC7E,KAAd6E,GACtBrc,KAAKmc,sBAAsBC,EAAUjW,cAAc,uBAEvD,MACJ,KAAK,YACD,GAAI9E,GAAS3D,EAAE2D,OAAOib,cAClBC,EAAiBvc,KAAKwc,mBAAmBnb,EAC7C,IAAuB,OAAnBkb,EAAyB,CACzB,GAAIxX,GAAWwX,EAAexX,QAC9B/E,MAAKyc,UAAU1X,EACf,IAAI2X,GAAYhf,EAAE2D,OAAOqb,UACrB7d,EAAM0d,EAAejO,SAASoO,EAClC7Q,aAAUhN,GAAM,aAChBgN,YAAUhN,GAAM,eAGhBmB,MAAK2c,gBAET,MACJ,KAAK,UACD,GAAIC,GAAYlf,EAAE2D,OAAOib,cACrBO,EAAoB7c,KAAK8c,uBAAuBF,EACpD,IAA0B,OAAtBC,EAA4B,CAC5B,GAAIE,GAASF,EAAkB9X,QAC/B/E,MAAKyc,UAAUM,EACf,IAAIC,GAAStf,EAAE2D,OAAOqb,UAClBxZ,EAAO2Z,EAAkBvO,SAAS0O,EACtCnR,aAAU3I,GAAO,aACjB2I,YAAU3I,GAAO,eAGjBlD,MAAK2c,mBAMzBpE,EAAStX,UAAUub,mBAAqB,SAAUK,GAC9C,GAAIjW,GAAaiW,EAAkBtW,kBAKnC,OAJmB,QAAfK,IAA0E,IAAlDA,EAAWe,UAAUjJ,QAAQ,iBACxB,SAA7BkI,EAAWqB,MAAMwE,UACjB7F,EAAa5G,KAAKwc,mBAAmB5V,IAElCA,GAGX2R,EAAStX,UAAU6b,uBAAyB,SAAUD,GAClD,GAAIjW,GAAaiW,EAAkBI,sBAKnC,OAJmB,QAAfrW,IAA0E,IAAlDA,EAAWe,UAAUjJ,QAAQ,iBACxB,SAA7BkI,EAAWqB,MAAMwE,UACjB7F,EAAa5G,KAAK8c,uBAAuBlW,IAEtCA,GAEX2R,EAAStX,UAAU4Y,eAAiB,WAChC7Z,KAAK8Z,iBACL9Z,KAAKxC,YACLwC,KAAKzC,cACLyC,KAAKkd,eACLld,KAAKmd,aAAc,EACnBnd,KAAKod,eAAgB,EACrBpd,KAAKqd,YACDC,cAAe,iBACfC,YAAa,eACbC,iBAAkB,qBAClBC,mBAAoB,uBACpBC,UAAW,YACXC,QAAS,WAEb3d,KAAKkV,cAAiBlV,KAAKrI,qBAAsBC,iBAAgBoI,KAAKrI,WAAWA,WAAWimB,UACnFllB,oBAAkBsH,KAAKrI,WAAW+C,QAAWsF,KAAKrI,WAAWE,kBAAmBgmB,qBACzF7d,KAAKxE,iBAAmB9C,oBAAkBsH,KAAK/C,kBAMnDsb,EAAStX,UAAU6c,WAAa,WAC5BC,eAAa/V,IAAIhI,KAAKrH,KAAK8Y,QAAS,QAASzR,KAAKge,kBAAmBhe,MACrE+d,eAAa/V,IAAIhI,KAAKyR,QAAS,WAAYzR,KAAKge,kBAAmBhe,MACnEA,KAAKie,eAAiB,GAAIC,kBAAele,KAAKyR,SAC1C0M,UAAWne,KAAK6b,yBAAyB/F,KAAK9V,MAC9Cqd,WAAYrd,KAAKqd,WACjBe,UAAW,YAEXpe,KAAK8b,gBACL9b,KAAKyR,QAAQ4M,UAAsC,IAA3Bre,KAAKyR,QAAQ4M,SAAkB,EAAIre,KAAKyR,QAAQ4M,WAQhF9F,EAAStX,UAAUqd,gBAAkB,WACjC,GAAIC,KACJ,OAAIve,MAAK8F,YACEyY,GAEXA,EAAQ/kB,MACJglB,OAAQ,SAAUpa,MAAOpE,KAAMA,KAAKhH,kBAEnCN,oBAAkBsH,KAAKye,UACxBF,EAAQ/kB,MACJglB,OAAQ,UACRpa,MAAOpE,QAGXA,KAAK0e,kBACLH,EAAQ/kB,MACJglB,OAAQ,cACRpa,MAAOpE,QAGXA,KAAKqM,aACLkS,EAAQ/kB,MACJglB,OAAQ,QACRpa,MAAOpE,KAAMA,KAAKsM,gBAGtBtM,KAAKI,iBACLme,EAAQ/kB,MACJglB,OAAQ,UACRpa,MAAOpE,QAGXA,KAAKM,cACLie,EAAQ/kB,MACJglB,OAAQ,OACRpa,MAAOpE,QAGXA,KAAKmT,WAAW5a,OAAS,GACzBgmB,EAAQ/kB,MACJglB,OAAQ,UAAWpa,MAAOpE,QAGlCue,EAAQ/kB,MACJglB,OAAQ,SAAUpa,MAAOpE,QAEzBA,KAAK2e,kBACLJ,EAAQ/kB,MACJglB,OAAQ,cAAepa,MAAOpE,SAGlCA,KAAKN,eAAiBM,KAAKd,YAAcc,KAAKb,qBAC9Cof,EAAQ/kB,MACJglB,OAAQ,SAAUpa,MAAOpE,QAG7BA,KAAK4e,gBACLL,EAAQ/kB,MACJglB,OAAQ,YAAapa,MAAOpE,QAGhCA,KAAK6e,gBACLN,EAAQ/kB,MACJglB,OAAQ,YAAapa,MAAOpE,QAGhCA,KAAKK,gBACLke,EAAQ/kB,MACJglB,OAAQ,aAAcpa,MAAOpE,QAGjCA,KAAK8e,mBACLP,EAAQ/kB,MACJglB,OAAQ,gBAAiBpa,MAAOpE,QAGxCA,KAAK+e,sBAAsBR,GACpBA,IAEXhG,EAAStX,UAAU8d,sBAAwB,SAAUR,GAC7Cve,KAAKgf,qBACLT,EAAQ/kB,MACJglB,OAAQ,iBACRpa,MAAOpE,SAGXA,KAAK3D,aAAa4iB,aAAejf,KAAK3D,aAAa6iB,eAAiBlf,KAAK3D,aAAa4D,eACtFse,EAAQ/kB,MACJglB,OAAQ,OACRpa,MAAOpE,QAGXA,KAAKmf,gBAAgBnf,KAAK1H,UAC1BimB,EAAQ/kB,MACJglB,OAAQ,gBACRpa,MAAOpE,QAGXA,KAAKof,gBACLb,EAAQ/kB,MACJglB,OAAQ,YACRpa,MAAOpE,QAGXA,KAAKoK,sBACLmU,EAAQ/kB,MACJglB,OAAQ,gBACRpa,MAAOpE,SAInBuY,EAAStX,UAAUke,gBAAkB,SAAU7mB,GAC3C,GAAIiK,GAAQvC,IACZ,OAAO1H,GAAQ+mB,KAAK,SAAUlY,GAC1B,MAAIA,GAAI7O,QACGiK,EAAM4c,gBAAgBhY,EAAI7O,YAE3B6O,EAAImY,WAAYnY,EAAIoY,qBAOtChH,EAAStX,UAAUue,aAAe,WAC1Bxf,KAAKrH,MAAQqH,KAAKrH,KAAK8Y,SACvBsM,eAAa0B,OAAOzf,KAAKrH,KAAK8Y,QAAS,QAASzR,KAAKge,oBAO7DzF,EAAStX,UAAUye,OAAS,WACxB,GAAInd,GAAQvC,IACZ2f,kBAAgBte,OAAQrB,KAAKyR,SAAWzR,KAAK0H,eAC7C1H,KAAKX,aAAe,GAAI4M,GAAOjM,MAC/BA,KAAK4f,WAAa,GAAIpR,GAAiBxO,MACvCA,KAAK4b,YAAc,GAAIzQ,GAAMnL,KAW7B,IATIA,KAAiB,iBACjBA,KAAKkS,kBAAmB,GAE5BlS,KAAKsE,QZhfK,QYifVtE,KAAK6f,sBACL7f,KAAK/F,eAAgB,EAChBvB,oBAAkBsH,KAAKrI,aACxBqI,KAAK8f,gBAAgB9f,KAAKrI,aAEzBwR,eAAenJ,KAAKkS,iBAAkB,CACvClS,KAAK+f,WACD/f,KAAKyR,QAAQjO,UAAUC,SAAS,eAAiBzD,KAAKggB,gBAAgBC,WACtEjgB,KAAKrH,KAAKqnB,gBAAgBC,UAAY,gBAE1CjgB,KAAKkgB,aACL,IAAIC,GAAgBzY,gBAAc,OAASgK,GAAI1R,KAAKyR,QAAQC,GAAK,gBACjE7F,aAAU7L,KAAKyR,SAAU,cACpB/Y,oBAAkBsH,KAAKogB,SAAoC,gBAAjBpgB,eAA2D,IAA9BA,KAAKogB,OAAO1hB,QAAQ,OAC5FsB,KAAKyR,QAAQxJ,MAAMmY,OAASpgB,KAAKogB,QAEhC1nB,oBAAkBsH,KAAKkI,QAAkC,gBAAhBlI,cAAyD,IAA7BA,KAAKkI,MAAMxJ,QAAQ,OACzFsB,KAAKyR,QAAQxJ,MAAMC,MAAQlI,KAAKkI,OAEpClI,KAAKyR,QAAQzI,YAAYmX,GACzBngB,KAAKrH,KAAK0nB,SAASF,GACnBngB,KAAK8d,aAET9d,KAAKsgB,gBACL,IACIC,GAAoBvgB,KAAKrH,KAAoB,eAMjD,IAJAqH,KAAKrH,KAAoB,gBAAI,SAAUyL,EAAMlJ,GACzCqlB,EAAkBve,MAAMO,EAAM5J,MAC9B4J,EAAMie,cAAcpc,EAAMlJ,IAE1BiO,cAAcnJ,KAAKkS,iBAAkB,CACrC,GAAIuO,GAAO,SAAUrc,GAAQ,MAAO7B,GAAMme,aAAatc,EAAMqc,GAC7DE,gBAAanb,GAAG,qBAAsBib,EAAMzgB,QAGpDuY,EAAStX,UAAU2f,gBAAkB,WAC5BloB,oBAAkBsH,KAAKrH,KAAKkoB,kBAC7B7gB,KAAKrH,KAAKkoB,gBAAgB3b,UAE9BlF,KAAK6gB,gBAAkB7gB,KAAKrH,KAAKkoB,gBAAkB,GAAIve,GAActC,OAEzEuY,EAAStX,UAAU6f,wBAA0B,WACpC3X,aAGIA,cAAcnJ,KAAKkS,mBACxBlS,KAAK+gB,wBAAyB,EAC9B/gB,KAAKkY,eAAgB8I,iBAAkBhhB,KAAKrH,KAAKqoB,mBAAoB,GACrEhhB,KAAK+gB,wBAAyB,GAL9B/gB,KAAKghB,iBAAmBhhB,KAAKrH,KAAKqoB,kBAQ1CzI,EAAStX,UAAUyf,aAAe,SAAUtc,EAAM0O,GAC9C,GAAI1O,EAAKsN,KAAO1R,KAAKyR,QAAQC,GAAK,eAAlC,CACI1R,KAAKrH,KAAOyL,EAAKzL,KAKrBqH,KAAKrH,KAAK6W,MAAMO,UAGX/P,MAAKkS,iBAINlS,KAAKrH,KAAa,UAAI,EAHtBqH,KAAKrH,KAAkB,eAAI,EAK/BqH,KAAKihB,gBACLjhB,KAAKkhB,YAAYlhB,KAAKrH,KAAKL,SAC3B0H,KAAKmhB,gBAEAzoB,qBAAkBsH,KAAKohB,kBACxBphB,KAAKrH,KAAK6M,GAAG,mBAAoBxF,KAAKohB,gBAA8B,eAAGphB,KAAKohB,gBAEhF,KAAK,GAAI/oB,GAAI,EAAGA,EAAI2H,KAAK1H,QAAQC,OAAQF,IACrC2H,KAAK1H,QAAQD,GAAG+O,IAAMpH,KAAKrH,KAAKL,QAAQD,GAAG+O,GAE/CpH,MAAK8d,aACL9d,KAAK4gB,iBAEAloB,qBAAkBsH,KAAKrH,KAAK4D,aAC7ByD,KAAKrH,KAAK4D,WAA2B,kBAGzCyD,MAAKrH,KAAiB,eACtBgoB,eAAa5a,IAAI,qBAAsB/F,KAAK0gB,gBAEhDnI,EAAStX,UAAUigB,YAAc,SAAUhE,EAAamE,OACxC,KAARA,IAAkBA,EAAM,EAC5B,KAAK,GAAIhpB,GAAI,EAAGe,EAAM8jB,EAAY3kB,OAAQF,EAAIe,EAAKf,IAC3C6kB,EAAY7kB,GAAGC,SACf4kB,EAAY7kB,GAAG6C,MAAQxC,oBAAkBwkB,EAAY7kB,GAAG6C,OAASmmB,EAC7DnE,EAAY7kB,GAAG6C,MACnBmmB,IACAA,EAAMrhB,KAAKkhB,YAAYhE,EAAY7kB,GAAGC,QAAS+oB,KAG/CnE,EAAY7kB,GAAG6C,MAAQxC,oBAAkBwkB,EAAY7kB,GAAG6C,OAASmmB,EAC7DnE,EAAY7kB,GAAG6C,MACnBmmB,IAGR,OAAOA,IAEX9I,EAAStX,UAAUggB,cAAgB,WAE3BjhB,KAAK3D,eACL2D,KAAKrH,KAAK0D,aAAiB,KAAI2D,KAAK3D,aAAiB,KACrD2D,KAAKrH,KAAK0D,aAAakS,SAAWvO,KAAK3D,aAAakS,SAExD,KAASlW,EAAI,EAAGA,EAAI2H,KAAKmT,WAAW5a,OAAQF,IACxC,IAAK,GAAI0C,GAAI,EAAGA,EAAIiF,KAAKmT,WAAW9a,GAAGC,QAAQC,OAAQwC,IACnDiF,KAAKrH,KAAKwa,WAAW9a,GAAGC,QAAQyC,GAAO,KAAIiF,KAAKmT,WAAW9a,GAAGC,QAAQyC,GAAO,IAGrF,KAAK,GAAI1C,GAAI,EAAGA,EAAI2H,KAAK1H,QAAQC,OAAQF,IACrC2H,KAAKrH,KAAKL,QAAQD,GAAO,KAAI2H,KAAK1H,QAAQD,GAAO,MAIzDkgB,EAAStX,UAAU6e,gBAAkB,SAAUnhB,GAC3C,GAAI4D,GAAQvC,IACZ,IAAIrB,YAAgBhC,QAASgC,EAAKpG,OAAS,GAAKoG,EAAK,GAAG3B,eAAe,SACnEgD,KAAKxC,SAAWrF,EAAgB6H,MAAQ4M,WAAS,SAAUjO,GAAQA,EACnEqB,KAAKxC,SAASC,OAAO,SAAUC,GAC3B6S,WAAS,sBAAwB7S,EAAE1D,SAAU0D,EAAG6E,GAChC,IAAZ7E,EAAEvC,OACFoH,EAAMhF,WAAW/D,KAAKkE,SAK9B,IAAIvF,EAAgB6H,MAAO,CACvB,GAAIshB,GAAW1U,WAAS,SAAU5M,KAAKrI,WACvCqI,MAAK4f,WAAWrQ,kBAAkB+R,OAGlCthB,MAAK4f,WAAWrQ,kBAAkB5Q,IAa9C4Z,EAAStX,UAAUsgB,mBAAqB,WACpCvhB,KACKwhB,mBACLxhB,KAAKrH,KAAK8oB,UAAYzhB,KAAKyhB,UAC3BzhB,KAAKrH,KAAKmjB,cAAgB9b,KAAK8b,cAC/B9b,KAAKrH,KAAKL,QAAU0H,KAAK0hB,eAAe1hB,KAAK1H,SAC7C0H,KAAKrH,KAAKgmB,iBAAmB3e,KAAK2e,iBAClC3e,KAAKrH,KAAKkmB,eAAiB7e,KAAK6e,eAChC7e,KAAKrH,KAAK6W,MAAQxP,KAAKwP,MACvBxP,KAAKrH,KAAKgpB,gBAAkB3hB,KAAK2hB,gBACjC3hB,KAAKrH,KAAK0T,YAAcrM,KAAKqM,YAC7BrM,KAAKrH,KAAK2T,aAAesV,sBAAoB5hB,KAAKsM,cAClDtM,KAAKrH,KAAKkpB,cAAgB7hB,KAAK6hB,cAC/B7hB,KAAKrH,KAAK0H,eAAiBL,KAAKK,eAChCL,KAAKrH,KAAK2H,aAAeN,KAAKM,aAC9BN,KAAKrH,KAAKI,eAAiBiH,KAAKjH,eAChCiH,KAAKrH,KAAKyR,qBAAuBpK,KAAKoK,qBACtCpK,KAAKrH,KAAKuP,MAAQlI,KAAKkI,MACvBlI,KAAKrH,KAAKynB,OAASpgB,KAAKogB,OACxBpgB,KAAKrH,KAAKmpB,aAAe9hB,KAAK8hB,aAC9B9hB,KAAKrH,KAAKyH,gBAAkBJ,KAAKI,gBACjCJ,KAAKrH,KAAKkV,cAAgB7N,KAAK6N,cAC/B7N,KAAKrH,KAAK4H,cAAgBP,KAAKO,cAC/BP,KAAKrH,KAAKopB,YAAc/hB,KAAK+hB,YAC7B/hB,KAAKrH,KAAKqpB,eAAiBhiB,KAAKgiB,eAChChiB,KAAKrH,KAAKqmB,oBAAsBhf,KAAKgf,oBACrChf,KAAKrH,KAAKmmB,kBAAoB9e,KAAK8e,kBACnC9e,KAAKrH,KAAKqnB,gBAAkB4B,sBAAoB5hB,KAAKggB,iBACrDhgB,KAAKrH,KAAKspB,UAAYjiB,KAAKiiB,UAC3BjiB,KAAKrH,KAAKupB,UAAYliB,KAAKkiB,UAC3BliB,KAAKrH,KAAKymB,eAAiBpf,KAAKof,eAChCpf,KAAKrH,KAAK8lB,QAAUmD,sBAAoB5hB,KAAKmiB,kBAC7CniB,KAAKrH,KAAKypB,gBAAkBpiB,KAAKoiB,gBACjCpiB,KAAKrH,KAAKK,eAAiB4oB,sBAAoB5hB,KAAKhH,gBACpDgH,KAAKrH,KAAKwK,kBAAoBye,sBAAoB5hB,KAAKmD,mBACvDnD,KAAKrH,KAAK6F,aAAeojB,sBAAoB5hB,KAAKxB,cAClDwB,KAAKrH,KAAKC,eAAiBgpB,sBAAoB5hB,KAAKpH,gBACpDoH,KAAKrH,KAAKwa,WAAayO,sBAAoB5hB,KAAKmT,YAChDnT,KAAKrH,KAAK0pB,iBAAmBT,sBAAoB5hB,KAAKqiB,kBACtDriB,KAAKrH,KAAKyd,UAAYwL,sBAAoB5hB,KAAKoW,WAC/CpW,KAAKrH,KAAK6hB,OAASoH,sBAAoB5hB,KAAKwa,QAC5Cxa,KAAKrH,KAAKqoB,iBAAmBhhB,KAAKghB,iBAClChhB,KAAKrH,KAAK+lB,iBAAmBkD,sBAAoB5hB,KAAKsiB,kBACtDtiB,KAAKrH,KAAK4pB,gBAAkBX,sBAAoB5hB,KAAKuiB,iBACrDviB,KAAKrH,KAAK0D,aAAe2D,KAAKwiB,sBAC9BxiB,KAAKrH,KAAKwV,YAAcyT,sBAAoB5hB,KAAKmO,aACjDnO,KAAKrH,KAAKimB,eAAiBgD,sBAAoB5hB,KAAK4e,gBACpD5e,KAAKrH,KAAKuG,WAAac,KAAKd,WAC5Bc,KAAKrH,KAAK+G,cAAgBM,KAAKN,aAE/BM,MAAKrH,KAAqB,uBAAIqH,KAAqB,sBAEnDA,MAAKrH,KAAkB,eAAI,GAE/B4f,EAAStX,UAAUwhB,cAAgB,SAAUre,GACzCpE,KAAKsE,QAAQ/K,YAAU,OAAQ6K,GAAOA,IAE1CmU,EAAStX,UAAUkgB,eAAiB,WAChC,GAAI5e,GAAQvC,KACR0iB,EAAW1iB,IACfA,MAAKrH,KAAKgqB,WAAa,SAAUve,GAC7B7B,EAAM6Y,oBACN7Y,EAAM+B,QZtqBM,aYsqBqBF,IAErCpE,KAAKrH,KAAKiqB,mBAAqB,SAAUxe,GACrC7B,EAAMwL,OAAO,gBAAiB3J,GAC9BA,EAAO7B,EAAMyM,aAEjBhP,KAAKrH,KAAKkqB,iBAAmB,SAAUze,GACnC7B,EAAMwL,OAAO,cAAe3J,GAC5BA,EAAO7B,EAAMyM,aAEjBhP,KAAKrH,KAAKmqB,eAAiB,SAAU1e,GACjC7B,EAAM+B,QZ7rBU,iBY6rBqBF,IAEzCpE,KAAKrH,KAAKoqB,aAAe,SAAU3e,GAC/B,GAAI4e,EACA7Z,eAAc5G,EAAM2P,kBACpB8Q,GAAqBrkB,KAAMyF,EAAKzF,KAAM+d,UAAWtY,EAAKsY,WACtDna,EAAM+B,QAAQ,eAAgB0e,IAG9BzgB,EAAM+B,QAAQ,eAAgBF,IAGtCpE,KAAKrH,KAAKsqB,kBAAoBjjB,KAAKyiB,cAAc3M,KAAK9V,MACtDA,KAAKrH,KAAKuqB,oBAAsBljB,KAAKyiB,cAAc3M,KAAK9V,MACxDA,KAAKrH,KAAKwqB,yBAA2BnjB,KAAKyiB,cAAc3M,KAAK9V,MAC7DA,KAAKrH,KAAKyqB,uBAAyBpjB,KAAKyiB,cAAc3M,KAAK9V,MAC3DA,KAAKrH,KAAK0qB,kBAAoBrjB,KAAKyiB,cAAc3M,KAAK9V,MACtDA,KAAKrH,KAAK2qB,kBAAoBtjB,KAAKyiB,cAAc3M,KAAK9V,MACtDA,KAAKrH,KAAK4qB,eAAiBvjB,KAAKyiB,cAAc3M,KAAK9V,MACnDA,KAAKrH,KAAK6qB,gBAAkBxjB,KAAKyiB,cAAc3M,KAAK9V,MACpDA,KAAKrH,KAAK8qB,eAAiBzjB,KAAKyiB,cAAc3M,KAAK9V,MACnDA,KAAKrH,KAAK+qB,gBAAkB1jB,KAAKyiB,cAAc3M,KAAK9V,MACpDA,KAAKrH,KAAKgrB,eAAiB3jB,KAAKyiB,cAAc3M,KAAK9V,MACnDA,KAAKrH,KAAKirB,YAAc5jB,KAAKyiB,cAAc3M,KAAK9V,MAChDA,KAAKrH,KAAKkrB,SAAW7jB,KAAKyiB,cAAc3M,KAAK9V,MAC7CA,KAAKrH,KAAKmrB,WAAa9jB,KAAKyiB,cAAc3M,KAAK9V,MAC/CA,KAAKrH,KAAKorB,gBAAkB/jB,KAAKyiB,cAAc3M,KAAK9V,MACpDA,KAAKrH,KAAKqrB,WAAahkB,KAAKyiB,cAAc3M,KAAK9V,MAC/CA,KAAKrH,KAAKsrB,YAAcjkB,KAAKyiB,cAAc3M,KAAK9V,MAChDA,KAAKrH,KAAKurB,WAAalkB,KAAKyiB,cAAc3M,KAAK9V,MAC/CA,KAAKrH,KAAKwrB,YAAc,SAAU/f,GAG9B,IAFA,GAAIlB,GAAOX,EAAMxD,UAEVmE,EAAKkB,EAAa,UAAGZ,UAAUC,SAAS,iBAC3CW,EAAa,UAEjB7B,GAAM+B,QZ7rBO,cY6rBqBF,IAEtCpE,KAAKrH,KAAKgjB,KAAO,WACb+G,EAAS/pB,KAAK6M,GAAG,cAAekd,EAAS9B,gBAAiB8B,IAE9D1iB,KAAKrH,KAAKyrB,cAAgBpkB,KAAKyiB,cAAc3M,KAAK9V,MAClDA,KAAKrH,KAAK0rB,cAAgBrkB,KAAKyiB,cAAc3M,KAAK9V,MAClDA,KAAKskB,8BACLtkB,KAAKukB,6BACLvkB,KAAKwkB,qBACLxkB,KAAKykB,2BACLzkB,KAAK0kB,yBACL1kB,KAAK2kB,0BACL3kB,KAAK4kB,qBACL5kB,KAAK6kB,sBAETtM,EAAStX,UAAUqjB,4BAA8B,WAC7C,GAAI/hB,GAAQvC,KACR0iB,EAAW1iB,IACfA,MAAKrH,KAAKmsB,aAAe,SAAU1gB,GAC3B1L,oBAAkB0L,EAAK/C,UAAa+C,EAAK/C,OAAOmC,UAAUC,SAAS,sBACnEW,EAAK/C,OAAOmC,UAAUC,SAAS,uBAC/Bif,EAAS3U,OZ3vBC,eY2vB2B3J,GACrC7B,EAAM+B,QZ5vBI,eY4vByBF,IAGnCA,EAAKC,QAAS,GAGtBrE,KAAKrH,KAAKosB,YAAc,SAAU3gB,GAC9B7B,EAAMue,0BACN4B,EAAS3U,OZlwBI,cYkwBuB3J,GACpC7B,EAAM+B,QZnwBO,cYmwBqBF,IAEtCpE,KAAKrH,KAAKqsB,cAAgB,SAAU5gB,GAChC7B,EAAMue,0BACNve,EAAM+B,QZjwBS,gBYiwBqBF,IAExCpE,KAAKrH,KAAKssB,eAAiB,SAAU7gB,GAC7B1L,oBAAkB0L,EAAK/C,UAAa+C,EAAK/C,OAAOmC,UAAUC,SAAS,sBACnEW,EAAK/C,OAAOmC,UAAUC,SAAS,uBAC/Bif,EAAS3U,OZxwBG,iBYwwB2B3J,GACvC7B,EAAM+B,QZzwBM,iBYywByBF,IAGrCA,EAAKC,QAAS,IAI1BkU,EAAStX,UAAUsjB,2BAA6B,WAC5C,GAAIhiB,GAAQvC,KACR0iB,EAAW1iB,IACfA,MAAKrH,KAAKusB,UAAY,SAAU9gB,GAM5B,GALA7B,EAAM4iB,kBAAkB/gB,GACxB7B,EAAM6Y,oBACN7Y,EAAM6iB,aAAa7iB,EAAMxD,WACzBwD,EAAMwL,OAAO,eAAgB3J,GAC7B7B,EAAM+B,QZ1yBK,YY0yBqBF,GAC5B3M,EAAa8K,KAAW/H,EAAU+H,KAAWA,EAAMqN,gBAAiB,CACpE,GAAIyV,GAAM9rB,YAAU,sBAAuBgJ,GAAO9E,OAAO,SAAUC,GAC/D,MAAoC,OAA7BA,EAAE2S,YAAYC,aACtB/X,MACHgY,YAAS,gCAAiC8U,EAAM,GAAI9iB,GAExDA,EAAMtI,eAAgB,GAE1B+F,KAAKrH,KAAKiT,gBAAkB,SAAUxH,GAClC,GACIvE,GAActG,YAAU,SAAU6K,EACtC,IAAI3M,EAAairB,KAAcloB,EAAUkoB,IAA6B,SAAhB7iB,EAClD6iB,EAAS3U,OAAO,oBAAqB3J,GACrCA,EAAQse,EAAqB,gBAE5B,IAAiC,IAA7BA,EAASllB,SAASjF,QAAgBiC,EAAUkoB,IAAaA,EAAS/qB,qBAAsBC,eAAa,CAC1G,GAAI6C,GAAKioB,EAAS/qB,UAClB+qB,GAAS9C,WAAWrQ,kBAAkB9U,EAAG9C,WAAWsE,MACpDmI,EAAKgM,OAASsS,EAAS/pB,KAAKhB,WAAqB,WAAEsE,KAAOymB,EAASllB,SAWvE,GATK/F,EAAairB,IAAcvqB,EAAgB6H,OAAUtH,oBAAkBgqB,EAAS/qB,cAC7EqI,KAAK4U,YACLrE,WAAS,cAAc,EAAMnM,GAEjCse,EAAS3U,OAAO,gBAAiB3J,IAGrCxH,SAAOwH,EAAMse,EAAS1T,cAEjBhP,KAAK4U,WAAY,CAClB,GAAI0Q,GAAoB,GAAIC,WAI5B,OAHA7C,GAASpe,QZt0BI,kBYs0B4BF,EAAM,SAAUohB,GACrDF,EAAkBG,QAAQD,KAEvBF,KAInB/M,EAAStX,UAAU4jB,mBAAqB,WACpC,GACIa,GADAnjB,EAAQvC,IAERmJ,eAAcnJ,KAAKkS,mBACdxZ,oBAAkBsH,KAAKrH,KAAK+sB,aAC7BA,EAAY1lB,KAAKrH,KAAK+sB,YAG9B1lB,KAAKrH,KAAKgtB,aAAe,SAAUvhB,GAC/B,GAAIwhB,GAAkB,GAAIL,WAO1B,OANAhjB,GAAM+B,QZr0BQ,eYq0BqBF,EAAM,SAAUyhB,GAC1CA,EAAYxhB,QACb9B,EAAMwL,OZv0BA,eYu0B4B3J,GAEtCwhB,EAAgBH,QAAQI,KAErBD,GAEX5lB,KAAKrH,KAAKmtB,cAAgB,SAAU1hB,GAChC,GAAIwhB,GAAkB,GAAIL,WAI1B,OAHAhjB,GAAM+B,QAAQ/K,YAAU,OAAQ6K,GAAOA,EAAM,SAAU2hB,GACnDH,EAAgBH,QAAQM,KAErBH,GAEX5lB,KAAKrH,KAAK+sB,UAAY,SAAUthB,GACxB+E,cAAc5G,EAAM2P,kBAChBwT,GAAkC,kBAAdA,IACpBA,EAAU1jB,MAAMO,GAAQ6B,GAGhC,IAAIwhB,GAAkB,GAAIL,WAI1B,OAHAhjB,GAAM+B,QZvzBK,YYuzBqBF,EAAM,SAAU4hB,GAC5CJ,EAAgBH,QAAQO,KAErBJ,IAGfrN,EAAStX,UAAUyjB,uBAAyB,WACxC,GAIIuB,GACAC,EALA3jB,EAAQvC,IAcZ,IARImJ,cAAcnJ,KAAKkS,mBACdxZ,oBAAkBsH,KAAKrH,KAAKstB,YAC7BA,EAAWjmB,KAAKrH,KAAKstB,UAEpBvtB,oBAAkBsH,KAAKrH,KAAKutB,YAC7BA,EAAWlmB,KAAKrH,KAAKutB,WAGzBlmB,KAAKzD,YAAc4M,cAAcnJ,KAAKkS,iBAAkB,CACxDlS,KAAKrH,KAAK6M,GAdG,cAcYxF,KAAKzD,WAAuB,WAAGyD,KAAKzD,WAC7D,IAAI4pB,GAAWnmB,KAAKrH,KAAkB,cAAEytB,cAAc,cACtDD,GAAShpB,OAAO,EAAG,EAAGgpB,EAASE,OAEnCrmB,KAAKrH,KAAK4b,gBAAkB,SAAUnQ,GAC9B7B,EAAM+jB,iBACN/jB,EAAM+jB,iBAAkB,EACxB/jB,EAAM5J,KAAKhB,YAAeyY,OAAQ7N,EAAM/E,SAAUmM,MAAOiD,WAAS,QAASrK,EAAM5J,KAAKhB,cAGtF4K,EAAM+B,QZz4BO,kBYy4ByBF,IAG9CpE,KAAKrH,KAAKutB,SAAW,SAAU9hB,GAM3B,GALI+E,cAAc5G,EAAM2P,kBAChBgU,GAAgC,kBAAbA,IACnBA,EAASlkB,MAAMO,GAAQ6B,IAG3B7B,EAAM5J,KAAK4tB,oBAAqB,CAChC,GAAIC,OAAe,EACnBA,GAAejkB,EAAM5J,KAAK8tB,kBAAkBC,YAAYjV,QAAQW,uBAAuB,cAAc,IAChG1Z,oBAAkB8tB,IAAiBA,EAAa9U,KAAOnP,EAAMkP,QAAQC,GAAK,6BAC3EtN,EAAKC,QAAS,GAGtB,GAAIuhB,GAAkB,GAAIL,WAU1B,OATAhjB,GAAM+B,QZl2BI,WYk2BqBF,EAAM,SAAUuiB,GACvCxd,eAAe5G,EAAM2P,mBACrByU,EAAapnB,KAAOqnB,aAAWD,EAAapnB,OAE3ConB,EAAatiB,QACd9B,EAAMwL,OZv2BJ,WYu2B4B4Y,GAElCf,EAAgBH,QAAQkB,KAErBf,GAEX5lB,KAAKrH,KAAKkuB,UAAY,SAAUziB,GAC5B7B,EAAM+B,QZ52BK,YY42BqBF,GAChC7B,EAAMwL,OZ72BK,YY62BoB3J,IAEnCpE,KAAKrH,KAAKstB,SAAW,SAAU7hB,GACvB+E,cAAc5G,EAAM2P,kBAChB+T,GAAgC,kBAAbA,IACnBA,EAASjkB,MAAMO,GAAQ6B,GAG/B,IACI0iB,GAAU,GAAIvB,WAGlB,OAFAnhB,GAAS,QAAI0iB,EACbvkB,EAAMwL,OZt3BI,WYs3BoB3J,GACvB0iB,IAGfvO,EAAStX,UAAU0jB,wBAA0B,WACzC,GACIoC,GADAxkB,EAAQvC,IAERmJ,eAAcnJ,KAAKkS,mBACdxZ,oBAAkBsH,KAAKrH,KAAKouB,mBAC7BA,EAAkB/mB,KAAKrH,KAAKouB,kBAGpC/mB,KAAKrH,KAAKquB,SAAW,SAAU5iB,GAC3B7B,EAAM+B,QZ73BI,WY63BqBF,GAC/B7B,EAAMwL,OZ93BI,WY83BoB3J,IAElCpE,KAAKrH,KAAKouB,gBAAkB,SAAU3iB,GAC9B+E,cAAc5G,EAAM2P,kBAChB6U,GAA8C,kBAApBA,IAC1BA,EAAgB/kB,MAAMO,GAAQ6B,IAGtC7B,EAAM+B,QZh4BW,kBYg4BqBF,GACtC7B,EAAMwL,OZj4BW,kBYi4BoB3J,IAEzCpE,KAAKrH,KAAKsuB,eAAiB,SAAU7iB,GACjC7B,EAAM+B,QZt4BU,iBYs4BqBF,GACrC7B,EAAMwL,OZv4BU,iBYu4BoB3J,IAExCpE,KAAKrH,KAAKuuB,YAAc,SAAU9iB,GAC9B7B,EAAM+B,QZl5BO,cYk5BqBF,GAClC7B,EAAMwL,OZn5BO,cYm5BoB3J,IAErCpE,KAAKrH,KAAKwuB,kBAAoB,SAAU/iB,GACpC7B,EAAM+B,QZh5Ba,oBYg5BqBF,GACxC7B,EAAMwL,OZj5Ba,oBYi5BoB3J,IAE3CpE,KAAKrH,KAAKyuB,YAAc,SAAUhjB,GACE,SAA5B7B,EAAMlG,aAAaC,MACnBiG,EAAM+B,QZz5BG,cYy5ByBF,GAEtC7B,EAAMwL,OZ35BO,cY25BoB3J,KAGzCmU,EAAStX,UAAUkkB,kBAAoB,SAAU/gB,GAC7C,GAAI7B,GAAQvC,IACRmJ,gBAAenJ,KAAKkS,iBACpBmV,WAAW,WACP9kB,EAAM+kB,sBAAsBljB,IAC7B,KAGHpE,KAAKsnB,sBAAsBljB,IAGnCmU,EAAStX,UAAUugB,iBAAmB,WAQlC,GAAIxhB,KAAKrI,YAAcQ,EAAgB6H,MAAO,CAC1C,GAAIrB,GAAOqB,KAAKxC,SACZ+pB,EAAY3a,WAAS,QAAS5M,KAAKrI,WACvCqI,MAAKrH,KAAKhB,YAAeyY,OAAQzR,EAAMgL,MAAO4d,OAG9CvnB,MAAKrH,KAAKhB,WAAeqI,KAAKrI,qBAAsBC,eAChC,GAAIA,eAAYoI,KAAKrI,WAAWA,WAAYqI,KAAKrI,WAAW6vB,aAAcxnB,KAAKrI,WAAWE,SAA1GmI,KAAKxC,QAOb,IALI2L,cAAcnJ,KAAKrI,qBAAsBC,iBACzCoI,KAAKrH,KAAKhB,WAAsB,YAAIqI,KAAKrI,WAAsB,YAC/DqI,KAAKrH,KAAKhB,WAAyB,eAAIqI,KAAKrI,WAAyB,eACrEqI,KAAKrH,KAAKhB,WAAc,IAAIqI,KAAKrI,WAAc,KAE/CqI,KAAKrI,qBAAsBC,iBAAgBoI,KAAKrI,WAAWA,WAAWimB,SAAW5d,KAAKrI,WAAW+C,OAAQ,CACzGsF,KAAKrH,KAAKhB,WAAqB,WAAEsE,KAAOtB,EAAYqF,KAAKrI,WAAqB,WAAEsE,MAChF+D,KAAKrH,KAAKhB,WAAgB,MAAIqI,KAAKrI,WAAW+C,KAC9C,IAAI+sB,GAAOznB,KAAKrH,KAAKhB,UAChBe,qBAAkBsH,KAAKrH,KAAKhB,WAAgB,QAC7CqI,KAAKrH,KAAKhB,WAAgB,MAAEsY,KAAK,SAAUvS,GACvC+pB,EAAe,WAAE7J,SAAU,EAC3B6J,EAAoB,iBAAI,EACxBA,EAAe,WAAExrB,KAAOyB,EAAE0S,OAC1BqX,EAAY,QAAI,GAAIC,mBAKpCnP,EAAStX,UAAUwjB,yBAA2B,WAC1C,GACIkD,GADAplB,EAAQvC,IAERmJ,eAAcnJ,KAAKkS,mBACdxZ,oBAAkBsH,KAAKrH,KAAKgvB,kBAC7BA,EAAiB3nB,KAAKrH,KAAKgvB,iBAGnC3nB,KAAKrH,KAAKivB,YAAc,SAAUxjB,GACL,YAArBA,EAAKvE,aAA6BuE,EAAK/C,QAAU+C,EAAK/C,OAAOib,eAC7DlY,EAAK/C,OAAOib,cAAc9Y,UAAUC,SAAS,yBAC7CW,EAAKC,QAAS,GAGE,YADF9K,YAAU,cAAe6K,IAEvC7B,EAAMwL,OAAO,qBAEjBxL,EAAMwL,OAAO,eAAiB1S,WAAY+I,IACrC3M,EAAa8K,IAAW7J,oBAAkB6J,EAAMiH,eAAkBrR,EAAgBoK,IAClC,IAA7CA,EAAM5J,KAAKK,eAAeV,QAAQC,QAAyD,IAAzCgK,EAAM5J,KAAKC,eAAeC,IAAIN,SACpFgK,EAAMwL,OAAO,gBAAkBvQ,SAAU+E,EAAM5J,KAAKhB,aACpD4K,EAAM5J,KAAKhB,WAAa4K,EAAMyM,YAAYoB,OAE9C,IAAIwV,GAAkB,GAAIL,WAC1B,IAAIpc,cAAmC,WAArB/E,EAAKvE,cAA6B0C,EAAM2P,iBAAkB,CAExE9N,EAAS,KAAIA,EAAS,KAAE,GAe5B,MAbA7B,GAAM+B,QZ3iCO,cY2iCqBF,EAAM,SAAUyQ,GAC9C,GAAI1L,cAAyC,WAA3B0L,EAAWhV,cAA6B0C,EAAM2P,iBAAkB,CAE9E2C,EAAe,MAAKA,EAAe,MAElCA,EAAWxQ,QACZ9B,EAAMwL,OZ7/BH,YY6/B4B8G,GAE/B1L,cAAyC,cAA3B0L,EAAWhV,cAAgC0C,EAAM2P,mBAC/D2C,EAAWhW,IAAM+nB,aAAW/R,EAAWhW,MAE3C+mB,EAAgBH,QAAQ5Q,KAErB+Q,GAEX5lB,KAAKrH,KAAKgvB,eAAiB,SAAUvjB,GACjC,GAAI+E,cAAc5G,EAAM2P,kBAAyC,oBAArB9N,EAAKvE,YAAmC,CAEhF,IAAK,GADDqD,GAAOX,EAAMxD,UACR1G,EAAI,EAAGA,EAAI6K,EAAK3K,OAAQF,IAAK,EAC9B6K,EAAK7K,GAAGmL,UAAUC,SAAS,uBAAyBP,EAAK7K,GAAGmL,UAAUC,SAAS,wBAC9ElB,EAAMiK,mBAA0C,WAArBpI,EAAKvE,YAA4B6I,eAAaxF,EAAK7K,IAAK,qBAChFqQ,eAAaxF,EAAK7K,IAAK,sBAC1BkK,EAAMiK,mBAA0C,WAArBpI,EAAKvE,YAA4BgM,YAAU3I,EAAK7K,IAAK,sBAC7EwT,YAAU3I,EAAK7K,IAAK,qBAE5B,IAAImH,GAAQ0D,EAAK7K,GAAGsL,iBAAiB,cACjCkkB,EAAaroB,EAAM+C,EAAM9C,iBAAiB2S,uBAAuB,sBAAsB,IACvF5S,EAAM+C,EAAM9C,iBAAiB2S,uBAAuB,oBAAoB,EACxEyV,KACCtlB,EAAMiK,mBAA0C,WAArBpI,EAAKvE,YAA4B6I,eAAamf,GAAa,oBACnFnf,eAAamf,GAAa,sBAC7BtlB,EAAMiK,mBAA0C,WAArBpI,EAAKvE,YAA4BgM,YAAUgc,GAAa,sBAChFhc,YAAUgc,GAAa,qBAG/BF,GAA4C,kBAAnBA,IACzBA,EAAe3lB,MAAMO,GAAQ6B,IAiBrC,GAdA7B,EAAMwL,OAAO,iBAAkB3J,GAC/B7B,EAAM6Y,oBACN7Y,EAAMulB,sBACmB,YAArB1jB,EAAKvE,aACL0C,EAAMwL,OAAO,qBAEjBxL,EAAMwL,OAAO,kBAAoB1S,WAAY+I,IACpB,QAArBA,EAAKvE,aAAgE,QAAtC0C,EAAMlG,aAAaQ,gBAAkE,WAAtC0F,EAAMlG,aAAaQ,gBACjG0F,EAAMwL,OZpiCA,WYoiCwB3J,GAET,cAArBA,EAAKvE,aACL0C,EAAMwL,OZjhCC,YYihCwB3J,GAEnC7B,EAAMwL,OAAO,oBAAqB3J,GAC9B+E,cAAmC,WAArB/E,EAAKvE,cAA6B0C,EAAM2P,iBAAkB,CAExE9N,EAAS,KAAIA,EAAS,KAAE,GAE5B7B,EAAM+B,QZhmCU,iBYgmCqBF,KAG7CmU,EAAStX,UAAUujB,mBAAqB,WACpC,GAAIjiB,GAAQvC,KACR0iB,EAAW1iB,IACfA,MAAKrH,KAAK2qB,kBAAoB,SAAUlf,GACpC7B,EAAM+B,QZnjCa,oBYmjCqBF,GACxC7B,EAAMwL,OZpjCa,oBYojCoB3J,IAE3CpE,KAAKrH,KAAKovB,gBAAkB,SAAU3jB,GAClC7B,EAAMwL,OAAO,kBAAmB3J,GAChC7B,EAAM+B,QZ9gCW,kBY8gCqBF,IAE1CpE,KAAKrH,KAAKgT,aAAe,SAAUvH,GAC3B1L,oBAAkBsH,KAAK4U,YACvBrE,WAAS,cAAc,EAAOnM,GAG9BmM,WAAS,aAAcvQ,KAAK4U,WAAYxQ,GAE5Cse,EAASrjB,aAAa+M,YAAYhI,IAEtCpE,KAAKrH,KAAK+S,cAAgB,SAAUtH,GAC5B1L,oBAAkBsH,KAAK4U,YACvBrE,WAAS,cAAc,EAAOnM,GAG9BmM,WAAS,aAAcvQ,KAAK4U,WAAYxQ,GAE5Cse,EAASrjB,aAAaC,WAAW8E,IAErCpE,KAAKrH,KAAKqvB,iBAAmB,SAAU5jB,GACnC7B,EAAMwL,OZ3lCY,mBY2lCoB3J,GACtC7B,EAAM+B,QZ5lCY,mBY4lCqBF,IAE3CpE,KAAKrH,KAAKsvB,gBAAkB,SAAU7jB,GAClC7B,EAAMwL,OZjmCW,kBYimCoB3J,GACrC7B,EAAM+B,QZlmCW,kBYkmCqBF,IAE1CpE,KAAKrH,KAAK+S,cAAgB,SAAUtH,GAChC7B,EAAMlD,aAAaC,WAAW8E,KAGtCmU,EAAStX,UAAU2jB,mBAAqB,WACpC,GAAIriB,GAAQvC,KACR0iB,EAAW1iB,IACfA,MAAKrH,KAAKuvB,mBAAqB,SAAU9jB,GACrCse,EAASpe,QZ9iCW,qBY8iCwBF,IAEhDpE,KAAKrH,KAAKwvB,aAAe,SAAU/jB,GAC/Bse,EAASpe,QZ7iCK,eY6iCwBF,IAE1CpE,KAAKrH,KAAKyvB,QAAU,SAAUhkB,GAC1B,GAAI7B,EAAM5J,KAAK0vB,OAEX,YADAjkB,EAAKC,QAAS,EAGlBqe,GAAS3U,OZ9iCG,cY8iCuB3J,GACnCse,EAASpe,QZ3jCA,UY2jCwBF,IAErCpE,KAAKrH,KAAK2vB,QAAU,SAAUlkB,GAC1B,GAAI7B,EAAM5J,KAAK0vB,OAEX,YADAjkB,EAAKC,QAAS,EAGlBqe,GAAS3U,OZpjCG,cYojCuB3J,GACnCA,EAAKC,QAAS,IAOtBkU,EAAStX,UAAU8e,SAAW,WAC1B/f,KAAKuhB,qBACLvhB,KAAKmhB,iBACL5Q,WAAS,qBAAsBvQ,KAAKuoB,mBAAoBvoB,KAAKrH,KAE7D4X,YAAS,mBAAoBvQ,KAAQ,iBAAGA,KAAKrH,OAMjD4f,EAAStX,UAAU4e,oBAAsB,WACrC,IAAK7f,KAAK1H,QAAQC,SAAYyH,KAAK4f,WAAWtQ,YAAcjW,OAAOC,KAAK0G,KAAKrI,YAAYY,OAAS,CAC9FyH,KAAK1H,UACL,IAAIoB,OAAS,EAIbA,GAASsG,KAAKrI,WAAW,EAGzB,KAAK,GADD2B,GAAOD,OAAOC,KAAKI,GACdrB,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,KACuC,KAA/D2H,KAAK5C,aAAc4C,KAAK/C,iBAAiByB,QAAQpF,EAAKjB,KACvD2H,KAAK1H,QAAQkB,KAAKF,EAAKjB,MAKvCkgB,EAAStX,UAAUuhB,oBAAsB,WACrC,GAAItiB,KAYJ,QAVAA,EAAK+e,YAAcjf,KAAK3D,aAAa4iB,YACrC/e,EAAKD,aAAeD,KAAK3D,aAAa4D,aACtCC,EAAKgf,cAAgBlf,KAAK3D,aAAa6iB,cACvChf,EAAKrD,eAAsD,WAArCmD,KAAK3D,aAAaQ,eAA8B,SAAW,MACjFqD,EAAKsoB,oBAAsBxoB,KAAK3D,aAAamsB,oBAC7CtoB,EAAKuoB,kBAAoBzoB,KAAK3D,aAAaosB,kBAC3CvoB,EAAKqO,SAAWvO,KAAK3D,aAAakS,SAClCrO,EAAKwoB,wBAA0B1oB,KAAK3D,aAAaqsB,wBACjDxoB,EAAS,KAAIF,KAAK3D,aAAiB,KACnC6D,EAAKyoB,OAAS3oB,KAAK3D,aAAassB,OACxB3oB,KAAK3D,aAAaC,MACtB,IAAK,SAGL,IAAK,QACD4D,EAAK5D,KAAO0D,KAAK3D,aAAaC,IAC9B,MACJ,KAAK,MACD4D,EAAK5D,KAAO,QACZ,MACJ,KAAK,OACD4D,EAAK5D,KAAO,SACZ4D,EAAKuoB,mBAAoB,EAGjC,MAAOvoB,IAMXqY,EAAStX,UAAUqhB,eAAiB,WAChC,GAAItiB,KAAK0e,iBAAkB,CAEvB,IAAK,GADDxN,MACK7Y,EAAI,EAAGA,EAAI2H,KAAK0e,iBAAiBnmB,OAAQF,IAC9C,OACQ2H,KAAK0e,iBAAiBrmB,IAC1B,IAAK,SACL,IAAKke,oBAAiB0D,OAClB/I,EAAM1X,MAAOovB,KAAM5oB,KAAKsa,KAAKuO,YAAY,UACrCxnB,OAAQ,aAAcqQ,GAAI1R,KAAKyR,QAAQC,GAAK,4BAC5CR,QAAU0X,KAAM5oB,KAAKsa,KAAKuO,YAAY,SAAUnX,GAAI,UAAakX,KAAM5oB,KAAKsa,KAAKuO,YAAY,SAAUnX,GAAI,WAC/G,MACJ,SACIR,EAAM1X,KAAKwG,KAAK0e,iBAAiBrmB,IAG7C,MAAO6Y,GAGP,MAAO,OAOfqH,EAAStX,UAAUkhB,eAAiB,WAChC,GAAIniB,KAAKye,QAAS,CAEd,IAAK,GADDvN,MACK7Y,EAAI,EAAGA,EAAI2H,KAAKye,QAAQlmB,OAAQF,IACrC,OACQ2H,KAAKye,QAAQpmB,IACjB,IAAK,SACL,IAAKie,eAAYwS,OACb5X,EAAM1X,KAAK,SACX,MACJ,KAAK,QACL,IAAK8c,eAAYnL,MACb+F,EAAM1X,KAAK,QACX,MACJ,KAAK,YACL,IAAK8c,eAAY4D,UACb,GAAI6O,GAAc/oB,KAAKsa,KAAKuO,YAAY,YACxC3X,GAAM1X,MAAOovB,KAAMG,EAAaA,YAAaA,EACzCC,WAAY,WAAYtX,GAAI1R,KAAKyR,QAAQC,GAAK,0BAClD,MACJ,KAAK,cACL,IAAK4E,eAAY6D,YACb,GAAI8O,GAAUjpB,KAAKsa,KAAKuO,YAAY,cACpC3X,GAAM1X,MAAOovB,KAAMK,EACfF,YAAaE,EAASD,WAAY,aAActX,GAAI1R,KAAKyR,QAAQC,GAAK,4BAE1E,MACJ,KAAK,SACL,IAAK4E,eAAY8D,UACb,GAAI8O,GAAgBlpB,KAAKsa,KAAKuO,YAAY,YAC1C3X,GAAM1X,MACFovB,KAAMM,EAAeH,YAAaG,EAClCF,WAAY,WAAYtX,GAAI1R,KAAKyR,QAAQC,GAAK,uBAElD,MACJ,KAAK,UACL,IAAK4E,eAAY+D,WACb,GAAI8O,GAAiBnpB,KAAKsa,KAAKuO,YAAY,aAC3C3X,GAAM1X,MACFovB,KAAMO,EAAgBJ,YAAaI,EACnCH,WAAY,YAAatX,GAAI1R,KAAKyR,QAAQC,GAAK,wBAEnD,MACJ,SACIR,EAAM1X,KAAKwG,KAAKye,QAAQpmB,IAGpC,MAAO6Y,GAGP,MAAO,OAOfqH,EAAStX,UAAUygB,eAAiB,SAAUppB,GAC1C,GAAIqH,GAASrH,CACb0H,MAAKkd,cAIL,KAAK,GAHDkM,GACAC,EACAC,KACKjxB,EAAI,EAAGA,EAAIsH,EAAOpH,OAAQF,IAAK,CACpC,GAAIkxB,GAAavpB,KAAKrH,KAAK6wB,eAAe7pB,EAAOtH,GAAG+O,IAGpD,IAFAiiB,EAAaE,MACbH,KAC+B,gBAApBppB,MAAK1H,QAAQD,GACpBgxB,EAAWnc,MAAQkc,EAAelc,MAAQlN,KAAK1H,QAAQD,OAGvD,KAAK,GAAIoxB,GAAK,EAAGC,EAAKrwB,OAAOC,KAAKqG,EAAOtH,IAAKoxB,EAAKC,EAAGnxB,OAAQkxB,IAAM,CAChE,GAAIxR,GAAOyR,EAAGD,EACdJ,GAAWpR,GAAQmR,EAAenR,GAAQtY,EAAOtH,GAAG4f,GAGxDtY,EAAOtH,GAAGC,QACV0H,KAAK0hB,eAAeppB,EAAQD,GAAGC,SAG/B0H,KAAKkd,YAAY1jB,KAAK,GAAIsG,GAAOspB,IAErCE,EAAqB9vB,KAAK6vB,GAE9B,MAAOC,IAQX/Q,EAAStX,UAAU0oB,kBAAoB,SAAUC,EAASC,GAItD,IAAK,GAFDC,IAAiB,EAEZL,EAAK,EAAGM,EAHA1wB,OAAOC,KAAKswB,GAGeH,EAAKM,EAAaxxB,OAAQkxB,IAAM,CACxE,GAAIxR,GAAO8R,EAAaN,EACxB,QAAQxR,GACJ,IAAK,UACK9O,cAAcnJ,KAAKkS,kBAAoBlS,KAAkB,gBAC3DA,KAAKrH,KAAKL,QAAU0H,KAAK0hB,eAAe1hB,KAAK1H,SAEjD,MACJ,KAAK,kBACD0H,KAAKrH,KAAKqxB,gBACV,MACJ,KAAK,cACDhqB,KAAKrH,KAAK0T,YAAcrM,KAAKqM,WAC7B,MACJ,KAAK,eACDrM,KAAKrH,KAAK2T,aAAesV,sBAAoB5hB,KAAKsM,cAClDwd,GAAiB,CACjB,MACJ,KAAK,uBACD9pB,KAAKrH,KAAKyR,qBAAuBpK,KAAKoK,oBACtC,MACJ,KAAK,UACDpK,KAAKrH,KAAK8lB,QAAUze,KAAKmiB,gBACzB,MACJ,KAAK,iBACDniB,KAAKrH,KAAKymB,eAAiBpf,KAAKof,cAChC,MACJ,KAAK,oBACDpf,KAAKrH,KAAKwK,kBAAoBye,sBAAoB5hB,KAAKmD,kBACvD,MACJ,KAAK,eACDnD,KAAKrH,KAAK2H,aAAeN,KAAKM,YAC9B,MACJ,KAAK,oBACDN,KAAKrH,KAAKsxB,kBAAoBjqB,KAAKiqB,iBACnC,MACJ,KAAK,eACDjqB,KAAKrH,KAAK6F,aAAeojB,sBAAoB5hB,KAAKxB,aAClD,MACJ,KAAK,iBACDwB,KAAKrH,KAAKC,eAAiBgpB,sBAAoB5hB,KAAKpH,eACpD,MACJ,KAAK,iBACDoH,KAAKrH,KAAKI,eAAiBiH,KAAKjH,cAChC,MACJ,KAAK,iBACDiH,KAAKrH,KAAKK,eAAiB4oB,sBAAoB5hB,KAAKhH,eACpD,MACJ,KAAK,iBACDgH,KAAKrH,KAAK0H,eAAiBL,KAAKK,cAChC,MACJ,KAAK,sBACDL,KAAKrH,KAAKqmB,oBAAsBhf,KAAKgf,mBACrC,MACJ,KAAK,aACDhf,KAAKrH,KAAKwa,WAAayO,sBAAoB5hB,KAAKmT,WAChD,MACJ,KAAK,aAID,GAHAnT,KAAKkV,cAAiBlV,KAAKrI,qBAAsBC,kBAAkBc,oBAAkBsH,KAAKrI,WAAW+C,QAC9FsF,KAAKrI,WAAWE,kBAAmBgmB,qBAC1C7d,KAAK8f,gBAAgB9f,KAAKrI,YACtBqI,KAAKkV,YACL,GAAI/c,EAAgB6H,MAAO,CACvB,GAAI2J,GAAQiD,WAAS,QAAS5M,KAAKrI,WACnCqI,MAAKrH,KAAKhB,YAAeyY,OAAQpQ,KAAKxC,SAAUmM,MAAOA,OAGvD3J,MAAKrH,KAAKhB,WAAaqI,KAAKxC,aAIhCwC,MAAKwhB,mBACDxhB,KAAKoK,uBACLpK,KAAKrH,KAAKkb,cAAchO,sBACxB7F,KAAKrH,KAAKkb,cAAcqW,cAAc,MACtClqB,KAAKrH,KAAKkb,cAAcsW,cAGhC,MACJ,KAAK,QACDnqB,KAAKrH,KAAK6W,MAAQxP,KAAKwP,KACvB,MACJ,KAAK,oBACGoa,EAAQ3R,GACRjY,KAAKgc,cAGLhc,KAAK+b,WAET,MACJ,KAAK,qBACD/b,KAAKoqB,SACL,MACJ,KAAK,YACDpqB,KAAKrH,KAAKupB,UAAYliB,KAAKkiB,SAC3B,MACJ,KAAK,cACDliB,KAAKrH,KAAKwV,YAAcyT,sBAAoB5hB,KAAKmO,YACjD,MACJ,KAAK,aACDnO,KAAKrH,KAAKuG,WAAac,KAAKd,UAC5B,MACJ,KAAK,oBACDc,KAAKrH,KAAKmmB,kBAAoB9e,KAAK8e,iBACnC,MACJ,KAAK,gBACD9e,KAAKrH,KAAK+G,cAAgBM,KAAKN,aAC/B,MACJ,KAAK,YACDM,KAAKrH,KAAKspB,UAAYjiB,KAAKiiB,SAC3B,MACJ,KAAK,SACIvpB,oBAAkBsH,KAAKogB,SAAoC,gBAAjBpgB,eAA2D,IAA9BA,KAAKogB,OAAO1hB,QAAQ,OAC5FsB,KAAKyR,QAAQxJ,MAAMmY,OAASpgB,KAAKogB,QAErCpgB,KAAKrH,KAAKynB,OAASpgB,KAAKogB,MACxB,MACJ,KAAK,QACI1nB,oBAAkBsH,KAAKkI,QAAkC,gBAAhBlI,cAAyD,IAA7BA,KAAKkI,MAAMxJ,QAAQ,OACzFsB,KAAKyR,QAAQxJ,MAAMC,MAAQlI,KAAKkI,OAEpClI,KAAKrH,KAAKuP,MAAQlI,KAAKkI,KACvB,MACJ,KAAK,SACDlI,KAAKrH,KAAK6hB,OAASxa,KAAKwa,MACxB,MACJ,KAAK,mBACDxa,KAAKrH,KAAKqoB,iBAAmBhhB,KAAKghB,gBAClC,MACJ,KAAK,eACDhhB,KAAKrH,KAAKmpB,aAAe9hB,KAAK8hB,YAC9B,MACJ,KAAK,cACD9hB,KAAKrH,KAAKopB,YAAc/hB,KAAK+hB,WAC7B,MACJ,KAAK,iBACD/hB,KAAKrH,KAAKqpB,eAAiBhiB,KAAKgiB,cAChC,MACJ,KAAK,mBACDhiB,KAAKrH,KAAKgmB,iBAAmB3e,KAAK2e,gBAClC,MACJ,KAAK,iBACD3e,KAAKrH,KAAKkmB,eAAiB7e,KAAK6e,cAChC,MACJ,KAAK,YACD7e,KAAKrH,KAAK8oB,UAAYzhB,KAAKyhB,SAC3B,MACJ,KAAK,kBACDzhB,KAAKrH,KAAKyH,gBAAkBJ,KAAKI,eACjC,MACJ,KAAK,gBACDJ,KAAKrH,KAAK4H,cAAgBP,KAAKO,aAC/B,MACJ,KAAK,mBACDP,KAAKrH,KAAK0pB,iBAAmBT,sBAAoB5hB,KAAKqiB,iBACtD,MACJ,KAAK,gBACDriB,KAAKrH,KAAKkV,cAAgB+T,sBAAoB5hB,KAAK6N,eACnD7N,KAAKoqB,SACL,MACJ,KAAK,mBACDpqB,KAAKrH,KAAK+lB,iBAAmB1e,KAAKsiB,gBAClC,MACJ,KAAK,iBACDtiB,KAAKrH,KAAKimB,eAAiBgD,sBAAoB5hB,KAAK4e,eACpD,MACJ,KAAK,kBACD5e,KAAKrH,KAAK4pB,gBAAkBX,sBAAoB5hB,KAAKuiB,gBACrD,MACJ,KAAK,eACGviB,KAAKrH,KAAK0vB,QAA0C,WAAhCroB,KAAKrH,KAAK0D,aAAaC,MAAqBstB,EAAQ3R,GAAM3b,OACtD,SAAvBstB,EAAQ3R,GAAM3b,MAA0C,QAAvBstB,EAAQ3R,GAAM3b,OAChD0D,KAAKrH,KAAK0xB,YAEdrqB,KAAKrH,KAAK0D,aAAe2D,KAAKwiB,sBAGlCsH,GACA9pB,KAAKoqB,YASjB7R,EAAStX,UAAUiE,QAAU,WACzBlF,KAAKsqB,iBACLtqB,KAAKwf,eACLzd,EAAOd,UAAUiE,QAAQ1C,KAAKxC,MAC1BA,KAAKrH,MACLqH,KAAKrH,KAAKuM,UAEVlF,KAAK4f,YACL5f,KAAK4f,WAAW1a,SAMpB,KAAK,GAJDqZ,IAAW,aAAc,aAAc,eAAgB,eAAgB,cAAe,kBACtF,oBAAqB,kBAAmB,gBAAiB,gBAAiB,gBAAiB,eAC3F,cAAe,iBAAkB,mBAAoB,oBAAqB,aAAc,sBACxF,kBAAmB,YAAa,uBAAwB,gBACnDlmB,EAAI,EAAGA,EAAIkmB,EAAQhmB,OAAQF,IAC5B2H,KAAKue,EAAQlmB,MACb2H,KAAKue,EAAQlmB,IAAM,KAG3B2H,MAAKyR,QAAQ3I,UAAY,GACzB9I,KAAKrH,KAAO,MAQhB4f,EAAStX,UAAUspB,SAAW,WAC1BxoB,EAAOd,UAAUspB,SAAS/nB,KAAKxC,MACzBmJ,cAAcnJ,KAAKkS,oBAAqBtF,WAAS,aAAc5M,KAAKrH,OAAUqH,KAAK/F,gBACrF+F,KAAKrH,KAAK4xB,YAQlBhS,EAAStX,UAAUupB,eAAiB,WAWhC,IAAK,GAVDC,IAAa,eAAgB,eAC7B,iBAAkB,UAAW,iBAAkB,oBAC/CC,GACApe,cAAe,WAAY,YAAa,eAAgB,oBAAqB,oBAAqB,aAClGtT,gBAAiB,OAAQ,OAAQ,sBAAuB,qBAAsB,eAAgB,iBAC9FJ,gBAAiB,SAAU,WAAY,cACvC4F,gBAAkBlG,WAAa0oB,qBAE/B2J,GAAkB,SAAU,OAAQ,oBAAqB,iBAAkB,WAC3E,kBAAmB,WAAY,cAC1BtyB,EAAI,EAAGA,EAAIoyB,EAAUlyB,OAAQF,IAElC,IAAK,GADDuyB,GAAgB5qB,KAAKyqB,EAAUpyB,IAC1BoxB,EAAK,EAAGC,EAAKgB,EAAgBD,EAAUpyB,IAAKoxB,EAAKC,EAAGnxB,OAAQkxB,UAE1DmB,GADGlB,EAAGD,GAKrB,OADAzpB,MAAK6qB,eAAeF,EAAgB3qB,KAAK1H,SAClC0H,KAAK8qB,aAAaL,IAE7BlS,EAAStX,UAAU4pB,eAAiB,SAAUF,EAAgBryB,GAC1D,IAAK,GAAID,GAAI,EAAGA,EAAIC,EAAQC,OAAQF,IAC5BC,EAAQD,GAAGC,SACX0H,KAAK+qB,eAAeJ,EAAgBryB,EAAQD,IAC5C2H,KAAK6qB,eAAeF,EAAgBryB,EAAQD,GAAGC,UAG/C0H,KAAK+qB,eAAeJ,EAAgBryB,EAAQD,KAIxDkgB,EAAStX,UAAU8pB,eAAiB,SAAUJ,EAAgBhrB,GAC1D,IAAK,GAAItH,GAAI,EAAGA,EAAIsyB,EAAepyB,OAAQF,UAChCsH,GAAOgrB,EAAetyB,IAC7BsH,EAAOlC,WAGf8a,EAAStX,UAAU+c,kBAAoB,SAAUtgB,GAC7C,GAAKhF,oBAAkBgF,EAAEstB,SAAzB,CAGA,GAAI3pB,GAAS3D,EAAE2D,QACVA,EAAOmC,UAAUC,SAAS,sBAC3BpC,EAAOmC,UAAUC,SAAS,uBAA4BzD,KAAKirB,gBAAmBjrB,KAAKrH,KAAK0vB,QACxFroB,KAAKmc,sBAAsB9a,GAE/BrB,KAAKirB,gBAAiB,EACtBjrB,KAAK+N,OAAO,qBAAuB1M,OAAQA,MAM/CkX,EAAStX,UAAUlC,QAAU,WACzB,MAAOiB,MAAKrH,KAAKoG,WAMrBwZ,EAAStX,UAAUiqB,SAAW,WAC1B,MAAOlrB,MAAKrH,KAAKuyB,YASrB3S,EAAStX,UAAUkqB,UAAY,SAAUxsB,EAAMzD,EAAOkwB,GAC9CprB,KAAKzD,YACLyD,KAAKzD,WAAW4uB,UAAUxsB,EAAMzD,EAAOkwB,IAM/C7S,EAAStX,UAAUopB,UAAY,WACvBrqB,KAAKrH,KAAK4D,YACVyD,KAAKrH,KAAK4D,WAAW8tB,aAM7B9R,EAAStX,UAAUoqB,SAAW,WACtBrrB,KAAKrH,KAAK4D,YACVyD,KAAKrH,KAAK4D,WAAW8uB,YAS7B9S,EAAStX,UAAUqqB,WAAa,SAAUvmB,EAAUmI,EAAOjS,GACnD+E,KAAKrH,KAAK4D,YACVyD,KAAKrH,KAAK4D,WAAW+uB,WAAWvmB,EAAUmI,EAAOjS,IAQzDsd,EAAStX,UAAUsqB,UAAY,SAAUrwB,EAAOyD,GAC5C,GAAIqB,KAAKrH,KAAK4D,WAAY,CACtB,GAAI+kB,GAAWthB,KAAKrH,KAAKmF,wBAAwB5C,EACjD0B,UAAO0kB,EAAU3iB,GACjBqB,KAAKrH,KAAK4D,WAAWgvB,UAAUrwB,EAAOomB,KAS9C/I,EAAStX,UAAUuqB,aAAe,SAAUC,EAAW9sB,GAC/CqB,KAAKrH,KAAK4D,YACVyD,KAAKrH,KAAK4D,WAAWivB,aAAaC,EAAW9sB,IAOrD4Z,EAAStX,UAAUyqB,UAAY,SAAU7sB,GACjCmB,KAAKrH,KAAK4D,YACVyD,KAAKrH,KAAK4D,WAAWmvB,UAAU7sB,IAQvC0Z,EAAStX,UAAU0qB,SAAW,SAAU5mB,EAAUmI,GAC1ClN,KAAKzD,YACLyD,KAAKzD,WAAWovB,SAAS5mB,EAAUmI,IAQ3CqL,EAAStX,UAAU2qB,mBAAqB,SAAU1a,EAAO2a,GACjD7rB,KAAKrH,KAAKmzB,eACV9rB,KAAKrH,KAAKmzB,cAAcC,YAAY7a,EAAO2a,IAMnDtT,EAAStX,UAAU+qB,QAAU,WACrBhsB,KAAKrH,KAAK4D,YACVyD,KAAKrH,KAAK4D,WAAWyvB,WAO7BzT,EAAStX,UAAUgrB,UAAY,SAAUxhB,GACjCzK,KAAKrH,KAAK4D,YACVyD,KAAKrH,KAAK4D,WAAW0vB,UAAUxhB,IAOvC8N,EAAStX,UAAUlF,wBAA0B,WACzC,MAAOiE,MAAKrH,KAAKoD,2BASrBwc,EAAStX,UAAUirB,aAAe,SAAUrzB,EAAKqU,EAAOjS,GACpD+E,KAAKrH,KAAKuzB,aAAarzB,EAAKqU,EAAOjS,IAQvCsd,EAAStX,UAAUrC,WAAa,SAAU/F,EAAKiO,GAC3C,GAAIxI,GAAiB0B,KAAKlC,wBACtBquB,EAAansB,KAAKrH,KAAKoD,0BAA0B,GACjDZ,EAAQ,EACRzB,IACJ4E,GAAe+gB,KAAK,SAAUpkB,EAAO5C,EAAGqF,GACpC,MAAIzC,GAAMkxB,KAAgBtzB,IACtBa,EAASuB,GACF,KAMfE,EAAQzB,EAAOyB,KACf,IAAIwD,GAAOmI,CACXnI,GAAKxD,MAAQA,EACbwD,EAAKzD,MAAQxB,EAAOwB,MACpByD,EAAKrE,aAAeZ,EAAOY,aAC3BqE,EAAK5B,SAAWrD,EAAOqD,SACvB4B,EAAK3E,SAAWN,EAAOM,SACvB2E,EAAK7E,WAAaJ,EAAOI,WACzB6E,EAAK6J,cAAgB9O,EAAO8O,cAC5B7J,EAAKtE,gBAAkBX,EAAOW,gBAC9BsE,EAAKF,eAAiB/E,EAAO+E,eAC7BE,EAAKxE,SAAWT,EAAOS,SACvB6F,KAAKrH,KAAKiG,WAAW/F,EAAK8F,IAO9B4Z,EAAStX,UAAUmrB,SAAW,SAAUC,GAChCrsB,KAAKrH,KAAK2zB,aACVtsB,KAAKrH,KAAK2zB,YAAYF,SAASC,IAQvC9T,EAAStX,UAAUsrB,sBAAwB,SAAUC,GAC7CxsB,KAAKssB,aACLtsB,KAAKrH,KAAK2zB,YAAYC,sBAAsBC,IASpDjU,EAAStX,UAAUwrB,iBAAmB,SAAU1nB,EAAUmC,GACtD,MAAOlH,MAAKrH,KAAK8zB,iBAAiB1nB,EAAUmC,IAOhDqR,EAAStX,UAAUgM,iBAAmB,SAAUC,GAC5C,MAAI/D,eAAcnJ,KAAKkS,iBACZwa,uBAAqB1sB,KAAKrH,KAAKL,QAAS,SAAUq0B,EAAMzxB,GAC3D,GAAIyxB,EAAKzf,QAAUA,EACf,MAAOyf,KAGZ,GAGID,uBAAqB1sB,KAAKkd,YAAa,SAAUyP,EAAMzxB,GAC1D,GAAIyxB,EAAKzf,QAAUA,EACf,MAAOyf,KAGZ,IAQXpU,EAAStX,UAAUuoB,eAAiB,SAAUpiB,GAC1C,MAAI+B,eAAcnJ,KAAKkS,iBACZwa,uBAAqB1sB,KAAKrH,KAAKL,QAAS,SAAUq0B,EAAMzxB,GAC3D,GAAIyxB,EAAKvlB,MAAQA,EACb,MAAOulB,KAGZ,GAGID,uBAAqB1sB,KAAKkd,YAAa,SAAUyP,EAAMzxB,GAC1D,GAAIyxB,EAAKvlB,MAAQA,EACb,MAAOulB,KAGZ,IAOXpU,EAAStX,UAAU2rB,oBAAsB,WACrC,MAAO5sB,MAAKrH,KAAKi0B,uBAMrBrU,EAAStX,UAAU4rB,iBAAmB,WAClC,MAAO7sB,MAAKrH,KAAKk0B,oBAMrBtU,EAAStX,UAAU6rB,sBAAwB,WACvC,MAAO9sB,MAAKrH,KAAKm0B,yBAQrBvU,EAAStX,UAAU8rB,YAAc,SAAUzzB,EAAM0zB,GAC7ChtB,KAAKrH,KAAKo0B,YAAYzzB,EAAM0zB,GAC5BhtB,KAAKob,qBAQT7C,EAAStX,UAAUgsB,YAAc,SAAU3zB,EAAM4zB,GAC7CltB,KAAKrH,KAAKs0B,YAAY3zB,EAAM4zB,GAC5BltB,KAAKob,qBAOT7C,EAAStX,UAAUksB,uBAAyB,SAAUjgB,GAClD,MAAOlN,MAAKrH,KAAKw0B,uBAAuBjgB,IAO5CqL,EAAStX,UAAUmsB,uBAAyB,SAAUlyB,GAClD,MAAO8E,MAAKrH,KAAKy0B,uBAAuBlyB,IAO5Cqd,EAAStX,UAAUosB,qBAAuB,SAAUjmB,GAChD,MAAOpH,MAAKrH,KAAK00B,qBAAqBjmB,IAO1CmR,EAAStX,UAAUqsB,sBAAwB,SAAUpgB,GACjD,MAAOlN,MAAKrH,KAAK20B,sBAAsBpgB,IAO3CqL,EAAStX,UAAUmM,oBAAsB,SAAUhG,GAC/C,MAAOpH,MAAKrH,KAAKyU,oBAAoBhG,IAMzCmR,EAAStX,UAAUrB,WAAa,SAAU2tB,GACtC,MAAIpkB,eAAcnJ,KAAKkS,iBACZlS,KAAKrH,KAAKL,SAGjB0H,KAAKob,kBAAkBpb,KAAKrH,KAAKiH,WAAW2tB,IACrCvtB,KAAKkd,cAGpB3E,EAAStX,UAAUma,kBAAoB,SAAUzb,GAC7CK,KAAKkd,cAIL,KAAK,GADDmM,GAFAmE,GAAgB,EAChBC,EAAc/0B,oBAAkBiH,GAAUK,KAAKrH,KAAKiH,aAAeD,EAE9DtH,EAAI,EAAGA,EAAIo1B,EAAYl1B,OAAQF,IAAK,CACzCgxB,IACA,KAAK,GAAII,GAAK,EAAGC,EAAKrwB,OAAOC,KAAKm0B,EAAYp1B,IAAKoxB,EAAKC,EAAGnxB,OAAQkxB,IAAM,CACrE,GAAIxR,GAAOyR,EAAGD,EACTtgB,eAAuB,SAAT8O,IACfoR,EAAWpR,GAAQwV,EAAYp1B,GAAG4f,IAG1CjY,KAAKkd,YAAY1jB,KAAK,GAAIsG,GAAOupB,IAErC,IAAKlgB,eAAenJ,KAAKkS,iBAAkB,CAEvClS,KAAU,WAAK,WACXA,KAAKrH,KAAKL,QAAQC,SAAWyH,KAAKkd,YAAY3kB,SAC9Ci1B,GAAgB,GAEfA,GACDxtB,KAAKkY,eAAgB5f,QAAS0H,KAAKkd,cAAe,GAEtDld,KAAU,cAAIwX,GAElB,MAAOxX,MAAKkd,aAMhB3E,EAAStX,UAAUysB,WAAa,WAC5B,MAAO1tB,MAAKrH,KAAK+0B,cAErBnV,EAAStX,UAAU6X,yBAA2B,WAE1C9Y,KAAKrH,KAAa,qBAAEqJ,MAAMhC,OAE9BuY,EAAStX,UAAU0sB,aAAe,SAAUC,EAAct1B,GAEtD0H,KAAKrH,KAAa,aAAEqJ,MAAMhC,MAAO4tB,EAAct1B,KAEnDigB,EAAStX,UAAU6mB,oBAAsB,WACjC3e,cAAcnJ,KAAKkS,mBACnBlS,KAAK+gB,wBAAyB,GAElC/gB,KAAKkY,eAAgBlf,eAAgBO,YAAU,aAAcyG,KAAKrH,KAAKK,kBAAmB,GAC1FgH,KAAKkY,eAAgB5L,aAAc/S,YAAU,aAAcyG,KAAKrH,KAAK2T,gBAAiB,GACtFtM,KAAKkY,eAAgBtf,eAAgBW,YAAU,aAAcyG,KAAKrH,KAAKC,kBAAmB,GAC1FoH,KAAKkY,eAAgB1Z,aAAcjF,YAAU,aAAcyG,KAAKrH,KAAK6F,gBAAiB,GAClF2K,cAAcnJ,KAAKkS,mBACnBlS,KAAK+gB,wBAAyB,IAOtCxI,EAAStX,UAAUgR,gBAAkB,WACjC,MAAOjS,MAAKrH,KAAKsZ,mBAMrBsG,EAAStX,UAAU4sB,YAAc,WAG7B,IAAK,GAFDC,MACA5qB,EAAOlD,KAAKrH,KAAKk1B,cACZx1B,EAAI,EAAGe,EAAM8J,EAAK3K,OAAQF,EAAIe,EAAKf,IACnC6K,EAAK7K,GAAGmL,UAAUC,SAAS,iBAC5BqqB,EAAMt0B,KAAK0J,EAAK7K,GAGxB,OAAOy1B,IAOXvV,EAAStX,UAAUnD,sBAAwB,WACvC,MAAOkC,MAAKrH,KAAKqa,iBAMrBuF,EAAStX,UAAUzE,gBAAkB,WACjC,MAAOwD,MAAKrH,KAAK4D,WAAWC,mBAMhC+b,EAAStX,UAAUqG,iBAAmB,WAClC,MAAOtH,MAAKrH,KAAK2O,oBAMrBiR,EAAStX,UAAU8sB,eAAiB,WAChC,MAAO/tB,MAAKrH,KAAKo1B,kBAOrBxV,EAAStX,UAAUnC,cAAgB,SAAU5D,GACzC,MAAO8E,MAAKrH,KAAKmG,cAAc5D,IAOnCqd,EAAStX,UAAU+sB,WAAa,SAAU3sB,GACtC,MAAOrB,MAAKrH,KAAKq1B,WAAW3sB,IAOhCkX,EAAStX,UAAUgtB,oBAAsB,SAAU/gB,GAC/C,MAAOlN,MAAKrH,KAAKs1B,oBAAoB/gB,IAMzCqL,EAAStX,UAAUiD,kBAAoB,WAEnC,IAAK,GADDgqB,MACKzE,EAAK,EAAGC,EAAK1pB,KAAKkd,YAAauM,EAAKC,EAAGnxB,OAAQkxB,IAAM,CAC1D,GAAItiB,GAAMuiB,EAAGD,EACTtiB,GAAIgnB,SACJD,EAAK10B,KAAK2N,GAGlB,MAAO+mB,IAKX3V,EAAStX,UAAU8R,YAAc,WAC7BA,cAAY/S,KAAKyR,UAKrB8G,EAAStX,UAAUyP,YAAc,WAC7BA,cAAY1Q,KAAKyR,UAKrB8G,EAAStX,UAAUmpB,QAAU,WACzBpqB,KAAKrH,KAAKyxB,WAOd7R,EAAStX,UAAU8F,kBAAoB,WACnC,MAAO/G,MAAKohB,gBAAgBnW,qBAMhCsN,EAAStX,UAAUiK,qBAAuB,WACtC,MAAOlL,MAAKohB,gBAAgBlW,wBAKhCqN,EAAStX,UAAUoF,iBAAmB,SAAU+nB,GAC5CpuB,KAAKohB,gBAAgB/a,iBAAiB+nB,IAK1C7V,EAAStX,UAAU+oB,eAAiB,SAAUqE,GACtC31B,oBAAkB21B,IAAcA,GAChCruB,KAAKrH,KAAKL,QAAU0H,KAAK0hB,eAAe1hB,KAAK1H,SAC7C0H,KAAKrH,KAAKqxB,kBAGVhqB,KAAKrH,KAAKuf,eAAgB5f,QAAS0H,KAAK0hB,eAAe1hB,KAAK1H,WAAY,IAMhFigB,EAAStX,UAAUqtB,cAAgB,WAC/BtuB,KAAKrH,KAAK21B,iBAOd/V,EAAStX,UAAUkb,sBAAwB,SAAU9a,GACjD,GAA+B,UAA3BrB,KAAK3D,aAAaC,KAAkB,CAGpC,GAAI0D,KAAKxD,kBAAkBwD,KAAK0Y,gBAAgBngB,QAC5CyH,KAAKxD,kBAAkBwD,KAAK2Y,gBAAgBpgB,QAAUyH,KAAKxD,kBAAkBwD,KAAKyO,cAAclW,OAAQ,CACxG,GAAIg2B,GAAYvuB,KAAKrH,KAAK4D,WAAc,SAGxC,OAFAyD,MAAKrH,KAAK4D,WAAqB,WAAE,aAAcgyB,QAC/CvuB,KAAKwuB,cAAgBntB,IAI7B,GAAIrB,KAAKmO,YAAa,CAClB,GAAIsgB,GAAUptB,EAAO+E,QAAQ,kBAAkBkW,cAC3C5iB,EAASsG,KAAKlC,wBAAwB2wB,EAAQ1pB,SAC9C1D,GAAOmC,UAAUC,SAAS,oBAC1BzD,KAAKkc,YAAYuS,EAAS/0B,GAG1BsG,KAAKqc,UAAUoS,EAAS/0B,OAG3B,CAEGA,GADA+0B,EAAUzuB,KAAKrH,KAAKq1B,WAAW3sB,IACdyF,OACjBzF,GAAOmC,UAAUC,SAAS,oBAC1BzD,KAAKkc,YAAYuS,EAAQ5vB,IAAKnF,GAG9BsG,KAAKqc,UAAUoS,EAAQ5vB,IAAKnF,KAQxC6e,EAAStX,UAAUob,UAAY,SAAUxd,EAAKnF,GAC1C,GAAI6I,GAAQvC,KAERoE,GAASzF,KADbjF,EAASsG,KAAK0uB,yBAAyB7vB,EAAKnF,GACjBmF,IAAKA,EAAKwF,QAAQ,EAC7CrE,MAAKsE,QZ5qEU,YY4qEgBF,EAAM,SAAUuqB,GAC3C,IAAKA,EAActqB,SACf9B,EAAMqsB,eAAe,SAAU/vB,EAAKnF,KAC9BjC,EAAa8K,IAAW/H,EAAU+H,MAAYpK,EAAgBoK,IAAQ,CACxE,GAAIssB,IAAiBlwB,KAAMjF,EAAQmF,IAAKA,EACxC0D,GAAM+B,QZnrEJ,WYmrE6BuqB,OAK/CtW,EAAStX,UAAUytB,yBAA2B,SAAU7vB,EAAKnF,GAUzD,MATIsG,MAAKqM,aAAkD,QAAnCrM,KAAKsM,aAAaC,cAA0BvM,KAAKmd,aAAezkB,oBAAkBgB,KACrGjC,EAAauI,MACdtG,EAASsG,KAAKxC,SAASC,OAAO,SAAUC,GACpC,MAAOA,GAAErD,kBAGR3B,oBAAkBgB,KACvBA,EAASsG,KAAKrH,KAAKmF,wBAAwBe,EAAIkG,WAE5CrL,GAMX6e,EAAStX,UAAUib,YAAc,SAAUrd,EAAKnF,GAC5C,GAAI6I,GAAQvC,KAERoE,GAASzF,KADbjF,EAASsG,KAAK0uB,yBAAyB7vB,EAAKnF,GACjBmF,IAAKA,EAAKwF,QAAQ,EAC7CrE,MAAKsE,QZtsEW,aYssEgBF,EAAM,SAAU0qB,GAC5C,IAAKA,EAAezqB,OAAQ,CACxB9B,EAAMqsB,eAAe,WAAY/vB,EAAKnF,EACtC,IAAIm1B,IAAiBlwB,KAAMjF,EAAQmF,IAAKA,EACnCpH,GAAa8K,IACdA,EAAM+B,QZ7sEH,YY6sE6BuqB,OAShDtW,EAAStX,UAAU8tB,cAAgB,SAAU5zB,GACzC,IAAM6E,KAAKqM,aAAkD,QAAnCrM,KAAKsM,aAAaC,cAA2BvM,KAAKoK,wBAA0B3S,EAAauI,MAAO,CAClHqK,EAAMrK,KAAKrH,KAAKhB,WAAW8F,OAAO,SAAUC,GAI5C,MAHIA,GAAErD,iBAAmBqD,EAAEvC,QAAUA,IACjCuC,EAAEvD,UAAW,GAEVuD,EAAErD,iBAAmBqD,EAAEvC,QAAUA,GAE5C6E,MAAKqc,UAAU,KAAMhS,OAMrB,KAAK,GAHDA,GAAMrK,KAAKgvB,iBAAiB7zB,GAC5B0D,EAAMtF,YAAU,OAAQ8Q,GACxB3Q,EAASH,YAAU,UAAW8Q,GACzBhS,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAC/B2H,KAAKqc,UAAUxd,EAAIxG,GAAIqB,EAAOrB,KAI1CkgB,EAAStX,UAAU+tB,iBAAmB,SAAU7zB,GAC5C,GAAI+H,GAAOlD,KAAKjB,UAAUtB,OAAO,SAAUC,GACvC,OAAkD,IAA1CA,EAAEiK,UAAUjJ,QAAQ,QAAUvD,KAC9BuC,EAAEyI,cAAc,wBAA0BzI,EAAEyI,cAAc,uBAItE,QADYjN,QADE8G,KAAKlC,wBAAwBL,OAAO,SAAUC,GAAK,MAAOA,GAAEvC,QAAUA,GAASuC,EAAErD,kBACjE6I,KAAMA,IAOxCqV,EAAStX,UAAUguB,gBAAkB,SAAU9zB,GAC3C,IAAM6E,KAAKqM,aAAkD,QAAnCrM,KAAKsM,aAAaC,cAA2BvM,KAAKoK,wBAA0B3S,EAAauI,MAAO,CACtH,GAAItG,GAASsG,KAAKrH,KAAKhB,WAAW8F,OAAO,SAAUC,GAI/C,MAHIA,GAAErD,iBAAmBqD,EAAEvC,QAAUA,IACjCuC,EAAEvD,UAAW,GAEVuD,EAAErD,iBAAmBqD,EAAEvC,QAAUA,GAE5C6E,MAAKkc,YAAY,KAAMxiB,OAMvB,KAAK,GAHD2Q,GAAMrK,KAAKgvB,iBAAiB7zB,GAC5B+H,EAAO3J,YAAU,OAAQ8Q,GACzBnR,EAAUK,YAAU,UAAW8Q,GAC1BhS,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChC2H,KAAKkc,YAAYhZ,EAAK7K,GAAIa,EAAQb,KAQ9CkgB,EAAStX,UAAU8a,UAAY,WAC3B/b,KAAKkvB,kBAAkB,WAM3B3W,EAAStX,UAAU+a,YAAc,WAC7Bhc,KAAKkvB,kBAAkB,aAE3B3W,EAAStX,UAAUiuB,kBAAoB,SAAUpzB,GAC7C,GAAIoH,GAAOlD,KAAKjB,UAAUtB,OAAO,SAAUC,GACvC,MAAOA,GAAEyI,cAAc,eAA4B,WAAXrK,EAAsB,WAAa,YAI/E,IAFAkE,KAAKmd,aAAc,EACnBnd,KAAKod,eAAgB,GACfpd,KAAKqM,aAAkD,QAAnCrM,KAAKsM,aAAaC,cAA2BvM,KAAKoK,wBAA0B3S,EAAauI,MAC/GA,KAAKxC,SAASC,OAAO,SAAUC,GACvBA,EAAErD,kBACFqD,EAAEvD,SAAsB,aAAX2B,KAGjBoH,EAAK3K,SACM,aAAXuD,EAAwBkE,KAAKkc,YAAYhZ,EAAK,IAAMlD,KAAKqc,UAAUnZ,EAAK,SAI5E,KAAK,GAAI7K,GAAI,EAAGA,EAAI6K,EAAK3K,OAAQF,IAClB,aAAXyD,EAAwBkE,KAAKkc,YAAYhZ,EAAK7K,IAAM2H,KAAKqc,UAAUnZ,EAAK7K,GAGhF2H,MAAKmd,aAAc,EACnBnd,KAAKod,eAAgB,GAEzB7E,EAAStX,UAAU2tB,eAAiB,SAAU9yB,EAAQ+C,EAAKnF,EAAQqY,GAC/D,GAAI4c,IAAkB9vB,IAAKA,EAAKF,KAAMjF,EAAQyL,aAAetF,YAAa/D,IACrErE,EAAauI,OAAoB,WAAXlE,GAAuBkE,KAAKxE,iBACnDwE,KAAKmvB,oBAAoBR,EAE7B,IAAI3c,GAAWhS,KAAKjB,SACpB,IAAIiB,KAAKmO,YAAa,CAClB,GAAIjL,GAAOlD,KAAKiS,kBAAkB/O,IAClC8O,MAActO,MAAMlB,KAAKU,GAa7B,GAVIxK,oBAAkBmG,GAElBA,EAAMmT,EADKhS,KAAKlC,wBAAwBY,QAAQhF,KAIpCmF,EAAI0I,aAAa,iBAE5B7O,oBAAkBmG,IACnBA,EAAI0J,aAAa,gBAA4B,WAAXzM,EAAsB,OAAS,WAE/DkE,KAAKqM,aAAkD,QAAnCrM,KAAKsM,aAAaC,cAA2BvM,KAAKoK,uBAA0B3S,EAAauI,OAC3G7H,EAAgB6H,MAGnB,CACD,GAAIovB,OAAgB,EACpB,IAAe,WAAXtzB,EAAqB,CACrBszB,EAAgB,YACXrd,IACDrY,EAAOS,UAAW,EAClB6F,KAAKwY,mBAAmB9e,EAAOM,UAAUG,SAAWT,EAAOS,SAE3DgY,GAAYtT,EAAIuT,uBAAuB,sBAAsB,EACjE,IAAI1Z,oBAAkByZ,GAClB,MAEJtG,aAAUsG,GAAY,oBACtBzJ,eAAayJ,GAAY,0BAExB,CACDid,EAAgB,OACXrd,IACDrY,EAAOS,UAAW,EAClB6F,KAAKwY,mBAAmB9e,EAAOM,UAAUG,SAAWT,EAAOS,SAE/D,IAAIgY,GAAYtT,EAAIuT,uBAAuB,oBAAoB,EAC/D,IAAI1Z,oBAAkByZ,GAClB,MAEJtG,aAAUsG,GAAY,sBACtBzJ,eAAayJ,GAAY,oBAE7B,GAAIkd,GAAard,EAASvU,OAAO,SAAUgE,GACvC,MAAOA,GAAE+B,UAAUC,SAAS,uBAAyB/J,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,KAE9F1D,GAAauI,QAAUxF,EAAUwF,MACjCA,KAAKsvB,aAAaxzB,EAAQ+C,EAAKnF,EAAQqY,GAGlC5Z,EAAgB6H,OAAoB,aAAXlE,GAC1BkE,KAAKuvB,YAAYzzB,EAAQ+C,EAAKnF,EAAQqY,GAG9C/R,KAAK+N,OAAO,qBAAuBshB,WAAYA,EAAYvzB,OAAQszB,EAAe11B,OAAQA,EAAQmF,IAAKA,IACvGmB,KAAKolB,aAAapT,OA1ClBhS,MAAK+N,OZh0EqB,4BYg0EqBjS,OAAQA,EAAQ+C,IAAKA,EAAKnF,OAAQA,KA6CzF6e,EAAStX,UAAUkuB,oBAAsB,SAAUR,GAC/C,GAAIpsB,GAAQvC,KACRwvB,EAAO,GAAIjK,WAEfoJ,GAA2B,cAAIa,EAAK/J,OACpC,IAAI/rB,GAASi1B,EAAchwB,IAC3BqB,MAAKsE,QZn5EgB,kBYm5EgBqqB,GACrCa,EAAK1I,QAAQ7W,KAAK,SAAUvS,GACxB,GAAIixB,EAAcxpB,UAAU5M,OAAQ,CAGhC,IAAK,GAFD+b,GAAe/R,EAAe,SAC9BrH,EAAQ,EACH7C,EAAI,EAAGA,EAAIic,EAAY/b,OAAQF,IACpC,GAAIic,EAAYjc,GAAG0E,WAAarD,EAAOqD,SAAU,CAC7C7B,EAAQ7C,CACR,OAOR,IAAK,GAJDo3B,GAAS7iB,WAAS,SAAUrK,EAAM5K,YAClCwN,EAAYxK,EAAYg0B,EAAcxpB,WACtCuqB,EAAWh2B,EAAO6I,EAAMnF,eACxB1D,EAAO6I,EAAMnF,cAAc7E,OAAS4M,EAAU5M,OAASmB,EAAO6I,EAAMnF,cAAc7E,OAA4B4M,EAAU5M,OACnHF,EAAI,EAAGA,EAAIq3B,EAAUr3B,IACtBqB,EAAO6I,EAAMnF,eACbqyB,EAAOhyB,OAAO,SAAUC,EAAGrF,GACnBqF,EAAE6E,EAAMtF,mBAAqBvD,EAAO6I,EAAMrF,YAC1CuyB,EAAOtyB,OAAO9E,EAAG,KAIzB8M,EAAU9M,IACV8M,EAAU9M,GAAG8C,MAAQzB,EAAOyB,MAAQ,EACpCgK,EAAU9M,GAAG6C,MAAQyW,KAAKC,KAAqB,IAAhBD,KAAKE,UACpC1M,EAAU9M,GAAGyB,WAAa8C,YAAWlD,GACrCyL,EAAU9M,GAAG0E,SAAWH,YAAWuI,EAAU9M,UACtC8M,GAAU9M,GAAGyB,WAAWQ,mBACxB6K,GAAU9M,GAAG0E,SAASjD,WAC7BqL,EAAU9M,GAAGoG,eAAiB/E,EAAOM,SACrCmL,EAAU9M,GAAG2B,SAAWwX,SAAOjP,EAAMkP,QAAQC,GAAK,UAClDnB,WAAS,sBAAwBpL,EAAU9M,GAAG2B,SAAUmL,EAAU9M,GAAIkK,KACjE7J,oBAAkByM,EAAU9M,GAAGkK,EAAMnF,gBACrC+H,EAAU9M,GAAGkK,EAAMqN,kBAAoBzX,EAAgBoK,MACxD4C,EAAU9M,GAAGgC,iBAAkB,GAEnCia,EAAYnX,OAAOjC,EAAQ,EAAI7C,EAAGqB,EAAO6I,EAAMnF,eAAiB1D,EAAO6I,EAAMnF,cAAc/E,GAAK,EAAI,EAAG8M,EAAU9M,KAGjHic,EAAYnX,OAAOjC,EAAQ,EAAI7C,EAAG,EAG1Cic,GAAYpZ,GAAOqH,EAAMnF,cAAgB+H,EACzCmP,EAAYpZ,GAAOZ,aAAe6K,EAClCmP,EAAYpZ,GAAOf,UAAW,EAC9BoW,WAAS,sBAAwB+D,EAAYpZ,GAAOlB,SAAUsa,EAAYpZ,GAAQqH,EAClF,KAAK,GAAIxH,GAAI,EAAGA,EAAI4zB,EAAcxpB,UAAU5M,OAAQwC,IAChD00B,EAAOj2B,KAAKm1B,EAAcxpB,UAAUpK,IAG5CwH,EAAM+jB,iBAAkB,EACxB/jB,EAAM6nB,UACN7nB,EAAM+B,QZl7EI,WYk7EqBqqB,MAGvCpW,EAAStX,UAAUquB,aAAe,SAAUxzB,EAAQ+C,EAAKnF,EAAQqY,GAC7D,GAAIC,GAAWhS,KAAKjB,SACpB,IAAIiB,KAAKmO,YAAa,CAClB,GAAIwhB,GAAS3vB,KAAKiS,kBAAkB/O,IACpC8O,MAActO,MAAMlB,KAAKmtB,GAE7B,GAAIvrB,IAASzF,KAAMjF,EAAQmF,IAAKA,GAC5BqE,IAIJ,IAHAA,EAAO8O,EAASvU,OAAO,SAAUgE,GAC7B,MAAOA,GAAE0E,cAAc,kBAAoBzM,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAEzE,WAAXW,EAAqB,CACrBkE,KAAK+N,OZz7ES,gBYy7EqBrU,OAAQA,EAAQwJ,KAAMA,EAAMqP,UAAW1T,GAC1E,IAAI+wB,IAAW/wB,IAAKA,EAAKF,KAAMjF,EAC3BwJ,GAAK3K,OAAS,GACdyH,KAAKsE,QZp8EC,WYo8EwBsrB,OAIlC5vB,MAAK6vB,qBAAsBn2B,OAAQA,EAAQwJ,KAAMA,IACjDlD,KAAKsE,QZr8EM,YYq8EoBF,IAGvCmU,EAAStX,UAAUsuB,YAAc,SAAUzzB,EAAQ+C,EAAKnF,EAAQqY,GAC5D,GAGI+d,GAHAx1B,EAAe0F,KAAKlC,wBAAwBL,OAAO,SAAUC,GAC7D,MAAOA,GAAEe,iBAAmB/E,EAAOM,WAGnCgY,EAAWhS,KAAKjB,SACpB,IAAIiB,KAAKmO,YAAa,CAClB,GAAI4hB,GAAS/vB,KAAKiS,kBAAkB/O,IACpC8O,MAActO,MAAMlB,KAAKutB,GAE7B,GAAIX,GAA4B,WAAXtzB,EAAuB,YAAc,OAEtDoH,GADQ5I,EAAa,GAAGR,WAAWoB,MAC5B8W,EAASvU,OAAO,SAAUgE,GACjC,MAAOA,GAAE0E,cAAc,kBAAoBzM,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,QAEpF6E,KAAKd,YAAcc,KAAKN,eAAiBM,KAAKb,sBAC9C2wB,EAAc9vB,KAAKgwB,iBAAiBvyB,OAAO,SAAUgE,GACjD,MAAOA,GAAE0E,cAAc,kBAAoBzM,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAG5F,KAAK,GAAI9C,GAAI,EAAGA,EAAI6K,EAAK3K,OAAQF,IAC7B6K,EAAK7K,GAAG4P,MAAMwE,QAAU2iB,EACnB12B,oBAAkBo3B,KACnBA,EAAYz3B,GAAG4P,MAAMwE,QAAU2iB,GAEnCpvB,KAAK+N,OAAO,kBAAoBlP,IAAKqE,EAAK7K,KACrCK,oBAAkB4B,EAAajC,GAAGiC,eAA6B,WAAXwB,IACrDpD,oBAAkB4B,EAAajC,GAAG8B,YAAaG,EAAajC,GAAG8B,WAC/D6F,KAAK4uB,eAAe9yB,EAAQoH,EAAK7K,GAAIiC,EAAajC,IAAI,GAClD2H,KAAKN,eAAiBM,KAAKP,kBAAoB/G,oBAAkBo3B,IACjE9vB,KAAK4uB,eAAe9yB,EAAQg0B,EAAYz3B,GAAIiC,EAAajC,IAAI,KAK7EkgB,EAAStX,UAAUmkB,aAAe,SAAUliB,GACxC,GAAIlD,KAAK8hB,eAAiB9hB,KAAKmO,YAE3B,IAAK,GADD8hB,GAAkB,EACb53B,EAAI,EAAG6K,GAAQ7K,EAAI6K,EAAK3K,OAAQF,IAAK,CAC1C,GAAI63B,GAAUhtB,EAAK7K,EACW,UAA1B63B,EAAQjoB,MAAMwE,UACVyjB,EAAQ1sB,UAAUC,SAAS,aAC3BiF,eAAawnB,GAAU,YAEvBD,EAAkB,GAAM,GAAMC,EAAQ1sB,UAAUC,SAAS,iBAAoBysB,EAAQ1sB,UAAUC,SAAS,gBACxGoI,YAAUqkB,GAAU,YAEnBA,EAAQ1sB,UAAUC,SAAS,iBAAoBysB,EAAQ1sB,UAAUC,SAAS,gBAC3EwsB,OAMpB1X,EAAStX,UAAUqmB,sBAAwB,SAAUljB,GACjD,GAAIpE,KAAKmO,YAAa,CAClB,GAAIjL,GAAOlD,KAAKiS,kBAAkB/O,IAClCA,MAAUQ,MAAMlB,KAAKU,EACrB,KAAK,GAAI7K,GAAI,EAAGA,EAAI6K,EAAK3K,OAAQF,IAAK,CAClC,GAAI83B,GAAQnwB,KAAKrH,KAAKsZ,kBAAkB/O,KAAK7K,GAAGmH,MAAMQ,KAAKP,iBACvDZ,EAAMqE,EAAK7K,GAEX+3B,GAAQzxB,KADEqB,KAAKrH,KAAK03B,gBAAgBh4B,GAAGsG,KAChBE,IAAKA,EAAKU,KAAM4wB,EAAOxwB,OAAQK,KAAKJ,aAAaI,KAAKP,iBACjFO,MAAKX,aAAaC,WAAW8wB,MAIzC7X,EAAStX,UAAU4uB,oBAAsB,SAAU/d,EAAYC,GACtDA,IACDD,EAAWpY,OAAOS,UAAW,EAIjC,KAAK,GADD6P,GADA9G,EAAO4O,EAAW5O,KAEb7K,EAAI,EAAGA,EAAI6K,EAAK3K,OAAQF,IAAK,CAC9B8Q,cAAcnJ,KAAKkS,kBACnBxJ,eAAaxF,EAAK7K,IAAK,qBACvBwT,YAAU3I,EAAK7K,IAAK,uBAGpB6K,EAAK7K,GAAG4P,MAAMwE,QAAU,MAE5B,IAAI6jB,GAAeptB,EAAK7K,GAAG8N,cAAc,qBAIzC,IAHKzN,oBAAkB43B,IACnBtwB,KAAKrH,KAAK8Z,gBAAgB8d,SAASD,GAEnCptB,EAAK7K,GAAG8N,cAAc,6CAA8C,CACpE,GAAIqqB,GAAgBttB,EAAK7K,GAAG8N,cAAc,4CAC1C6D,GAAchK,KAAKmO,YAAcnO,KAAKrH,KAAKmF,wBAAwBoF,EAAK7K,GAAG0M,UACvE/E,KAAKrH,KAAK0Z,oBAAoBnP,EAAK7K,GAAGkP,aAAa,aAAa5I,MAC/DjG,oBAAkB83B,IAAkBxmB,EAAY7P,WACjDuO,eAAa8nB,GAAgB,oBAC7B3kB,YAAU2kB,GAAgB,sBAI9B,KAAK,GAFDC,MACAC,EAAQ1wB,KAAKjB,UACR4xB,EAAM,EAAGA,EAAMD,EAAMn4B,OAAQo4B,IAC9BD,EAAMC,GAAKxqB,cAAc,kBAAoB6D,EAAY9O,MAAQ,SAAW8O,EAAY7O,MAAQ,KAChGs1B,EAAKj3B,KAAKk3B,EAAMC,GAGpBF,GAAKl4B,QAAUyR,EAAY7P,UAC3B6F,KAAK6vB,qBAAsBn2B,OAAQsQ,EAAa9G,KAAMutB,IAAQ,MAQ9ElY,EAAStX,UAAUif,YAAc,WAC7BlgB,KAAKwF,GAAG,gBAAiBxF,KAAK4wB,kBAAmB5wB,MACjDA,KAAKrH,KAAK6M,GAAG,cAAexF,KAAK4gB,gBAAiB5gB,OAEtDuY,EAAStX,UAAU2vB,kBAAoB,SAAUC,GAC7C7wB,KAAKgP,YAAc6hB,GAKvBtY,EAAStX,UAAUqpB,eAAiB,WAC5BtqB,KAAK8F,cAGT9F,KAAK+F,IAAI,gBAAiB/F,KAAK4wB,mBAC/B5wB,KAAKrH,KAAKoN,IAAI,cAAe/F,KAAK4gB,mBAgBtCrI,EAAStX,UAAU6vB,eAAiB,SAAUrF,EAAWsF,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,GACzIrxB,KAAKrH,KAAKm4B,eAAerF,EAAWsF,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,IAM5H9Y,EAAStX,UAAUqwB,eAAiB,WAChCtxB,KAAKrH,KAAK24B,kBASd/Y,EAAStX,UAAUswB,0BAA4B,SAAUrkB,EAAOskB,GAC5DxxB,KAAKrH,KAAK44B,0BAA0BrkB,EAAOskB,IAQ/CjZ,EAAStX,UAAUwb,UAAY,SAAUvhB,EAAOu2B,GAC5CzxB,KAAKrH,KAAK8jB,UAAUvhB,EAAOu2B,IAO/BlZ,EAAStX,UAAUywB,WAAa,SAAUzoB,GACtCjJ,KAAKrH,KAAK+4B,WAAWzoB,IAMzBsP,EAAStX,UAAU0b,eAAiB,WAChC3c,KAAKrH,KAAKgkB,kBAMdpE,EAAStX,UAAU4D,KAAO,SAAUhC,GAChC7C,KAAK6gB,gBAAgBhc,KAAKhC,IAQ9B0V,EAAStX,UAAU6D,MAAQ,SAAUnG,EAAMoG,EAAUC,GACjDhF,KAAK6gB,gBAAgB/b,MAAMnG,EAAMoG,EAAUC,IAQ/CuT,EAAStX,UAAU0wB,WAAa,SAAUjV,EAAW+U,GACjDzxB,KAAKrH,KAAKg5B,WAAWjV,EAAW+U,IAMpClZ,EAAStX,UAAU2wB,gBAAkB,WACjC,MAAO5xB,MAAKrH,KAAKi5B,mBAQrBrZ,EAAStX,UAAU4wB,wBAA0B,SAAU9sB,EAAUmC,GAC7D,MAAOlH,MAAKrH,KAAKk5B,wBAAwB9sB,EAAUmC,IAMvDqR,EAAStX,UAAU0J,mBAAqB,WACpC,MAAO3K,MAAKrH,KAAKgS,sBAOrB4N,EAAStX,UAAU7B,qBAAuB,SAAUlE,GAChD,MAAO8E,MAAKrH,KAAKyG,qBAAqBlE,IAM1Cqd,EAAStX,UAAU+uB,eAAiB,WAChC,MAAOhwB,MAAKrH,KAAKq3B,kBAKrBzX,EAAStX,UAAU9B,iBAAmB,WAClC,MAAOa,MAAK8xB,eAAe9xB,KAAK1H,QAAS,IAE7CigB,EAAStX,UAAU6wB,eAAiB,SAAU5D,EAAM6D,GAChD,IAAK,GAAI15B,GAAI,EAAGe,EAAM80B,EAAK31B,OAAQF,EAAIe,EAAKf,IACpC61B,EAAK71B,GAAGC,QACRy5B,EAAM/xB,KAAK8xB,eAAe5D,EAAK71B,GAAGC,QAASy5B,GAGvC7D,EAAK71B,GAAG25B,UACRD,GAIZ,OAAOA,IAMXxZ,EAAStX,UAAUoC,sBAAwB,WACvC,MAAOrD,MAAKrH,KAAK0K,yBAMrBkV,EAAStX,UAAUgxB,0BAA4B,WAC3C,MAAOjyB,MAAKrH,KAAKs5B,6BAOrB1Z,EAAStX,UAAU4C,mBAAqB,WACpC,MAAO7D,MAAKrH,KAAKkL,sBAMrB0U,EAAStX,UAAU0R,cAAgB,WAC/B,OAASuf,WAAYlyB,KAAKrH,KAAKga,gBAAiBwf,WAAYnyB,KAAK4f,aAKrErH,EAAStX,UAAUmxB,YAAc,SAAUC,EAAaC,EAASlH,GAC7DprB,KAAKuyB,qBAAqBH,YAAYC,EAAaC,EAASlH,GAEhE,IAAIxS,EAkXJ,OAjXAzX,KACIc,WAAS,IACVsW,EAAStX,UAAW,iBAAc,IACrCE,IACIc,WAAS,IACVsW,EAAStX,UAAW,oBAAiB,IACxCE,IACIc,WAAS,aACVsW,EAAStX,UAAW,eAAY,IACnCE,IACIc,gBACDsW,EAAStX,UAAW,cAAW,IAClCE,IACIc,WAAS,OACVsW,EAAStX,UAAW,mBAAgB,IACvCE,IACIc,WAAS,OACVsW,EAAStX,UAAW,sBAAmB,IAC1CE,IACIc,WAAS,IACVsW,EAAStX,UAAW,sBAAmB,IAC1CE,IACIc,WAAS,OACVsW,EAAStX,UAAW,gBAAa,IACpCE,IACIc,WAAS,OACVsW,EAAStX,UAAW,sBAAmB,IAC1CE,IACIc,YAAS,IACVsW,EAAStX,UAAW,wBAAqB,IAC5CE,IACIc,WAAS,OACVsW,EAAStX,UAAW,yBAAsB,IAC7CE,IACIc,YAAS,IACVsW,EAAStX,UAAW,0BAAuB,IAC9CE,IACIc,gBACDsW,EAAStX,UAAW,iBAAc,IACrCE,IACIc,cACDsW,EAAStX,UAAW,YAAS,IAChCE,IACIc,cACDsW,EAAStX,UAAW,iBAAc,IACrCE,IACIc,WAAS,aACVsW,EAAStX,UAAW,gBAAa,IACpCE,IACIc,YAAS,IACVsW,EAAStX,UAAW,kBAAe,IACtCE,IACIc,YAAS,IACVsW,EAAStX,UAAW,wBAAqB,IAC5CE,IACIc,YAAS,IACVsW,EAAStX,UAAW,oBAAiB,IACxCE,IACIqxB,aAAYnwB,IACbkW,EAAStX,UAAW,uBAAoB,IAC3CE,IACIc,YAAS,IACVsW,EAAStX,UAAW,sBAAmB,IAC1CE,IACIc,YAAS,IACVsW,EAAStX,UAAW,oBAAiB,IACxCE,IACIc,YAAS,IACVsW,EAAStX,UAAW,yBAAsB,IAC7CE,IACIqxB,aAAYhc,IACb+B,EAAStX,UAAW,mBAAgB,IACvCE,IACIqxB,aAAYC,oBACbla,EAAStX,UAAW,sBAAmB,IAC1CE,IACIc,cACDsW,EAAStX,UAAW,oBAAiB,IACxCE,IACIc,YAAS,IACVsW,EAAStX,UAAW,qBAAkB,IACzCE,IACIc,YAAS,IACVsW,EAAStX,UAAW,wBAAqB,IAC5CE,IACIc,YAAS,IACVsW,EAAStX,UAAW,mBAAgB,IACvCE,IACIc,YAAS,IACVsW,EAAStX,UAAW,wBAAqB,IAC5CE,IACIqxB,aAAYla,KACbC,EAAStX,UAAW,mBAAgB,IACvCE,IACIiB,gBAAe+V,IAChBI,EAAStX,UAAW,iBAAc,IACrCE,IACIqxB,aAAYpa,IACbG,EAAStX,UAAW,mBAAgB,IACvCE,IACIc,YAAS,IACVsW,EAAStX,UAAW,qBAAkB,IACzCE,IACIc,cACDsW,EAAStX,UAAW,qBAAkB,IACzCE,IACIqxB,aAAYrwB,IACboW,EAAStX,UAAW,qBAAkB,IACzCE,IACIqxB,aAAYzmB,IACbwM,EAAStX,UAAW,qBAAkB,IACzCE,IACIc,cACDsW,EAAStX,UAAW,cAAW,IAClCE,IACIc,cACDsW,EAAStX,UAAW,sBAAmB,IAC1CE,IACIc,WAAS,YACVsW,EAAStX,UAAW,gBAAa,IACpCE,IACIc,cACDsW,EAAStX,UAAW,uBAAoB,IAC3CE,IACIc,cACDsW,EAAStX,UAAW,sBAAmB,IAC1CE,IACIc,cACDsW,EAAStX,UAAW,kBAAe,IACtCE,IACIc,WAAS,WACVsW,EAAStX,UAAW,wBAAqB,IAC5CE,IACIc,WAAS,OACVsW,EAAStX,UAAW,gBAAa,IACpCE,IACIc,YAAS,IACVsW,EAAStX,UAAW,mBAAgB,IACvCE,IACIc,YAAS,IACVsW,EAAStX,UAAW,oBAAiB,IACxCE,IACIc,YAAS,IACVsW,EAAStX,UAAW,kBAAe,IACtCE,IACIc,YAAS,IACVsW,EAAStX,UAAW,qBAAkB,IACzCE,IACIc,WAAS,SACVsW,EAAStX,UAAW,aAAU,IACjCE,IACIc,WAAS,SACVsW,EAAStX,UAAW,YAAS,IAChCE,IACIc,YAAS,IACVsW,EAAStX,UAAW,2BAAwB,IAC/CE,IACIc,WAAS,QACVsW,EAAStX,UAAW,sBAAmB,IAC1CE,IACIuxB,WACDna,EAAStX,UAAW,cAAW,IAClCE,IACIuxB,WACDna,EAAStX,UAAW,WAAQ,IAC/BE,IACIuxB,WACDna,EAAStX,UAAW,gBAAa,IACpCE,IACIuxB,WACDna,EAAStX,UAAW,eAAY,IACnCE,IACIuxB,WACDna,EAAStX,UAAW,iBAAc,IACrCE,IACIuxB,WACDna,EAAStX,UAAW,gBAAa,IACpCE,IACIuxB,WACDna,EAAStX,UAAW,eAAY,IACnCE,IACIuxB,WACDna,EAAStX,UAAW,gBAAa,IACpCE,IACIuxB,WACDna,EAAStX,UAAW,kBAAe,IACtCE,IACIuxB,WACDna,EAAStX,UAAW,qBAAkB,IACzCE,IACIuxB,WACDna,EAAStX,UAAW,gBAAa,IACpCE,IACIuxB,WACDna,EAAStX,UAAW,eAAY,IACnCE,IACIuxB,WACDna,EAAStX,UAAW,kBAAe,IACtCE,IACIuxB,WACDna,EAAStX,UAAW,kBAAe,IACtCE,IACIuxB,WACDna,EAAStX,UAAW,qBAAkB,IACzCE,IACIuxB,WACDna,EAAStX,UAAW,wBAAqB,IAC5CE,IACIuxB,WACDna,EAAStX,UAAW,sBAAmB,IAC1CE,IACIuxB,WACDna,EAAStX,UAAW,eAAY,IACnCE,IACIuxB,WACDna,EAAStX,UAAW,oBAAiB,IACxCE,IACIuxB,WACDna,EAAStX,UAAW,gBAAa,IACpCE,IACIuxB,WACDna,EAAStX,UAAW,wBAAqB,IAC5CE,IACIuxB,WACDna,EAAStX,UAAW,sBAAmB,IAC1CE,IACIuxB,WACDna,EAAStX,UAAW,wBAAqB,IAC5CE,IACIuxB,WACDna,EAAStX,UAAW,mBAAgB,IACvCE,IACIuxB,WACDna,EAAStX,UAAW,sBAAmB,IAC1CE,IACIuxB,WACDna,EAAStX,UAAW,oBAAiB,IACxCE,IACIc,YAAS,IACVsW,EAAStX,UAAW,qBAAkB,IACzCE,IACIuxB,WACDna,EAAStX,UAAW,mBAAgB,IACvCE,IACIuxB,WACDna,EAAStX,UAAW,kBAAe,IACtCE,IACIuxB,WACDna,EAAStX,UAAW,qBAAkB,IACzCE,IACIuxB,WACDna,EAAStX,UAAW,oBAAiB,IACxCE,IACIuxB,WACDna,EAAStX,UAAW,qBAAkB,IACzCE,IACIuxB,WACDna,EAAStX,UAAW,oBAAiB,IACxCE,IACIuxB,WACDna,EAAStX,UAAW,qBAAkB,IACzCE,IACIuxB,WACDna,EAAStX,UAAW,sBAAmB,IAC1CE,IACIuxB,WACDna,EAAStX,UAAW,mBAAgB,IACvCE,IACIuxB,WACDna,EAAStX,UAAW,sBAAmB,IAC1CE,IACIuxB,WACDna,EAAStX,UAAW,qBAAkB,IACzCE,IACIuxB,WACDna,EAAStX,UAAW,kBAAe,IACtCE,IACIuxB,WACDna,EAAStX,UAAW,eAAY,IACnCE,IACIuxB,WACDna,EAAStX,UAAW,iBAAc,IACrCE,IACIuxB,WACDna,EAAStX,UAAW,sBAAmB,IAC1CE,IACIuxB,WACDna,EAAStX,UAAW,iBAAc,IACrCE,IACIuxB,WACDna,EAAStX,UAAW,iBAAc,IACrCE,IACIuxB,WACDna,EAAStX,UAAW,qBAAkB,IACzCE,IACIuxB,WACDna,EAAStX,UAAW,oBAAiB,IACxCE,IACIuxB,WACDna,EAAStX,UAAW,kBAAe,IACtCE,IACIuxB,WACDna,EAAStX,UAAW,mBAAgB,IACvCE,IACIuxB,WACDna,EAAStX,UAAW,sBAAmB,IAC1CE,IACIuxB,WACDna,EAAStX,UAAW,sBAAmB,IAC1CE,IACIuxB,WACDna,EAAStX,UAAW,uBAAoB,IAC3CE,IACIuxB,WACDna,EAAStX,UAAW,iBAAc,IACrCE,IACIuxB,WACDna,EAAStX,UAAW,kBAAe,IACtCE,IACIuxB,WACDna,EAAStX,UAAW,cAAW,IAClCE,IACIuxB,WACDna,EAAStX,UAAW,mBAAgB,IACvCE,IACIuxB,WACDna,EAAStX,UAAW,yBAAsB,IAC7CE,IACIuxB,WACDna,EAAStX,UAAW,cAAW,IAClCE,IACIc,YAAU,IACXsW,EAAStX,UAAW,uBAAoB,IAC3CE,IACIqxB,aAAYxmB,IACbuM,EAAStX,UAAW,wBAAqB,IAC5CE,IACIc,YAAS,IACVsW,EAAStX,UAAW,uBAAoB,IAC3CE,IACIc,YAAS,IACVsW,EAAStX,UAAW,qBAAkB,IACzCE,IACIuxB,WACDna,EAAStX,UAAW,uBAAoB,IAC3CE,IACIuxB,WACDna,EAAStX,UAAW,6BAA0B,IACjDE,IACIuxB,WACDna,EAAStX,UAAW,yBAAsB,IAC7CE,IACIuxB,WACDna,EAAStX,UAAW,+BAA4B,IACnDE,IACIuxB,WACDna,EAAStX,UAAW,wBAAqB,IAC5CE,IACIuxB,WACDna,EAAStX,UAAW,0BAAuB,IAC9CE,IACIuxB,WACDna,EAAStX,UAAW,sBAAmB,IAC1CE,IACIuxB,WACDna,EAAStX,UAAW,wBAAqB,IAC5CsX,EAAWK,EAAazX,IACpBwxB,yBACDpa,IAELqa,aC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"}