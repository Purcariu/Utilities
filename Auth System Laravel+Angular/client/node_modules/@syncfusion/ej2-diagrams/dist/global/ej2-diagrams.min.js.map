{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/tooltip.js","../../src/diagram/objects/connector.js","../../src/diagram/ruler/ruler.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/utility/swim-lane-util.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/core/appearance.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/diagram/objects/preview.js","../../src/ruler/ruler.js","../../src/diagram/interaction/selector.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/core/containers/grid.js","../../src/diagram/objects/icon.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/diagram/layoutinfo.js","../../src/diagram/objects/node.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-mapping.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/utility/diff-map.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/serialization-settings.js","../../src/diagram/diagram/custom-cursor.js","../../src/diagram/diagram-settings.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/interaction/line-routing.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js","../../src/global.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param {IconShapeModel} icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                if (point) {\n                    checkPreviousSegment(point, element, source);\n                    seg_1.points = [];\n                    if (point.length >= 2) {\n                        for (j = 0; j < point.length; j++) {\n                            seg_1.points.push(point[j]);\n                        }\n                    }\n                    else {\n                        removeSegment = i;\n                    }\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if ((ele.sourcePadding || ele.targetPadding)) {\n        rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param {Diagram} diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param {Diagram} diagram\n * @param {NodeModel | ConnectorModel} node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory, isBlazor } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement, setConnectorDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { DiagramAction } from '../enum/enum';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getTemplateContent } from '../utility/dom-util';\nimport { SymbolSize } from './preview';\nvar getConnectorType = function (obj) {\n    if (isBlazor()) {\n        return DiagramConnectorShape;\n    }\n    else {\n        if (obj) {\n            switch (obj.type) {\n                case 'Bpmn':\n                    return BpmnFlow;\n                case 'UmlActivity':\n                    return ActivityFlow;\n                case 'UmlClassifier':\n                    return RelationShip;\n                default:\n                    return ConnectorShape;\n            }\n        }\n        return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramConnectorSegment;\n        }\n        else {\n            switch (obj.type) {\n                case 'Straight':\n                    return StraightSegment;\n                case 'Bezier':\n                    return BezierSegment;\n                case 'Orthogonal':\n                    return OrthogonalSegment;\n                default:\n                    return StraightSegment;\n            }\n        }\n    }\n    return undefined;\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar DiagramConnectorSegment = /** @class */ (function (_super) {\n    __extends(DiagramConnectorSegment, _super);\n    function DiagramConnectorSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    DiagramConnectorSegment.prototype.getClassName = function () {\n        return 'DiagramConnectorSegment';\n    };\n    __decorate([\n        Property('Straight')\n    ], DiagramConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramConnectorSegment.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], DiagramConnectorSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], DiagramConnectorSegment.prototype, \"vector2\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramConnectorSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramConnectorSegment.prototype, \"direction\", void 0);\n    return DiagramConnectorSegment;\n}(ChildProperty));\nexport { DiagramConnectorSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connector shape for blazor\n */\nvar DiagramConnectorShape = /** @class */ (function (_super) {\n    __extends(DiagramConnectorShape, _super);\n    function DiagramConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], DiagramConnectorShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Directional')\n    ], DiagramConnectorShape.prototype, \"associationType\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], DiagramConnectorShape.prototype, \"relationship\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], DiagramConnectorShape.prototype, \"multiplicity\", void 0);\n    __decorate([\n        Property('Sequence')\n    ], DiagramConnectorShape.prototype, \"bpmnFlow\", void 0);\n    __decorate([\n        Property('Default')\n    ], DiagramConnectorShape.prototype, \"message\", void 0);\n    __decorate([\n        Property('Normal')\n    ], DiagramConnectorShape.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], DiagramConnectorShape.prototype, \"association\", void 0);\n    __decorate([\n        Property('Object')\n    ], DiagramConnectorShape.prototype, \"umlActivityFlow\", void 0);\n    __decorate([\n        Property(30)\n    ], DiagramConnectorShape.prototype, \"exceptionFlowHeight\", void 0);\n    return DiagramConnectorShape;\n}(ChildProperty));\nexport { DiagramConnectorShape };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (defaultValue && defaultValue.shape && defaultValue.shape.type !== 'None') {\n            setConnectorDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                var flow = (isBlazor() ? this.shape.bpmnFlow : this.shape.flow);\n                switch (flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                var activityFlow = (isBlazor() ? this.shape.umlActivityFlow :\n                    this.shape.flow);\n                switch (activityFlow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id, diagram.annotationTemplate));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Arrow';\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId, annotationTemplate) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (isBlazor() && annotation.annotationType === 'Template') {\n            annotation.template = annotation.template ? annotation.template : '';\n        }\n        if (diagramId && (annotation.template || annotation.annotationType === 'Template'\n            || (annotationTemplate && annotation.content === ''))) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id, annotationTemplate);\n            textele = getTemplateContent(textele, annotation, annotationTemplate);\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource, diagramAction) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n            if (diagramAction && ((diagramAction) & DiagramAction.DecoratorPropertyChange)) {\n                strokeWidth = 1;\n            }\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (diagramAction & DiagramAction.DecoratorPropertyChange) ? 0 : (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts, diagramAction) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true, diagramAction);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false, diagramAction);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element, diagramActions) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points, diagramActions);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation, diagramActions) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement, diagramActions);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points, diagramAction) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts, diagramAction);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts, diagramAction);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message' ||\n                    (isBlazor() && connector.shape.bpmnFlow === 'Message')) {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception' || (isBlazor() &&\n                    connector.shape.umlActivityFlow === 'Exception')) {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"connectionPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Connector.prototype, \"previewSize\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Connector.prototype, \"dragSize\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../objects/node';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { isBlazor } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { Diagram } from '../diagram';\nimport { Selector } from '../objects/node';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset, canLaneInterchange } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints, NodeConstraints } from '../enum/enum';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        var isProtectedOnChange = 'isProtectedOnChange';\n        var propertyChangeValue = diagram[isProtectedOnChange];\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                if (!(obj.constraints & NodeConstraints.AllowMovingOutsideLane)) {\n                    var undoObj = cloneObject(obj);\n                    diagram.clearSelection();\n                    removeChildrenInLane(diagram, obj);\n                    obj.parentId = '';\n                    var entry = {\n                        type: 'ChildCollectionChanged', category: 'Internal',\n                        undoObject: undoObj, redoObject: cloneObject(obj)\n                    };\n                    diagram.addHistoryEntry(entry);\n                    if (diagram.commandHandler.isContainer) {\n                        diagram.commandHandler.isContainer = false;\n                        diagram.endGroupAction();\n                    }\n                    moveSwinLaneChild(obj, diagram);\n                }\n            }\n        }\n        diagram.protectPropertyChange(propertyChangeValue);\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    diagram.enableServerDataBinding(false);\n    var object;\n    var container;\n    var nodes;\n    if ((!isBlazor()) || (isBlazor() && (diagram.diagramActions & DiagramAction.ToolAction))) {\n        if (diagram.selectedObject.helperObject) {\n            nodes = diagram.selectedObject.helperObject;\n        }\n        else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n            if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n                object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n                container = diagram.selectedItems.wrapper.children[0];\n            }\n            else {\n                object = obj;\n                if (isBlazor()) {\n                    if (obj === diagram.selectedItems.nodes[0]) {\n                        container = diagram.selectedItems.wrapper;\n                    }\n                    else {\n                        container = obj.wrapper;\n                    }\n                }\n                else {\n                    container = diagram.selectedItems.wrapper;\n                }\n            }\n            diagram.selectedObject.actualObject = object;\n            if ((!diagram.currentSymbol) && (((object.isLane && canLaneInterchange(object, diagram) &&\n                checkParentAsContainer(diagram, object))\n                || ((!object.isLane) && checkParentAsContainer(diagram, object))) ||\n                ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.nodes.length > 0))) {\n                var node = {\n                    id: 'helper',\n                    rotateAngle: container.rotateAngle,\n                    offsetX: container.offsetX, offsetY: container.offsetY,\n                    minWidth: container.minWidth, minHeight: container.minHeight,\n                    maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                    width: container.actualSize.width,\n                    height: container.actualSize.height,\n                    style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n                };\n                nodes = createHelper(diagram, node);\n                diagram.selectedObject.helperObject = nodes;\n            }\n        }\n    }\n    diagram.enableServerDataBinding(true);\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        // tslint:disable-next-line:no-any\n                        if (!(node.parentObj instanceof Diagram)) {\n                            // tslint:disable-next-line:no-any\n                            node.parentObj = lanes[i];\n                        }\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            moveSwinLaneChild(node, diagram);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction moveSwinLaneChild(node, diagram) {\n    var sourceNode = getDiagramElement(node.id + '_groupElement', diagram.element.id);\n    var targetId = (node.parentId) ? node.parentId + '_groupElement' : diagram.element.id + '_diagramLayer';\n    var targetNode = getDiagramElement(targetId, diagram.element.id);\n    if (sourceNode && targetNode) {\n        targetNode.appendChild(sourceNode);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    diagram.updateDiagramElementQuad();\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' &&\n        sourceParent.container && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints, DiagramConstraints, DiagramEvent } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds, removeChildInContainer } from '../interaction/container-interaction';\nimport { canSelect } from './constraints-util';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    if (!node.width && node.shape.phases.length === 0) {\n        node.width = 100;\n    }\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    shape.header.id = shape.header.id || randomId();\n    var node = {\n        id: object.id + shape.header.id,\n        annotations: [cloneObject(shape.header.annotation)],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    if (!canSelect(object)) {\n        node.constraints &= ~NodeConstraints.Select;\n    }\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [cloneObject(shape.phases[phaseIndex].header.annotation)],\n        maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    phaseObject.annotations[0].rotateAngle = orientation ? 0 : 270;\n    if (!canSelect(object)) {\n        phaseObject.constraints &= ~NodeConstraints.Select;\n    }\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        if (!canSelect(object)) {\n            canvas.constraints &= ~NodeConstraints.Select;\n        }\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [cloneObject(shape.lanes[laneIndex].header.annotation)],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            laneNode.annotations[0].rotateAngle = orientation ? 270 : 0;\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            if (!canSelect(object)) {\n                laneNode.constraints &= ~NodeConstraints.Select;\n            }\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n        if ((shape.phases.length === 0 && shape.lanes.length === 0)) {\n            cols = createColumn(object.width);\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n            diagram.lineRoutingModule.renderVirtualRegion(diagram, true);\n        }\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting) && edges.type === 'Orthogonal') {\n                diagram.lineRoutingModule.refreshConnectorSegments(diagram, edges, true);\n            }\n            else {\n                diagram.connectorPropertyChange(edges, {}, {\n                    sourceID: edges.sourceID, targetID: edges.targetID\n                });\n            }\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (lanes[sourceLaneIndex].canMove) {\n                if (sourceLaneIndex < targetLaneIndex) {\n                    if (position && target.wrapper.offsetY > position.y) {\n                        targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                        targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    }\n                }\n                else {\n                    if (position && target.wrapper.offsetY < position.y) {\n                        targetIndex += 1;\n                        targetLaneIndex += 1;\n                    }\n                }\n                if (sourceIndex !== targetIndex) {\n                    grid.updateRowIndex(sourceIndex, targetIndex);\n                }\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (lanes[sourceLaneIndex].canMove) {\n                if (sourceLaneIndex < targetLaneIndex) {\n                    if (position && target.wrapper.offsetX > position.x) {\n                        targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                        targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    }\n                }\n                else {\n                    if (position && target.wrapper.offsetX < position.x) {\n                        targetIndex += 1;\n                        targetLaneIndex += 1;\n                    }\n                }\n                if (sourceIndex !== targetIndex) {\n                    if ((shape.phaseSize === 0 || shape.phases.length === 0) && (targetIndex === 0 || sourceIndex === 0)) {\n                        if (shape.header && shape.hasHeader) {\n                            var changeHeaderIndex = (targetIndex === 0) ? sourceIndex : targetIndex;\n                            grid.rows[0].cells[changeHeaderIndex].children = grid.rows[0].cells[0].children;\n                            grid.rows[0].cells[changeHeaderIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                            grid.rows[0].cells[0].children = [];\n                        }\n                    }\n                    grid.updateColumnIndex(0, sourceIndex, targetIndex);\n                }\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            temp = lanes[sourceLaneIndex];\n            if (temp.canMove) {\n                undoElement = {\n                    target: cloneObject(target), source: cloneObject(obj)\n                };\n                temp = lanes[sourceLaneIndex];\n                lanes.splice(sourceLaneIndex, 1);\n                lanes.splice(targetLaneIndex, 0, temp);\n                redoElement = {\n                    target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n                };\n                entry = {\n                    type: 'LanePositionChanged', redoObject: redoElement,\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    diagram.commandHandler.addHistoryEntry(entry);\n                }\n                ChangeLaneIndex(diagram, swimLane, 0);\n                updateConnectorsProperties(connectors, diagram);\n                updateSwimLaneChildPosition(lanes, diagram);\n                swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n                swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n    diagram.updateDiagramElementQuad();\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var args;\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        args = {\n            element: laneObj, cause: diagram.diagramActions, state: 'Changing', type: 'Addition', cancel: false, laneIndex: laneIndex\n        };\n        diagram.triggerEvent(DiagramEvent.collectionChange, args);\n        if (!args.cancel) {\n            if (orientation_1) {\n                var rowDef = new RowDefinition();\n                rowDef.height = lane.height;\n                grid.addRow(index, rowDef, false);\n                swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n                swimLane.wrapper.height = grid.height = swimLane.height;\n            }\n            else {\n                var colDef = new ColumnDefinition();\n                colDef.width = lane.width;\n                grid.addColumn(laneIndex + 1, colDef, false);\n                if (swimLane.width) {\n                    swimLane.width += lane.width;\n                    swimLane.wrapper.width = grid.width = swimLane.width;\n                }\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    grid.rows[0].cells[0].columnSpan += 1;\n                }\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                laneObj.id += randomId();\n            }\n            if (count !== undefined) {\n                shape.lanes.splice(count, 0, laneObj);\n            }\n            else {\n                shape.lanes.push(laneObj);\n            }\n            args = {\n                element: laneObj, cause: diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n            redoObj = (shape.orientation === 'Horizontal') ?\n                diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n                ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                    diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                entry = {\n                    type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                    redoObject: cloneObject(redoObj), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            var startRowIndex = (shape.orientation === 'Horizontal') ?\n                index : ((shape.header && shape.hasHeader) ? 1 : 0);\n            ChangeLaneIndex(diagram, swimLane, startRowIndex);\n            swimLaneMeasureAndArrange(swimLane);\n            updateHeaderMaxWidth(diagram, swimLane);\n            children = lane.children;\n            if (children && children.length > 0) {\n                for (j = 0; j < children.length; j++) {\n                    child = children[j];\n                    point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                    if (shape.orientation === 'Horizontal') {\n                        cell = grid.rows[index].cells[i];\n                        for (i = 0; i < grid.rows[index].cells.length; i++) {\n                            addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                        }\n                    }\n                    else {\n                        for (k = 0; k < grid.rows.length; k++) {\n                            cell = grid.rows[k].cells[index];\n                            addChildNodeToNewLane(diagram, cell, point, child);\n                        }\n                    }\n                }\n            }\n            updateConnectorsProperties(connectors, diagram);\n            diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode, laneIndex) {\n    laneIndex = (laneIndex !== undefined) ? laneIndex : findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                if ((removeNode.constraints & NodeConstraints.Delete)) {\n                                    diagram.remove(removeNode);\n                                }\n                                else {\n                                    removeChildInContainer(diagram, removeNode, {}, false);\n                                }\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane, lanes) {\n    var args;\n    if (swimLane.shape.type === 'SwimLane') {\n        var shape = swimLane.shape;\n        var laneIndex = void 0;\n        if (shape.lanes.length === 1) {\n            diagram.remove(swimLane);\n        }\n        else {\n            var x = swimLane.wrapper.bounds.x;\n            var y = swimLane.wrapper.bounds.y;\n            var row = void 0;\n            var i = void 0;\n            var cell = void 0;\n            var j = void 0;\n            var child = void 0;\n            var grid = swimLane.wrapper.children[0];\n            laneIndex = (lanes) ? (shape.lanes.indexOf(lanes)) : findLaneIndex(swimLane, lane);\n            args = {\n                element: lane, cause: diagram.diagramActions, state: 'Changing', type: 'Removal', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            if (!args.cancel) {\n                var undoObj = cloneObject(shape.lanes[laneIndex]);\n                removeLaneChildNode(diagram, swimLane, lane, undefined, laneIndex);\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    var entry = {\n                        type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                        redoObject: cloneObject(lane), category: 'Internal'\n                    };\n                    diagram.addHistoryEntry(entry);\n                }\n                shape.lanes.splice(laneIndex, 1);\n                var index = (lane) ? (shape.orientation === 'Horizontal' ? lane.rowIndex : lane.columnIndex) :\n                    (findStartLaneIndex(swimLane) + laneIndex);\n                if (shape.orientation === 'Horizontal') {\n                    row = grid.rows[index];\n                    for (i = 0; i < row.cells.length; i++) {\n                        cell = row.cells[i];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeRow(index);\n                }\n                else {\n                    swimLane.width = (swimLane.width !== undefined) ?\n                        swimLane.width - grid.rows[0].cells[index].actualSize.width : swimLane.width;\n                    for (i = 0; i < grid.rows.length; i++) {\n                        cell = grid.rows[i].cells[index];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeColumn(index);\n                }\n                args = {\n                    element: lane, cause: diagram.diagramActions, state: 'Changed', type: 'Removal', cancel: false, laneIndex: laneIndex\n                };\n                diagram.triggerEvent(DiagramEvent.collectionChange, args);\n                swimLane.width = swimLane.wrapper.width = grid.width;\n                swimLane.height = swimLane.wrapper.height = grid.height;\n                swimLaneMeasureAndArrange(swimLane);\n                if (swimLane.shape.orientation === 'Vertical') {\n                    index = 0;\n                }\n                ChangeLaneIndex(diagram, swimLane, index);\n                diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane, swimLanePhases) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = swimLanePhases ? shape.phases.indexOf(swimLanePhases) : findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase, phaseIndex);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase, phaseIndex) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    phaseIndex = (phaseIndex !== undefined) ? phaseIndex : phase.columnIndex;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phaseIndex];\n            prevCell = (row.cells.length - 1 === phaseIndex) ? row.cells[phaseIndex - 1] :\n                row.cells[phaseIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phaseIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phaseIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    var prevWidth = grid.columnDefinitions()[phaseIndex].width;\n    grid.removeColumn(phaseIndex);\n    if ((phaseIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phaseIndex].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phaseIndex - 1].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var phaseRowIndex = (phaseIndex !== undefined) ? ((shape.header) ? phaseIndex + 1 : phaseIndex) : phase.rowIndex;\n    row = grid.rows[phaseRowIndex];\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phaseRowIndex - 1] : grid.rows[phaseRowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    var prevHeight = grid.rowDefinitions()[phaseRowIndex].height;\n    grid.removeRow(phaseRowIndex);\n    if ((phaseRowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phaseRowIndex].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phaseRowIndex - 1].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\nexport function findLane(laneNode, diagram) {\n    var lane;\n    if (laneNode.isLane) {\n        var swimLane = diagram.getObject(laneNode.parentId);\n        if (swimLane && swimLane.shape.type === 'SwimLane' && laneNode.isLane) {\n            var laneIndex = findLaneIndex(swimLane, laneNode);\n            lane = swimLane.shape.lanes[laneIndex];\n        }\n    }\n    return lane;\n}\nexport function canLaneInterchange(laneNode, diagram) {\n    if (laneNode.isLane) {\n        var lane = findLane(laneNode, diagram);\n        if (lane.canMove) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function updateSwimLaneChildPosition(lanes, diagram) {\n    var lane;\n    var node;\n    for (var i = 0; i < lanes.length; i++) {\n        lane = lanes[i];\n        for (var j = 0; j < lane.children.length; j++) {\n            node = diagram.nameTable[lane.children[j].id];\n            node.offsetX = node.wrapper.offsetX;\n            node.offsetY = node.wrapper.offsetY;\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\nimport { isBlazor, Browser } from '@syncfusion/ej2-base';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function getSpaceValue(intervals, isLine, i, space) {\n    space = !isLine ? ((intervals[i - 1] !== undefined) ? intervals[i - 1] + space : 0) : space;\n    return space;\n}\n/**\n * @private\n */\nexport function getInterval(intervals, isLine) {\n    var newInterval = [];\n    if (!isLine) {\n        for (var k = 0; k < intervals.length; k++) {\n            newInterval.push(intervals[k]);\n        }\n        newInterval.push(intervals[newInterval.length - 2]);\n        newInterval.push(intervals[newInterval.length - 2]);\n    }\n    else {\n        newInterval = intervals;\n    }\n    return newInterval;\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        var shape = (isBlazor() ? child.shape.umlActivityShape :\n            child.shape.shape);\n        switch (shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        var flow = (isBlazor() ?\n            child.shape.umlActivityFlow : child.shape.flow);\n        switch (flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/* tslint:disable */\n/**\n * @private\n */\nexport function setConnectorDefaults(child, node) {\n    switch ((child.shape).type) {\n        case 'Bpmn':\n            var bpmnFlow = (isBlazor() ? child.shape.bpmnFlow : child.shape.flow);\n            switch (bpmnFlow) {\n                case 'Sequence':\n                    if ((((child.shape.sequence) === 'Normal' && child.type !== 'Bezier')) ||\n                        ((child.shape.sequence) === 'Default') || ((child.shape.sequence) === 'Conditional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style\n                                && child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.sequence) === 'Conditional' && node.sourceDecorator) {\n                            if (node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                            }\n                            node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 20;\n                            node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.width) || 10;\n                        }\n                    }\n                    break;\n                case 'Association':\n                    if (((child.shape.association) === 'Default') ||\n                        ((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                                child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.association) === 'BiDirectional') {\n                            if (node.sourceDecorator && node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                                node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 5;\n                                node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.height) || 10;\n                            }\n                        }\n                    }\n                    break;\n                case 'Message':\n                    if (node.style && !node.style.strokeDashArray) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlActivity':\n            var flow = (isBlazor() ?\n                child.shape.umlActivityFlow : child.shape.flow);\n            switch (flow) {\n                case 'Exception':\n                    if (((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '2 2';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlClassifier':\n            var hasRelation = false;\n            if (child.shape.relationship === 'Association') {\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Inheritance') {\n                if (node.targetDecorator && node.targetDecorator.style) {\n                    node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                        child.targetDecorator.style.fill) || 'white';\n                }\n                if (node.style) {\n                    hasRelation = true;\n                    node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                }\n            }\n            else if (child.shape.relationship === 'Composition') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'black';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Aggregation' ||\n                child.shape.relationship === undefined) {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Dependency') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n                node.style.strokeDashArray = '4 4';\n            }\n            else if (child.shape.relationship === 'Realization') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            if (hasRelation) {\n                node.style.strokeWidth = (child.style && child.style.strokeWidth) || 2;\n            }\n            break;\n    }\n}\n/* tslint:enable */\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function updateDefaultValues(actualNode, plainValue, defaultValue, property, oldKey) {\n    if (defaultValue && ((actualNode instanceof Connector) || actualNode\n        && ((actualNode.shape && actualNode.shape.type !== 'SwimLane') || actualNode.shape === undefined))) {\n        var keyObj = void 0;\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'shape' && keyObj.type) {\n                actualNode.shape = { type: keyObj.type };\n            }\n            if (keyObj) {\n                if (Array.isArray(keyObj) && keyObj.length && keyObj.length > 0 && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    if (actualNode[key].length > 0) {\n                        for (var i = 0; i <= actualNode[key].length; i++) {\n                            updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                        }\n                    }\n                    else {\n                        updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                    }\n                }\n                else if (keyObj instanceof Object && plainValue && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                }\n                else if ((oldKey !== 'annotations' && oldKey !== 'ports')\n                    && (plainValue && !plainValue[key]) || (!plainValue && actualNode\n                    && (actualNode[key] || actualNode[key] !== undefined))) {\n                    actualNode[key] = defaultValue[key];\n                }\n                else {\n                    var createObject = void 0;\n                    if (oldKey === 'annotations' || oldKey === 'ports') {\n                        if (oldKey === 'annotations') {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            if (!actualNode[key]) {\n                                if (getObjectType(property) === Connector) {\n                                    createObject = new PathAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                                else {\n                                    createObject = new ShapeAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                            }\n                        }\n                        else {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            else {\n                                createObject = new PointPort(property, 'ports', defaultValue[key]);\n                                property.ports.push(createObject);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable:no-string-literal */\n/** @private */\nexport function updateLayoutValue(actualNode, defaultValue, nodes, node) {\n    var keyObj;\n    if (defaultValue) {\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'getAssistantDetails') {\n                if (node.data['Role'] === defaultValue[key]['root']) {\n                    var assitants = defaultValue[key]['assistants'];\n                    for (var i = 0; i < assitants.length; i++) {\n                        for (var j = 0; j < nodes.length; j++) {\n                            if (nodes[j].data['Role'] === assitants[i]) {\n                                actualNode.assistants.push(nodes[j].id);\n                                actualNode.children.splice(0, 1);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (keyObj) {\n                actualNode[key] = defaultValue[key];\n            }\n        }\n    }\n    if (!actualNode.hasSubTree && defaultValue.canEnableSubTree) {\n        actualNode.orientation = node.layoutInfo.orientation;\n        actualNode.type = node.layoutInfo.type;\n        if (node.layoutInfo.offset !== actualNode.offset && (node.layoutInfo.offset) !== undefined) {\n            actualNode.offset = node.layoutInfo.offset;\n        }\n    }\n    node.layoutInfo.hasSubTree = actualNode.hasSubTree;\n}\n/* tslint:enable:no-string-literal */\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param {Diagram} diagram\n * @param {PointModel} mousePosition\n * @param {NodeModel | ConnectorModel} node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if ((clonedObject[property] instanceof Object) && defaultObject && defaultObject[property]) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.enableServerDataBinding(false);\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    diagram.enableServerDataBinding(true);\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1)) && dataObj.nodes) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                if (style.gradient) {\n                    updateGradient(changedObject.gradient, style.gradient);\n                    break;\n                }\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = ((isBlazor() ? actualObject.shape.basicShape === 'Rectangle' :\n                actualObject.shape.shape === 'Rectangle')) ? new DiagramElement() : new PathElement();\n            if ((!isBlazor() && actualObject.shape.shape === 'Polygon') ||\n                (isBlazor() && actualObject.shape.basicShape === 'Polygon')) {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape((isBlazor() ? actualObject.shape.basicShape :\n                    actualObject.shape.shape));\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if ((!isBlazor() && actualObject.shape.shape === 'Rectangle') ||\n                (isBlazor() && actualObject.shape.basicShape === 'Rectangle')) {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            var shape = (isBlazor()) ? actualObject.shape.flowShape : actualObject.shape.shape;\n            flowShapeElement.data = getFlowShape(shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(actualObject.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && ((isBlazor() && newValues.shape.flowShape !== undefined) ||\n            newValues.shape.shape !== undefined)) {\n            actualObject.shape.shape = isBlazor() ? newValues.shape.flowShape :\n                newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' &&\n            ((isBlazor() && newValues.shape.umlActivityShape !== undefined) ||\n                (!isBlazor() && newValues.shape.shape !== undefined))) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (((isBlazor() && newValues.shape.basicShape !== undefined) ||\n            newValues.shape.shape !== undefined)) {\n            actualObject.shape.shape = isBlazor() ? newValues.shape.basicShape :\n                newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    if (!isBlazor()) {\n        actualObject.shape.shape = newValues.shape.shape;\n    }\n    else {\n        actualObject.shape.umlActivityShape = newValues.shape.umlActivityShape;\n    }\n    var shapes = !isBlazor() ? actualObject.shape.shape :\n        actualObject.shape.umlActivityShape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if ((isBlazor() && actualObject.shape.umlActivityShape === 'InitialNode') ||\n        (!isBlazor() && actualObject.shape.shape === 'InitialNode')) {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if ((!isBlazor() && (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode')) ||\n        ((isBlazor() && (actualObject.shape.umlActivityShape === 'ForkNode' ||\n            actualObject.shape.umlActivityShape === 'JoinNode')))) {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if ((!isBlazor() && actualObject.shape.shape === 'FinalNode') ||\n        (isBlazor() && actualObject.shape.umlActivityShape === 'FinalNode')) {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var shape = (isBlazor() ? node.shape.umlActivityShape : node.shape.shape);\n    var umlActivityShapeData = getUMLActivityShape(shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points, diagramActions) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0], diagramActions);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points, diagramActions);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    if (node) {\n        node = node;\n        for (var i = 0; i < node.ports.length; i++) {\n            if (id === node.ports[i].id) {\n                return node.ports[i];\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getCollectionChangeEventArguements(args1, obj, state, type) {\n    if (isBlazor()) {\n        args1 = {\n            cause: args1.cause, state: state, type: type, cancel: false,\n            element: getObjectType(obj) === Connector ?\n                { connector: cloneBlazorObject(obj) } : { node: cloneBlazorObject(obj) }\n        };\n    }\n    return args1;\n}\n/** @private */\nexport function getDropEventArguements(args, arg) {\n    if (isBlazor()) {\n        var connector = (getObjectType(args.source) === Connector);\n        var object = cloneBlazorObject(args.source);\n        var target = cloneBlazorObject(args.target);\n        arg = {\n            element: connector ? { connector: object } : { node: object },\n            target: connector ? { connector: target } : { node: target },\n            position: arg.position, cancel: arg.cancel\n        };\n    }\n    return arg;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param {Object} obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var cloneSelectedObjects = function (diagram) {\n    var nodes = diagram.selectedItems.nodes;\n    var connectors = diagram.selectedItems.connectors;\n    diagram.protectPropertyChange(true);\n    var isEnableServerDatabind = diagram.allowServerDataBinding;\n    diagram.allowServerDataBinding = false;\n    diagram.selectedItems.nodes = [];\n    diagram.selectedItems.connectors = [];\n    diagram.allowServerDataBinding = isEnableServerDatabind;\n    diagram.protectPropertyChange(false);\n    var clonedSelectedItems = cloneObject(diagram.selectedItems);\n    for (var i = 0; i < nodes.length; i++) {\n        diagram.selectedItems.nodes.push(diagram.nameTable[nodes[i].id]);\n    }\n    for (var i = 0; i < connectors.length; i++) {\n        diagram.selectedItems.connectors.push(diagram.nameTable[connectors[i].id]);\n    }\n    return clonedSelectedItems;\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var checkPort = function (node, element) {\n    for (var i = 0; i < node.ports.length; i++) {\n        if (node.ports[i].id === element.id.split('_')[1]) {\n            return true;\n        }\n    }\n    return false;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n/** @private */\nexport function cloneBlazorObject(args) {\n    if (isBlazor()) {\n        args = cloneObject(args);\n    }\n    return args;\n}\n/** @private */\nexport function checkBrowserInfo() {\n    if ((navigator.platform.indexOf('Mac') >= 0 || navigator.platform.indexOf('iPad') >= 0\n        || navigator.platform.indexOf('iPhone') >= 0 || navigator.platform.indexOf('MacIntel') >= 0)\n        && (Browser.info.name === 'safari' || Browser.info.name === 'webkit')) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canMeasureDecoratorPath(objects) {\n    if (objects.indexOf('shape') !== -1 || objects.indexOf('pathData') !== -1 ||\n        objects.indexOf('width') !== -1 || objects.indexOf('height') !== -1) {\n        return true;\n    }\n    return false;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: node.style.strokeColor,\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: (node.style.strokeColor === 'black') ? '#ffffff00' : node.style.strokeColor }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: {\n                            fill: node.style.fill, strokeColor: (node.style.strokeColor === 'black') ?\n                                '#ffffff00' : node.style.strokeColor, textWrapping: textWrap\n                        },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill,\n                            strokeColor: (node.style.strokeColor === 'black') ? '#ffffff00' : node.style.strokeColor },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: {\n                        fill: node.style.fill, strokeColor: (node.style.strokeColor === 'black') ?\n                            '#ffffff00' : node.style.strokeColor\n                    }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n        style: { strokeColor: (stack.style.strokeColor === 'black') ? '#ffffff00' : stack.style.strokeColor }\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText, cloneObject } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser, isBlazor } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement, cloneBlazorObject } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className, id) {\n    var elements;\n    if (id) {\n        elements = document.getElementById(id).getElementsByClassName(className);\n    }\n    else {\n        elements = document.getElementsByClassName(className);\n    }\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bBoxText(txtValue, text) };\n                        txtValue = '';\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + ' ' + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize, id, callback) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    var element = document.createElement('img');\n    element.setAttribute('src', source);\n    setAttributeHtml(element, { id: id + 'sf-imageNode', style: 'display: none;' });\n    document.body.appendChild(element);\n    // tslint:disable-next-line:no-any\n    element.onload = function (event) {\n        var loadedImage = event.currentTarget;\n        if (callback) {\n            callback(id, { width: loadedImage.width, height: loadedImage.height });\n        }\n    };\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    }\n    else {\n        diagramElement = (element) ? element.querySelector('#' + CSS.escape(elementId)) : document.getElementById(elementId);\n    }\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var domTable = 'domTable';\n    var expandCollapse = null;\n    if (!window[domTable][diagramId + '_gridline']) {\n        var diagramGridSvg = getGridLayerSvg(diagramId);\n        expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n        window[domTable][diagramId + '_gridline'] = expandCollapse;\n    }\n    else {\n        expandCollapse = window[domTable][diagramId + '_gridline'];\n    }\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var domTable = 'domTable';\n    if (!window[domTable][diagramId + 'html_layer']) {\n        var element = getDiagramElement(diagramId);\n        var elementcoll = void 0;\n        elementcoll = element.getElementsByClassName('e-html-layer');\n        htmlLayer = elementcoll[0];\n        window[domTable][diagramId + 'html_layer'] = htmlLayer;\n    }\n    else {\n        htmlLayer = window[domTable][diagramId + 'html_layer'];\n    }\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param {string} elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml, nodeObject) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    var isSvg = false;\n    if (node instanceof Node) {\n        sentNode = node;\n        if (node.shape.type === 'Native') {\n            isSvg = true;\n        }\n        var blazor = 'Blazor';\n        if (isBlazor()) {\n            content = 'diagramsf_node_template';\n            sentNode = cloneBlazorObject(node);\n        }\n    }\n    else {\n        sentNode = node;\n        //new\n        if (isBlazor()) {\n            sentNode = cloneBlazorObject(node);\n            content = 'diagramsf_annotation_template';\n        }\n    }\n    var item;\n    if (typeof element.content === 'string' && (!element.isTemplate || isBlazor())) {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n            //new\n            // for (item of compiledString(sentNode, null, null, content, undefined, undefined, isSvg)) {\n            //     div.appendChild(item);\n            // }\n        }\n    }\n    else if (element.isTemplate) {\n        var compiledString = void 0;\n        compiledString = element.getNodeTemplate()(cloneObject(nodeObject), undefined, 'template', undefined, undefined, false);\n        for (var i = 0; i < compiledString.length; i++) {\n            div.appendChild(compiledString[i]);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return element.isTemplate ?\n        div : (isHtml ? div.cloneNode(true) : div.cloneNode(true));\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        if (keys[i] !== 'style') {\n            svg.setAttribute(keys[i], attributes[keys[i]]);\n        }\n        else {\n            applyStyleAgainstCsp(svg, attributes[keys[i]]);\n        }\n    }\n}\n/** @private */\nexport function applyStyleAgainstCsp(svg, attributes) {\n    var keys = attributes.split(';');\n    for (var i = 0; i < keys.length; i++) {\n        var attribute = keys[i].split(':');\n        if (attribute.length === 2) {\n            svg.style[attribute[0].trim()] = attribute[1].trim();\n        }\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        if (keys[i] !== 'style') {\n            element.setAttribute(keys[i], attributes[keys[i]]);\n        }\n        else {\n            applyStyleAgainstCsp(element, attributes[keys[i]]);\n        }\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n        var measureElementCount = 'measureElementCount';\n        if (!window[measureElementCount]) {\n            window[measureElementCount] = 1;\n        }\n        else {\n            window[measureElementCount]++;\n        }\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        (options.textWrapping === 'Wrap' || options.textWrapping === 'WrapWithOverflow')) {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n/** @private */\nexport function getTemplateContent(annotationcontent, annotation, annotationTemplate) {\n    if (annotationTemplate && !annotation.template) {\n        annotationcontent.isTemplate = true;\n        annotationcontent.template = annotationcontent.content = getContent(annotationcontent, true, annotation);\n    }\n    else {\n        annotationcontent.content = annotation.template;\n    }\n    return annotationcontent;\n}\n","import { compile as baseTemplateComplier } from '@syncfusion/ej2-base';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode, applyStyleAgainstCsp } from './dom-util';\nimport { Node, BasicShape, Shape, Native, BpmnShape, BpmnActivity, BpmnTask, BpmnSubProcess } from '../objects/node';\nimport { IconShape } from '../objects/icon';\nimport { TextStyle, ShapeStyle, Margin } from '../core/appearance';\nimport { Port } from '../objects/port';\nimport { Annotation } from '../objects/annotation';\nimport { Connector, Decorator } from '../objects/connector';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\nexport function getIndex(comp, id) {\n    if (comp.nodes && comp.nodes.length > 0) {\n        for (var i = 0; i < comp.nodes.length; i++) {\n            if (comp.nodes[i].id === id) {\n                return i;\n            }\n        }\n    }\n    if (comp.connectors && comp.connectors.length > 0) {\n        for (var i = 0; i < comp.connectors.length; i++) {\n            if (comp.connectors[i].id === id) {\n                return i;\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function templateCompiler(template) {\n    if (template) {\n        var e = void 0;\n        try {\n            if (document.querySelectorAll(template).length) {\n                return baseTemplateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n        catch (e) {\n            return baseTemplateComplier(template);\n        }\n    }\n    return undefined;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\nfunction updateCloneProp(properties, obj) {\n    var prop = [];\n    if (obj instanceof Node) {\n        prop = ['width', 'height', 'offsetX', 'offsetY', 'container', 'visible', 'horizontalAlignment', 'verticalAlignment',\n            'backgroundColor', 'borderColor', 'borderWidth', 'rotateAngle', 'minHeight', 'minWidth', 'maxHeight',\n            'maxWidth', 'pivot', 'margin', 'flip', 'wrapper', 'constraints', 'style', 'annotations', 'ports', 'isExpanded', 'expandIcon'];\n    }\n    else if (obj instanceof Connector) {\n        prop = ['constraints', 'sourcePadding', 'targetPadding', 'cornerRadius', 'flip', 'type', 'targetDecorator', 'sourceDecorator',\n            'sourceID', 'shape', 'bridgeSpace', 'annotations', 'segments', 'hitPadding', 'tooltip', 'previewSize', 'dragSize', 'style',\n            'sourcePortID', 'targetID', 'targetPortID', 'visible'];\n    }\n    else if (obj instanceof Decorator) {\n        prop = ['height', 'width', 'shape', 'style', 'pivot', 'pathData'];\n    }\n    else if (obj instanceof Shape || obj instanceof IconShape) {\n        prop.push('shape');\n        if (obj instanceof BasicShape) {\n            prop.push('cornerRadius');\n        }\n        else if (obj instanceof Text) {\n            prop.push('margin');\n        }\n        else if (obj instanceof Image) {\n            prop.push('align');\n            prop.push('scale');\n        }\n        else if (obj instanceof Native) {\n            prop.push('scale');\n        }\n        else if (obj instanceof BpmnShape) {\n            prop.push('activity');\n            prop.push('annotations');\n        }\n        else if (obj instanceof IconShape) {\n            prop.push('borderColor');\n            prop.push('borderWidth');\n            prop.push('cornerRadius');\n            prop.push('fill');\n        }\n    }\n    else if (obj instanceof BpmnActivity) {\n        prop.push('subProcess');\n    }\n    else if (obj instanceof BpmnTask) {\n        prop.push('call');\n        prop.push('compensation');\n        prop.push('loop');\n    }\n    else if (obj instanceof BpmnSubProcess) {\n        prop.push('adhoc');\n        prop.push('boundary');\n        prop.push('compensation');\n        prop.push('loop');\n        prop.push('processes');\n    }\n    else if (obj instanceof Port) {\n        prop.push('height');\n        prop.push('width');\n        prop.push('visibility');\n        prop.push('horizontalAlignment');\n        prop.push('verticalAlignment');\n        prop.push('shape');\n    }\n    else if (obj instanceof Annotation) {\n        prop.push('constraints');\n        prop.push('height');\n        prop.push('horizontalAlignment');\n        prop.push('rotateAngle');\n        prop.push('template');\n        prop.push('verticalAlignment');\n        prop.push('visibility');\n        prop.push('width');\n        prop.push('margin');\n    }\n    else if (obj instanceof Margin) {\n        prop.push('left');\n        prop.push('right');\n        prop.push('top');\n        prop.push('bottom');\n    }\n    else if (obj instanceof TextStyle) {\n        prop = ['strokeWidth', 'strokeDashArray', 'opacity', 'gradient', 'fontSize', 'fontFamily', 'textOverflow',\n            'textDecoration', 'whiteSpace', 'textWrapping', 'textAlign', 'italic', 'bold'];\n    }\n    if (obj instanceof ShapeStyle) {\n        prop.push('strokeColor');\n        prop.push('color');\n    }\n    properties = properties.concat(prop);\n    return properties;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key, cloneBlazorProp) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        if (cloneBlazorProp) {\n            properties = updateCloneProp(properties, obj);\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property, cloneBlazorProp);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], undefined, undefined, cloneBlazorProp);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key, cloneBlazorProp) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key, cloneBlazorProp));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    applyStyleAgainstCsp(text, 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from '../objects/node';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/* tslint:disable */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / (2 * diagram.scroller.transform.scale))) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action !== 'OrthoThumb') {\n                    if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                        && canDragSourceEnd(conn_1)) {\n                        if (action) {\n                            return action;\n                        }\n                    }\n                    if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                        && canDragTargetEnd(conn_1)) {\n                        if (action) {\n                            return action;\n                        }\n                    }\n                }\n                else {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\n/* tslint:enable */\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'grab',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = (isBlazor() ? node.shape : node.shape);\n        var bpmnShape = (isBlazor() ? node.shape.bpmnShape : node.shape.shape);\n        if (bpmnShape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (bpmnShape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (bpmnShape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (bpmnShape === 'Message' || bpmnShape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (bpmnShape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (bpmnShape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData((isBlazor() ? node.shape.bpmnShape :\n            node.shape.shape));\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + (isBlazor() ? node.shape.bpmnShape :\n            node.shape.shape);\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if ((!isBlazor() && node.shape.shape === 'Event') ||\n            (isBlazor() && node.shape.bpmnShape === 'Event')) {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if ((!isBlazor() && node.shape.shape === 'Activity') ||\n            (isBlazor() && node.shape.bpmnShape === 'Activity')) {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = 'white';\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && ((!isBlazor() && source.shape.shape !== 'TextAnnotation') ||\n                (isBlazor() && source.shape.bpmnShape !== 'TextAnnotation'))) {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = (isBlazor() ? node.shape.bpmnShape : node.shape.shape);\n            if (shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape ||\n            (actualObject.shape.bpmnShape);\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (((isBlazor() && newShape.bpmnShape === 'Gateway') || newShape.shape === 'Gateway') &&\n            newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'DataObject') || newShape.shape === 'DataObject') &&\n            newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Activity') || newShape.shape === 'Activity') &&\n            newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Event') || newShape.shape === 'Event') &&\n            newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Message') || newShape.shape === 'Message') ||\n            ((isBlazor() && newShape.bpmnShape === 'DataSource') || newShape.shape === 'DataSource')) {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? ((!isBlazor() && actualObject.shape.shape === 'Activity' ||\n                (isBlazor() && actualObject.shape.bpmnShape === 'Activity'))) ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (((!isBlazor() && actualObject.shape.shape === 'Activity') ||\n                        (isBlazor() && actualObject.shape.bpmnShape === 'Activity')) &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (((!isBlazor() && actualObject.shape.shape === 'Gateway')\n                        || (isBlazor() && actualObject.shape.bpmnShape === 'Gateway')) ||\n                        ((!isBlazor() && actualObject.shape.shape === 'Event')\n                            || (isBlazor() && actualObject.shape.bpmnShape === 'Event'))) {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if ((!isBlazor() && currentNode.shape.shape === 'Event') ||\n                        (isBlazor() && currentNode.shape.bpmnShape === 'Event')) {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if ((!isBlazor() && node.shape.shape === 'Event') ||\n                (isBlazor() && node.shape.bpmnShape === 'Event')) {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                ((!isBlazor() && node.shape.shape === 'Activity') ||\n                    (isBlazor() && node.shape.bpmnShape === 'Activity'))\n                && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory, isBlazor } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramGradient;\n        }\n        switch (obj.type) {\n            case 'Linear':\n                return LinearGradient;\n            case 'Radial':\n                return RadialGradient;\n            default:\n                return LinearGradient;\n        }\n    }\n    return LinearGradient;\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar DiagramGradient = /** @class */ (function (_super) {\n    __extends(DiagramGradient, _super);\n    function DiagramGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"y2\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], DiagramGradient.prototype, \"r\", void 0);\n    return DiagramGradient;\n}(Gradient));\nexport { DiagramGradient };\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n/**\n * Defines the style of shape/path\n */\nvar DiagramShapeStyle = /** @class */ (function (_super) {\n    __extends(DiagramShapeStyle, _super);\n    function DiagramShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], DiagramShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], DiagramShapeStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property(1)\n    ], DiagramShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], DiagramShapeStyle.prototype, \"gradient\", void 0);\n    __decorate([\n        Property(1)\n    ], DiagramShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(false)\n    ], DiagramShapeStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property('black')\n    ], DiagramShapeStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property(12)\n    ], DiagramShapeStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property('Arial')\n    ], DiagramShapeStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], DiagramShapeStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('Center')\n    ], DiagramShapeStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], DiagramShapeStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property(false)\n    ], DiagramShapeStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('black')\n    ], DiagramShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], DiagramShapeStyle.prototype, \"textWrapping\", void 0);\n    return DiagramShapeStyle;\n}(ChildProperty));\nexport { DiagramShapeStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * @private\n */\nexport var BlazorAction;\n(function (BlazorAction) {\n    /** Return the layout value is true when doLayout is called   */\n    BlazorAction[BlazorAction[\"Default\"] = 0] = \"Default\";\n    /** Need to return the layout value when doLayout is called  */\n    BlazorAction[BlazorAction[\"expandNode\"] = 2] = \"expandNode\";\n    /** Enabled during the mouse interaction  */\n    BlazorAction[BlazorAction[\"interaction\"] = 4] = \"interaction\";\n})(BlazorAction || (BlazorAction = {}));\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables or disables near node padding to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"ConnectToNearByNode\"] = 131072] = \"ConnectToNearByNode\";\n    /** Enables or disables near port padding to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"ConnectToNearByPort\"] = 262144] = \"ConnectToNearByPort\";\n    /** Enables or disables Enables or disables near port and node padding to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"ConnectToNearByElement\"] = 393216] = \"ConnectToNearByElement\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 470590] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables child in parent for the swimLane node */\n    NodeConstraints[NodeConstraints[\"AllowMovingOutsideLane\"] = 33554432] = \"AllowMovingOutsideLane\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n    /** Use to prevent the collection change event while dragging lane from palette and over it in diagram */\n    DiagramAction[DiagramAction[\"PreventCollectionChangeOnDragOver\"] = 4096] = \"PreventCollectionChangeOnDragOver\";\n    /** Use to prevent the z order on dragging the diagram elements */\n    DiagramAction[DiagramAction[\"PreventZIndexOnDragging\"] = 8192] = \"PreventZIndexOnDragging\";\n    /** Indicates whether group dragging has been activated */\n    DiagramAction[DiagramAction[\"isGroupDragging\"] = 16384] = \"isGroupDragging\";\n    /** Indicates whether drag is initiated by mouse  */\n    DiagramAction[DiagramAction[\"DragUsingMouse\"] = 32768] = \"DragUsingMouse\";\n    /** Indicates whether decorator property is changed or not */\n    DiagramAction[DiagramAction[\"DecoratorPropertyChange\"] = 65536] = \"DecoratorPropertyChange\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n    /** Indicates whether animation happens or not  */\n    RealAction[RealAction[\"AnimationClick\"] = 64] = \"AnimationClick\";\n    /** Enable the group action */\n    RealAction[RealAction[\"EnableGroupAction\"] = 128] = \"EnableGroupAction\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n    DiagramEvent[DiagramEvent[\"commandExecute\"] = 25] = \"commandExecute\";\n    DiagramEvent[DiagramEvent[\"historyStateChange\"] = 26] = \"historyStateChange\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseDown\"] = 27] = \"onUserHandleMouseDown\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseUp\"] = 28] = \"onUserHandleMouseUp\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseEnter\"] = 29] = \"onUserHandleMouseEnter\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseLeave\"] = 30] = \"onUserHandleMouseLeave\";\n    DiagramEvent[DiagramEvent[\"onImageLoad\"] = 31] = \"onImageLoad\";\n    DiagramEvent[DiagramEvent[\"onDoBindingInit\"] = 32] = \"onDoBindingInit\";\n    DiagramEvent[DiagramEvent[\"keyUp\"] = 33] = \"keyUp\";\n    DiagramEvent[DiagramEvent[\"keyDown\"] = 34] = \"keyDown\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        /** @private */\n        this.inversedAlignment = true;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param {number} x\n     * @param {number} y\n     * @param {UnitMode} mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param {Size} size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param {Size} availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize, obj, callback) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param {Size} desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param {Size} desiredSize\n     * @param {Size} availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined && this.maxWidth !== 0) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined && this.maxHeight !== 0) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param {Size} availableSize\n     */\n    Container.prototype.measure = function (availableSize, id, callback) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize, id, callback);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param {Size} desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param {Size} size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param {Size} size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param {DiagramElement} child\n     * @param {PointModel} center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param {Size} availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param {Size} desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param {Size} availableSize\n     */\n    Canvas.prototype.measure = function (availableSize, id, callback) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize, id, callback);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param {DiagramElement} child\n     * @param {Size} childSize\n     * @param {Size} parentSize\n     * @param {number} x\n     * @param {number} y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param {DiagramElement} child\n     * @param {number} x\n     * @param {number} y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = child.inversedAlignment ? x : (x - child.desiredSize.width);\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x = child.inversedAlignment ? (x - child.desiredSize.width) : x;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = child.inversedAlignment ? y : (y - child.desiredSize.height);\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y = child.inversedAlignment ? (y - child.desiredSize.height) : y;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param {Size} availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param {Size} desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param {string} pathData\n     * @param {Rect} bounds\n     * @param {Size} actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param {Size} availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize, id, callback) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize, id, callback);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param {Size} desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param {Size} availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param {Size} desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    // tslint:disable-next-line:no-any\n    function Port(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.inEdges = [];\n        _this.outEdges = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"outEdges\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"inEdges\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property('String')\n    ], Annotation.prototype, \"annotationType\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { DiagramTooltip } from './tooltip';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\nimport { templateCompiler } from '../../utility/base-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId, nodeTemplate) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        _this.templateFn = templateCompiler(nodeTemplate);\n        return _this;\n    }\n    /** @private */\n    DiagramHtmlElement.prototype.getNodeTemplate = function () {\n        return this.templateFn;\n    };\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            if (!this.isTemplate) {\n                this.template = getContent(this, true);\n            }\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * customize the size of the individual palette items.\n */\nvar SymbolSize = /** @class */ (function (_super) {\n    __extends(SymbolSize, _super);\n    function SymbolSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolSize.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolSize.prototype, \"height\", void 0);\n    return SymbolSize;\n}(ChildProperty));\nexport { SymbolSize };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n        this.renderComplete();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param {number} scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param {HTMLElement} rulerObj - Defines the ruler Object\n     * @param {PointModel} currentPoint - Defines the current point for ruler Object\n     * @param {number} offset - Defines the offset ruler Object\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('Top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(false)\n    ], UserHandle.prototype, \"disableNodes\", void 0);\n    __decorate([\n        Property(false)\n    ], UserHandle.prototype, \"disableConnectors\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param {Size} availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param {Size} desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param {Size} availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar LayoutInfo = /** @class */ (function (_super) {\n    __extends(LayoutInfo, _super);\n    function LayoutInfo() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Horizontal')\n    ], LayoutInfo.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Center')\n    ], LayoutInfo.prototype, \"type\", void 0);\n    __decorate([\n        Property(undefined)\n    ], LayoutInfo.prototype, \"offset\", void 0);\n    __decorate([\n        Property(false)\n    ], LayoutInfo.prototype, \"enableRouting\", void 0);\n    __decorate([\n        Property([])\n    ], LayoutInfo.prototype, \"children\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"assistants\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"level\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"hasSubTree\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"rows\", void 0);\n    return LayoutInfo;\n}(ChildProperty));\nexport { LayoutInfo };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, isBlazor } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { IconShape } from './icon';\nimport { measurePath, getContent, getTemplateContent } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nimport { Connector } from './connector';\nimport { UserHandle } from '../interaction/selector';\nimport { LayoutInfo } from '../diagram/layoutinfo';\nimport { SymbolSize } from './preview';\nvar getShapeType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramShape;\n        }\n        else {\n            switch (obj.type) {\n                case 'Basic':\n                    return BasicShape;\n                case 'Flow':\n                    return FlowShape;\n                case 'Path':\n                    return Path;\n                case 'Image':\n                    return Image;\n                case 'Text':\n                    return Text;\n                case 'Bpmn':\n                    return BpmnShape;\n                case 'Native':\n                    return Native;\n                case 'HTML':\n                    return Html;\n                case 'UmlActivity':\n                    return UmlActivityShape;\n                case 'UmlClassifier':\n                    return UmlClassifierShape;\n                case 'SwimLane':\n                    return SwimLane;\n                default:\n                    return BasicShape;\n            }\n        }\n    }\n    return (isBlazor()) ? DiagramShape : BasicShape;\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/* tslint:disable */\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar DiagramShape = /** @class */ (function (_super) {\n    __extends(DiagramShape, _super);\n    function DiagramShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    DiagramShape.prototype.getClassName = function () {\n        return 'DiagramShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], DiagramShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], DiagramShape.prototype, \"basicShape\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], DiagramShape.prototype, \"flowShape\", void 0);\n    __decorate([\n        Property('Event')\n    ], DiagramShape.prototype, \"bpmnShape\", void 0);\n    __decorate([\n        Property('Action')\n    ], DiagramShape.prototype, \"umlActivityShape\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"data\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"textContent\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], DiagramShape.prototype, \"scale\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], DiagramShape.prototype, \"align\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], DiagramShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], DiagramShape.prototype, \"points\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], DiagramShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], DiagramShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], DiagramShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], DiagramShape.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], DiagramShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], DiagramShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], DiagramShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], DiagramShape.prototype, \"classifier\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], DiagramShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], DiagramShape.prototype, \"interfaceShape\", void 0);\n    return DiagramShape;\n}(ChildProperty));\nexport { DiagramShape };\n/* tslint:enable */\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = (isBlazor() ? this.shape.textContent : this.shape.content);\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if ((!isBlazor() && this.shape.shape === 'Rectangle') || (isBlazor() && this.shape.basicShape === 'Rectangle')) {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if ((!isBlazor() && this.shape.shape === 'Polygon') || (isBlazor() && this.shape.basicShape === 'Polygon')) {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape((isBlazor()) ? this.shape.basicShape : this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape((isBlazor() ? this.shape.flowShape : this.shape.shape));\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id, undefined, diagram.nodeTemplate);\n                if (this.shape.content) {\n                    htmlContent.content = this.shape.content;\n                }\n                else if (diagram.nodeTemplate) {\n                    htmlContent.isTemplate = true;\n                    htmlContent.template = htmlContent.content = getContent(htmlContent, true, this);\n                }\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if ((!isBlazor() && this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) ||\n            ((isBlazor()) && (this.shape.basicShape === 'Rectangle'\n                && this.shape.type === \"Basic\" && !this.shape.cornerRadius))) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if ((this.shape instanceof Text) || (isBlazor() && this.shape.type === \"Text\")) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || ((!isBlazor() && this.shape.shape === 'Message') || (isBlazor() && this.shape.bpmnShape === 'Message')) ||\n            ((!isBlazor() && this.shape.shape === 'DataSource') || (isBlazor() && this.shape.bpmnShape === 'DataSource'))) && ((this.shape.type !== 'UmlActivity' || ((!isBlazor() && this.shape.shape !== 'FinalNode') ||\n            (isBlazor() && this.shape.umlActivityShape !== 'FinalNode'))))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            port.inversedAlignment = canvas.inversedAlignment;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            iconContainer.inversedAlignment = canvas.inversedAlignment;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize, annotationTemplate) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i, annotationTemplate);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            annotation.inversedAlignment = container.inversedAlignment;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value, annotationTemplate) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (isBlazor() && annotation.annotationType === 'Template') {\n            annotation.template = annotation.template ? annotation.template : '';\n        }\n        if (diagramId && (annotation.template || annotation.annotationType === 'Template'\n            || (annotationTemplate && annotation.content === ''))) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id, annotationTemplate);\n            annotationcontent = getTemplateContent(annotationcontent, annotation, annotationTemplate);\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Complex({}, LayoutInfo)\n    ], Node.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], Node.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], Node.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], Node.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], Node.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Node.prototype, \"previewSize\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Node.prototype, \"dragSize\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    __decorate([\n        Property('')\n    ], Node.prototype, \"branch\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    __decorate([\n        Property(true)\n    ], Lane.prototype, \"canMove\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient, checkBrowserInfo } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            var childNodesHeight = 0;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n                        (options.textWrapping === 'WrapWithOverflow' || options.textWrapping === 'Wrap') && parentNode) {\n                        var size = (options.isHorizontalLane) ? parentNode.actualSize.width : parentNode.actualSize.height;\n                        if (offsetY < size) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > size) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                            childNodesHeight += child.dy;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (childNodesHeight && options.isHorizontalLane) {\n                pivotX = options.parentOffsetX + options.pivotX;\n                pivotY = options.parentOffsetY + options.pivotY;\n                options.y = options.parentOffsetY - childNodesHeight * options.pivotY + 0.5;\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        if (isBlazor() && obj.alignment === 'None' && scale === 'Stretch') {\n            scale = '';\n        }\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        var parentHtmlElement;\n        if (canvas) {\n            var i = void 0;\n            var j = void 0;\n            var parentElement = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                parentElement = canvas.childNodes[i];\n                for (j = 0; j < parentElement.childNodes.length; j++) {\n                    if (parentElement.childNodes[j].id === element.id + '_html_element') {\n                        htmlElement = parentElement.childNodes[j];\n                        break;\n                    }\n                }\n            }\n        }\n        if (!htmlElement) {\n            parentHtmlElement = canvas.querySelector(('#' + element.id + '_html_element')) ||\n                canvas.querySelector(('#' + element.nodeId + '_html_element'));\n            if (!parentHtmlElement) {\n                var attr_1 = {\n                    'id': element.nodeId + '_html_element',\n                    'class': 'foreign-object'\n                };\n                parentHtmlElement = createHtmlElement('div', attr_1);\n            }\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            element.isTemplate ? htmlElement.appendChild(element.template) : htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            parentHtmlElement.appendChild(htmlElement);\n            canvas.appendChild(parentHtmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param {DiagramNativeElement} node\n     * @param {SVGElement} group\n     * @param {number} height\n     * @param {number} width\n     * @param {SVGSVGElement} parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        if (checkBrowserInfo()) {\n            group.setAttribute('clip-path', 'url(' + location.href + '#' + node.id + '_clip)');\n        }\n        else {\n            group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        }\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                if (checkBrowserInfo()) {\n                    fill = 'url(' + location.href + '#' + grd.id + ')';\n                }\n                else {\n                    fill = 'url(#' + grd.id + ')';\n                }\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString() || 'none');\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner, getInterval, getSpaceValue } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue, isPreviewNode) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue, isPreviewNode);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette, isPreviewNode);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg, isPreviewNode);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, canvas);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 1.2;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        var canDraw;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            canDraw = true;\n            if (obj.disableConnectors && selectorItem.connectors.length > 0) {\n                canDraw = false;\n            }\n            if (obj.disableNodes && selectorItem.nodes.length > 0) {\n                canDraw = false;\n            }\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (canDraw) {\n                if (obj.content === '' && obj.source === '') {\n                    var data = obj.pathData ? obj.pathData : obj.content;\n                    var option = this.getBaseAttributes(wrapper);\n                    option.id = obj.name + '_userhandle';\n                    option.fill = obj.backgroundColor;\n                    option.stroke = obj.borderColor;\n                    option.strokeWidth = obj.borderWidth;\n                    option.centerX = newPoint.x;\n                    option.centerY = newPoint.y;\n                    option.radius = obj.size * 0.5;\n                    option.class = 'e-diagram-userhandle-circle';\n                    option.angle = 0;\n                    option.visible = obj.visible;\n                    option.opacity = 1;\n                    this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                    var pathPading = 5;\n                    var arrayCollection = [];\n                    arrayCollection = processPathData(data);\n                    arrayCollection = splitArrayCollection(arrayCollection);\n                    var pathSize = measurePath(data);\n                    //requiredSize/contentSize\n                    var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                    var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                    var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                    pathSize = measurePath(newData);\n                    var options = {\n                        x: newPoint.x - pathSize.width / 2,\n                        y: newPoint.y - pathSize.height / 2,\n                        angle: 0, id: '',\n                        class: 'e-diagram-userhandle-path',\n                        fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                        width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                    };\n                    this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n                }\n                else if (obj.content !== '') {\n                    var handleContent = void 0;\n                    handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                    handleContent.content = obj.content;\n                    handleContent.offsetX = newPoint.x;\n                    handleContent.offsetY = newPoint.y;\n                    handleContent.height = obj.size;\n                    handleContent.width = obj.size;\n                    handleContent.id = obj.name + '_shape';\n                    handleContent.horizontalAlignment = 'Center';\n                    handleContent.verticalAlignment = 'Center';\n                    handleContent.visible = obj.visible;\n                    handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                    handleContent.relativeMode = 'Object';\n                    handleContent.description = obj.name || 'User handle';\n                    handleContent.measure(new Size(obj.size, obj.size));\n                    handleContent.arrange(handleContent.desiredSize);\n                    this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n                }\n                else {\n                    var element_1 = new ImageElement();\n                    var options = this.getBaseAttributes(element_1, transform);\n                    options.width = obj.size;\n                    options.height = obj.size;\n                    options.x = newPoint.x - (obj.size / 2);\n                    options.y = newPoint.y - (obj.size / 2);\n                    options.sourceWidth = obj.size;\n                    options.sourceHeight = obj.size;\n                    options.alignment = element_1.imageAlign;\n                    options.source = obj.source;\n                    options.scale = element_1.imageScale;\n                    options.visible = obj.visible;\n                    options.description = obj.name || 'User handle';\n                    options.id = obj.name + '_';\n                    this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette, isPreviewNode) {\n        var options = this.getBaseAttributes(element, transform, isPreviewNode);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        var isLine = snapSettings.gridType === 'Lines';\n        var verticalLineIntervals = isLine ?\n            snapSettings.verticalGridlines.lineIntervals : snapSettings.verticalGridlines.dotIntervals;\n        var horizontalLineIntervals = isLine ?\n            snapSettings.horizontalGridlines.lineIntervals : snapSettings.horizontalGridlines.dotIntervals;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var i = 0; i < verticalLineIntervals.length; i = i + 1) {\n                hWidth += verticalLineIntervals[i];\n            }\n            for (var i = 0; i < horizontalLineIntervals.length; i = i + 1) {\n                hHeight += horizontalLineIntervals[i];\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, horizontalLineIntervals);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, verticalLineIntervals);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, intervals) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight, isLine);\n            }\n            intervals = getInterval(intervals, isLine);\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                space = getSpaceValue(intervals, isLine, i, space);\n                var spaceY = 0;\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', isLine ? 'path' : 'circle');\n                var d = isLine ? space + intervals[i] / 2 : space;\n                d = isRulerGrid ? d : d * scale;\n                var attr = void 0;\n                if (isLine) {\n                    attr = {\n                        'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                        'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                        'dashArray': dashArray.toString(),\n                        'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                    };\n                    setAttributeSvg(hLine, attr);\n                    pattern.appendChild(hLine);\n                    space += intervals[i + 1] + intervals[i];\n                }\n                else {\n                    this.renderDotGrid(i, pattern, snapSettings, spaceY, d, scale, true);\n                    space += intervals[i];\n                }\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderDotGrid = function (i, pattern, snapSettings, spacey, d, scale, isHorizontal) {\n        var intervals = !isHorizontal ?\n            snapSettings.horizontalGridlines.dotIntervals : snapSettings.verticalGridlines.dotIntervals;\n        intervals = getInterval(intervals, false);\n        var r;\n        var hLine;\n        var doubleRadius;\n        var dy;\n        var attr;\n        for (var j = 1; j < intervals.length; j = j + 2) {\n            r = j === intervals.length - 1 ? intervals[0] : intervals[j - 1];\n            hLine = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            dy = spacey;\n            dy = dy * scale;\n            attr = {\n                'cx': isHorizontal ? dy : d, 'cy': isHorizontal ? d : dy, 'fill': snapSettings.horizontalGridlines.lineColor, 'r': r\n            };\n            setAttributeSvg(hLine, attr);\n            pattern.appendChild(hLine);\n            spacey += intervals[j] + intervals[j - 1];\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, intervals) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth, isLine);\n            }\n            var spaceY = 0;\n            intervals = getInterval(intervals, isLine);\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                space = getSpaceValue(intervals, isLine, i, space);\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', isLine ? 'path' : 'circle');\n                var d = isLine ? space + intervals[i] / 2 : space;\n                d = isRulerGrid ? d : d * scale;\n                var attr = void 0;\n                if (isLine) {\n                    attr = {\n                        'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                        'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                        'dashArray': dashArray.toString(),\n                        'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                    };\n                    setAttributeSvg(vLine, attr);\n                    pattern.appendChild(vLine);\n                    space += intervals[i + 1] + intervals[i];\n                }\n                else {\n                    this.renderDotGrid(i, pattern, snapSettings, spaceY, d, scale, false);\n                    space += intervals[i];\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            var isLine = snapSettings.gridType === 'Lines';\n            var verticalLineIntervals = isLine ?\n                snapSettings.verticalGridlines.lineIntervals : snapSettings.verticalGridlines.dotIntervals;\n            var horizontalLineIntervals = isLine ?\n                snapSettings.horizontalGridlines.lineIntervals : snapSettings.horizontalGridlines.dotIntervals;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (var j = 0; j < horizontalLineIntervals.length; j = j + 1) {\n                height += horizontalLineIntervals[j];\n            }\n            var width = 0;\n            for (var j = 0; j < verticalLineIntervals.length; j = j + 1) {\n                width += verticalLineIntervals[j];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, horizontalLineIntervals);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, verticalLineIntervals);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth, isLine) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        var interval = isLine ? ruler.interval : ruler.interval + 1;\n        for (var i = 0; i < interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = isLine ? ((i === 0) ? 1.25 : 0.25) : 0;\n            }\n            else {\n                newInterval[i] = isLine ? (tickInterval - newInterval[i - 1]) : tickInterval;\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.isHorizontalLane = element.isLaneOrientation;\n        if (element.isLaneOrientation) {\n            options.parentOffsetX = this.groupElement.offsetX;\n            options.parentOffsetY = this.groupElement.offsetY;\n            options.parentWidth = this.groupElement.actualSize.width;\n            options.parentHeight = this.groupElement.actualSize.height;\n        }\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if ((element.style.textWrapping === 'Wrap' || element.style.textWrapping === 'WrapWithOverflow') &&\n            this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue, isPreviewNode) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue, isPreviewNode);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            if (element && element.children &&\n                element.children.length && (element.children[0] instanceof DiagramHtmlElement)) {\n                var id = canvas.id.split('_preview');\n                var layer = document.getElementById(id[0] + '_html_div') ||\n                    (getHTMLLayer(this.diagramId).children[0]);\n                canvas = layer.querySelector(('#' + element.id + '_content_html_element'));\n                if (canvas) {\n                    canvas.style.transform =\n                        'scale(' + scaleX + ',' + scaleY + ')' + 'rotate(' + (element.rotateAngle + element.parentTransform) + 'deg)';\n                }\n            }\n            else {\n                setAttributeSvg(canvas, attr);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg, isPreviewNode) {\n        var options = this.getBaseAttributes(element, transform, isPreviewNode);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform, isPreviewNode) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (isPreviewNode) {\n            options.x = options.x - .5;\n            options.y = options.y - .5;\n        }\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        var domTable = 'domTable';\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                if (!window[domTable][this.diagramId + '_diagramLayer']) {\n                    window[domTable][this.diagramId + '_diagramLayer'] =\n                        this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                }\n                var diagramLayer = window[domTable][this.diagramId + '_diagramLayer'];\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            if (!window[domTable][this.diagramId + '_diagramPorts']) {\n                window[domTable][this.diagramId + '_diagramPorts'] = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            }\n            var portsLayer = window[domTable][this.diagramId + '_diagramPorts'];\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            if (!window[domTable][this.diagramId + '_diagramExpander']) {\n                window[domTable][this.diagramId + '_diagramExpander'] =\n                    this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            }\n            var expandLayer = window[domTable][this.diagramId + '_diagramExpander'];\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            if (!window[domTable][this.diagramId + '_nativeLayer']) {\n                window[domTable][this.diagramId + '_nativeLayer'] = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            }\n            var nativeLayer = window[domTable][this.diagramId + '_nativeLayer'];\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\nvar FitOptions = /** @class */ (function (_super) {\n    __extends(FitOptions, _super);\n    function FitOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Page')\n    ], FitOptions.prototype, \"mode\", void 0);\n    __decorate([\n        Property('PageSettings')\n    ], FitOptions.prototype, \"region\", void 0);\n    __decorate([\n        Complex({ top: 25, bottom: 25, left: 25, right: 25 }, Margin)\n    ], FitOptions.prototype, \"margin\", void 0);\n    __decorate([\n        Property(false)\n    ], FitOptions.prototype, \"canZoomIn\", void 0);\n    __decorate([\n        Property(undefined)\n    ], FitOptions.prototype, \"customBounds\", void 0);\n    __decorate([\n        Property(false)\n    ], FitOptions.prototype, \"canFit\", void 0);\n    return FitOptions;\n}(ChildProperty));\nexport { FitOptions };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    __decorate([\n        Complex({}, FitOptions)\n    ], PageSettings.prototype, \"fitOptions\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([1, 19, 0.5, 19.5, 0.5, 19.5, 0.5, 19.5, 0.5, 19.5])\n    ], Gridlines.prototype, \"dotIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property('Lines')\n    ], SnapSettings.prototype, \"gridType\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar DataMappingItems = /** @class */ (function (_super) {\n    __extends(DataMappingItems, _super);\n    function DataMappingItems() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"property\", void 0);\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"field\", void 0);\n    return DataMappingItems;\n}(ChildProperty));\nexport { DataMappingItems };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { DataMappingItems as DataMappingItems } from './data-mapping';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Collection([], DataMappingItems)\n    ], DataSource.prototype, \"dataMapSettings\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","import { TextElement } from '../core/elements/text-element';\nimport { Node } from '../objects/node';\nimport { getIndex, cloneObject } from './base-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of commands\n */\n/* tslint:disable */\nvar DeepDiffMapper = /** @class */ (function () {\n    function DeepDiffMapper() {\n        this.valueCreated = 'created';\n        this.valueUpdated = \"updated\";\n        this.valueDeleted = \"deleted\";\n        this.valueUnchanged = \"unchanged\";\n        /** @private */\n        this.newNodeObject = [];\n        /** @private */\n        this.newConnectorObject = [];\n        /**   @private  */\n        this.diagramObject = {};\n        /* tslint:enable */\n    }\n    /** @private */\n    DeepDiffMapper.prototype.updateObjectCollection = function (layers, diagram) {\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i]['objects']) {\n                layers[i]['objects'] = (diagram.layers[i].objects);\n            }\n            else {\n                layers[i]['objects'] = [];\n                layers[i]['objects'] = diagram.layers[i].objects;\n            }\n        }\n    };\n    /**   @private  */\n    DeepDiffMapper.prototype.getOldObject = function (id, isNode, diagram) {\n        var oldObject = isNode ? diagram.oldNodeObjects : diagram.oldConnectorObjects;\n        for (var i = 0; i < oldObject.length; i++) {\n            if (oldObject[i].id === id) {\n                return oldObject[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    DeepDiffMapper.prototype.changeSegments = function (diff, newObject) {\n        for (var _i = 0, _a = Object.keys(diff); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (prop === 'segments') {\n                var seg = this.removeNullValues(newObject[prop]);\n                diff[prop] = seg;\n            }\n        }\n        return diff;\n    };\n    DeepDiffMapper.prototype.removeNullValues = function (segments) {\n        var newSegments = [];\n        var seg = {};\n        for (var i = 0; i < segments.length; i++) {\n            seg = this.removeNullObjectValues(segments[i]);\n            newSegments.push(seg);\n        }\n        return newSegments;\n    };\n    ;\n    /** @private */\n    DeepDiffMapper.prototype.removeNullObjectValues = function (segment) {\n        var newSegObject = {};\n        for (var _i = 0, _a = Object.keys(segment); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (segment[prop] !== undefined) {\n                newSegObject[prop] = (segment[prop] instanceof Object) ? this.removeNullObjectValues(segment[prop]) : segment[prop];\n            }\n        }\n        return newSegObject;\n    };\n    ;\n    /** @private */\n    DeepDiffMapper.prototype.getDifferenceValues = function (selectedObject, args, labelDrag, diagram) {\n        var diffValue;\n        var diff;\n        var result;\n        var isNode = selectedObject instanceof Node;\n        var oldObject;\n        if (selectedObject) {\n            oldObject = isNode ? this.getOldObject(selectedObject.id, true, diagram) : this.getOldObject(selectedObject.id, false, diagram);\n            if (oldObject) {\n                var newObject = cloneObject(selectedObject);\n                result = this.map(newObject, oldObject);\n                diffValue = this.frameObject({}, result);\n                diff = this.removeEmptyValues(diffValue);\n                diff = this.changeSegments(diff, newObject);\n                if (diff.children) {\n                    diff.children = cloneObject(selectedObject).children;\n                }\n                return this.getDiagramObjects(diff, selectedObject.id, isNode, args, labelDrag, diagram);\n            }\n        }\n    };\n    /** @private */\n    DeepDiffMapper.prototype.getLayerObject = function (oldDiagram, temp, diagram) {\n        if (isBlazor()) {\n            var diffLayers = {};\n            diffLayers['layers'] = [];\n            var newDiagram = {};\n            newDiagram['layers'] = [];\n            for (var i = 0; i < diagram.layers.length; i++) {\n                newDiagram['layers'].push(cloneObject(diagram.layers[i]));\n            }\n            var result = void 0;\n            for (var i = 0; i < newDiagram['layers'].length; i++) {\n                if (!temp) {\n                    result = this.map(cloneObject(newDiagram['layers'][i]), oldDiagram['layers'][i]);\n                }\n                else {\n                    result = this.map(oldDiagram['layers'][i], cloneObject(newDiagram['layers'][i]));\n                }\n                var diffValue = this.frameObject({}, result);\n                var diff = this.removeEmptyValues(diffValue);\n                diffLayers['layers'][i] = diff;\n            }\n            this.updateObjectCollection(diffLayers['layers'], diagram);\n            return diffLayers;\n        }\n    };\n    /** @private */\n    DeepDiffMapper.prototype.getDiagramObjects = function (diffValue, object, isNode, args, labelDrag, diagram) {\n        var index = 0;\n        index = getIndex(diagram, object);\n        diffValue.sfIndex = index;\n        if (isNode) {\n            this.newNodeObject.push(diffValue);\n        }\n        else {\n            this.newConnectorObject.push(diffValue);\n        }\n        if (args && (((args.sourceWrapper instanceof TextElement) && labelDrag) || args.portId)) {\n            var tempObject = void 0;\n            var objectValue = void 0;\n            if (isNode) {\n                objectValue = args.portId ? this.newNodeObject[0].ports : this.newNodeObject[0].annotations;\n            }\n            else {\n                objectValue = this.newConnectorObject[0].annotations || [];\n            }\n            for (var i = 0; i < objectValue.length; i++) {\n                if (Object.keys(objectValue[i]).length > 0) {\n                    var selectedObject = diagram.nameTable[object];\n                    tempObject = objectValue[i];\n                    if (args.portId) {\n                        this.newNodeObject[0].ports = [tempObject];\n                    }\n                    else {\n                        for (var j = 0; j < selectedObject.annotations.length; j++) {\n                            if (args.sourceWrapper.id === selectedObject.id + \"_\" + selectedObject.annotations[j].id) {\n                                tempObject.sfIndex = j;\n                            }\n                        }\n                        if (isNode) {\n                            this.newNodeObject[0].annotations = [tempObject];\n                        }\n                        else {\n                            this.newConnectorObject[0].annotations = [tempObject];\n                        }\n                    }\n                }\n            }\n        }\n        this.diagramObject = { nodes: this.newNodeObject, connectors: this.newConnectorObject };\n        //return returnValue;\n    };\n    DeepDiffMapper.prototype.removeArrayValues = function (obj) {\n        var newObj = [];\n        var value = JSON.stringify(obj);\n        if (!(value === JSON.stringify({ 'data': [] }))) {\n            for (var i = 0; i < obj.length; i++) {\n                if (obj[i] instanceof Object) {\n                    var newValue = this.removeEmptyValues(obj[i]);\n                    newObj.push(newValue);\n                }\n                else {\n                    newObj.push(obj[i]);\n                }\n            }\n        }\n        return newObj;\n    };\n    /** @private */\n    DeepDiffMapper.prototype.removeEmptyValues = function (frame) {\n        var newObj = {};\n        for (var _i = 0, _a = Object.keys(frame); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (prop !== 'wrapper' && prop !== 'data') {\n                var obj = frame[prop];\n                var value = JSON.stringify(obj);\n                if (obj instanceof Array) {\n                    var newValue = this.removeArrayValues(obj);\n                    if (JSON.stringify(newValue) !== '[]') {\n                        newObj[prop] = newValue;\n                    }\n                }\n                else {\n                    if (obj instanceof Object) {\n                        if (!(value === JSON.stringify({ 'data': [] }))) {\n                            var newValue = this.removeEmptyValues(obj);\n                            if (JSON.stringify(newValue) !== '{}') {\n                                newObj[prop] = newValue;\n                            }\n                        }\n                    }\n                    else {\n                        if (!(value === JSON.stringify(['data']) || value === JSON.stringify('data')\n                            || value === JSON.stringify({ 'data': [] }))) {\n                            if (prop !== 'version' && prop !== 'ejsAction') {\n                                newObj[prop] = frame[prop];\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return newObj;\n    };\n    DeepDiffMapper.prototype.map = function (obj1, obj2, arrayName) {\n        if (this.isFunction(obj1) || this.isFunction(obj2)) {\n            throw 'Invalid argument. Function given, object expected.';\n        }\n        if (this.isValue(obj1) || this.isValue(obj2)) {\n            return {\n                type: this.compareValues(obj1, obj2),\n                data: obj1 === undefined ? obj2 : obj1\n            };\n        }\n        var diff = {};\n        if (this.isArray(obj1)) {\n            for (var i = 0; i < obj1.length; i++) {\n                if (!diff[arrayName]) {\n                    diff[arrayName] = [];\n                }\n                var ss = this.map(obj1[i], obj2[i]);\n                diff[arrayName].push(ss);\n            }\n        }\n        else {\n            for (var key in obj1) {\n                if (this.isFunction(obj1[key])) {\n                    continue;\n                }\n                var value2 = undefined;\n                if (obj2[key] !== undefined) {\n                    value2 = obj2[key];\n                }\n                var kk = this.map(obj1[key], value2, this.isArray(value2) ? key : undefined);\n                if (this.isArray(value2)) {\n                    diff[key] = kk[key];\n                }\n                else {\n                    diff[key] = kk;\n                }\n            }\n        }\n        if (this.isArray(obj2)) {\n            for (var i = 0; i < obj2.length; i++) {\n                if (!diff[arrayName]) {\n                    diff[arrayName] = [];\n                }\n                if (this.isFunction(obj2[i]) || diff[arrayName][i] !== undefined) {\n                    if (diff[arrayName][i].type && diff[arrayName][i].type !== this.valueUpdated) {\n                        delete diff[arrayName];\n                    }\n                    continue;\n                }\n                var ss = this.map(undefined, obj2[i]);\n                diff[arrayName][i] = ss;\n            }\n        }\n        else {\n            for (var key in obj2) {\n                if (this.isFunction(obj2[key]) || diff[key] !== undefined) {\n                    if (diff[key].type && ((diff[key].type !== this.valueUpdated) && (diff[key].type !== this.valueDeleted))) {\n                        delete diff[key];\n                    }\n                    continue;\n                }\n                var kk = this.map(undefined, obj2[key]);\n                diff[key] = kk;\n            }\n        }\n        return diff;\n    };\n    DeepDiffMapper.prototype.compareValues = function (value1, value2) {\n        if (value1 === value2) {\n            return this.valueUnchanged;\n        }\n        if (this.isDate(value1) && this.isDate(value2) && value1.getTime() === value2.getTime()) {\n            return this.valueUnchanged;\n        }\n        if (value1 === undefined) {\n            return this.valueCreated;\n        }\n        if (value2 === undefined) {\n            return this.valueDeleted;\n        }\n        return this.valueUpdated;\n    };\n    DeepDiffMapper.prototype.isFunction = function (x) {\n        return Object.prototype.toString.call(x) === '[object Function]';\n    };\n    DeepDiffMapper.prototype.isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n    };\n    DeepDiffMapper.prototype.isDate = function (x) {\n        return Object.prototype.toString.call(x) === '[object Date]';\n    };\n    DeepDiffMapper.prototype.isObject = function (x) {\n        return Object.prototype.toString.call(x) === '[object Object]';\n    };\n    DeepDiffMapper.prototype.isValue = function (x) {\n        return !this.isObject(x) && !this.isArray(x);\n    };\n    DeepDiffMapper.prototype.frameObject = function (final, obj) {\n        for (var key in obj) {\n            if (this.isArray(obj[key])) {\n                if (!final[key]) {\n                    final[key] = [];\n                }\n                for (var i = 0; i < obj[key].length; i++) {\n                    var kk = this.frameObject({}, obj[key][i]);\n                    final[key].push(kk);\n                }\n            }\n            else {\n                if ((key != 'type') || (key == 'type' && (obj[key] !== this.valueUpdated && obj[key] !== this.valueUnchanged && obj[key] !== this.valueDeleted && obj[key] !== this.valueCreated))) {\n                    if (this.isFunction(obj[key])) {\n                        continue;\n                    }\n                    if (this.isValue(obj[key])) {\n                        return obj['data'];\n                    }\n                    else {\n                        var kk = this.frameObject({}, obj[key]);\n                        if (this.isValue(kk) || Object.keys(kk).length > 0) {\n                            final[key] = kk;\n                        }\n                    }\n                }\n            }\n        }\n        return final;\n    };\n    return DeepDiffMapper;\n}());\nexport { DeepDiffMapper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from '../objects/node';\nimport { getInOutConnectPorts, cloneBlazorObject, getDropEventArguements, getObjectType, checkPort } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { DeepDiffMapper } from '../utility/diff-map';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param {CommandHandler} command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        this.deepDiffer = new DeepDiffMapper();\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        if (isBlazor()) {\n            this.commandHandler.enableCloneObject(true);\n            this.commandHandler.ismouseEvents(true);\n        }\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        if (isBlazor()) {\n            this.commandHandler.enableCloneObject(false);\n            this.commandHandler.ismouseEvents(false);\n            this.commandHandler.getBlazorOldValues(args, this instanceof LabelDragTool);\n        }\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (!this.commandHandler.isUserHandle(this.currentPosition)) {\n            if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n                var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n                this.commandHandler.doRubberBandSelection(region);\n            }\n            else {\n                //single selection\n                var arrayNodes = this.commandHandler.getSelectedObject();\n                if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                    this.commandHandler.clearSelection(args.source === null ? true : false);\n                    if (this.action === 'LabelSelect') {\n                        this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                    }\n                    else if (args.source) {\n                        this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                    }\n                }\n                else {\n                    //handling multiple selection\n                    if (args && args.source) {\n                        if (!this.commandHandler.isSelected(args.source)) {\n                            this.commandHandler.selectObjects([args.source], true);\n                        }\n                        else {\n                            if (args.clickCount === 1) {\n                                this.commandHandler.unSelect(args.source);\n                                this.commandHandler.updateBlazorSelector();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.isConnected = false;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var selectorModel, connector, arg, trigger, temparg, oldValue, connectors, i, segment, segmentpoint1, segmentpoint2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(isBlazor() && args && args.source)) return [3 /*break*/, 2];\n                        selectorModel = args.source;\n                        if (!selectorModel.connectors) return [3 /*break*/, 2];\n                        connector = selectorModel.connectors[0];\n                        this.oldConnector = cloneObject(connector);\n                        arg = {\n                            connector: cloneBlazorObject(connector),\n                            oldValue: { connectorTargetValue: { portId: undefined, nodeId: undefined } },\n                            newValue: { connectorTargetValue: { portId: undefined, nodeId: undefined } },\n                            cancel: false, state: 'Changing', connectorEnd: this.endPoint\n                        };\n                        trigger = DiagramEvent.connectionChange;\n                        temparg = void 0;\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(trigger, arg)];\n                    case 1:\n                        temparg = (_a.sent()) || arg;\n                        this.tempArgs = temparg;\n                        if (arg.cancel || (temparg && temparg.cancel)) {\n                            this.canCancel = true;\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.inAction = true;\n                        this.undoElement = undefined;\n                        if (!(this instanceof ConnectorDrawingTool)) {\n                            this.undoElement = cloneObject(args.source);\n                        }\n                        _super.prototype.mouseDown.call(this, args);\n                        if (args.source && args.source.connectors) {\n                            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                            connectors = args.source.connectors[0];\n                            this.oldConnector = cloneObject(connectors);\n                        }\n                        // Sets the selected segment \n                        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n                            for (i = 0; i < connectors.segments.length; i++) {\n                                segment = connectors.segments[i];\n                                segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                                segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                                    this.selectedSegment = segment;\n                                }\n                            }\n                        }\n                        this.currentPosition = args.position;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var trigger, temparg, connector, nodeEndId, portEndId, connector, nodeEndId, portEndId, arg, oldValues, connector, targetPortName, targetNodeNode, target, arg, trigger, obj, entry, obj, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        trigger = DiagramEvent.connectionChange;\n                        temparg = void 0;\n                        if (!this.tempArgs) return [3 /*break*/, 2];\n                        this.tempArgs.state = 'Changed';\n                        connector = args.source.connectors[0];\n                        nodeEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                        portEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                        this.tempArgs.oldValue = this.endPoint === 'ConnectorSourceEnd' ?\n                            { connectorSourceValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] } } :\n                            { connectorTargetValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] } };\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(trigger, this.tempArgs)];\n                    case 1:\n                        temparg = (_a.sent());\n                        if (temparg) {\n                            this.commandHandler.updateConnectorValue(temparg);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        if (!isBlazor() && this.isConnected && args.source.connectors) {\n                            connector = args.source.connectors[0];\n                            nodeEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                            portEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                            arg = {\n                                connector: cloneBlazorObject(connector),\n                                oldValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] },\n                                newValue: { nodeId: connector[nodeEndId], portId: connector[portEndId] }, cancel: false,\n                                state: 'Changed', connectorEnd: this.endPoint\n                            };\n                            if (connector[nodeEndId] !== this.oldConnector[nodeEndId]) {\n                                this.commandHandler.triggerEvent(DiagramEvent.connectionChange, arg);\n                                this.isConnected = false;\n                            }\n                        }\n                        this.checkPropertyValue();\n                        this.commandHandler.updateSelector();\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.changeAnnotationDrag(args);\n                        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n                            args.source.connectors.length &&\n                            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n                            (this.endPoint === 'ConnectorTargetEnd' &&\n                                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n                            oldValues = void 0;\n                            connector = void 0;\n                            if (args.source && args.source.connectors) {\n                                oldValues = {\n                                    x: this.prevPosition.x, y: this.prevPosition.y\n                                };\n                                connector = args.source.connectors[0];\n                            }\n                            targetPortName = void 0;\n                            targetNodeNode = void 0;\n                            if (args.target) {\n                                target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n                            }\n                            arg = {\n                                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n                            };\n                            if (isBlazor()) {\n                                arg = {\n                                    connector: cloneBlazorObject(connector), state: 'Completed', targetNode: targetNodeNode,\n                                    oldValue: cloneBlazorObject(oldValues), newValue: oldValues, cancel: arg.cancel, targetPort: targetPortName\n                                };\n                            }\n                            trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                            this.commandHandler.triggerEvent(trigger, arg);\n                            this.commandHandler.removeTerminalSegment(connector, true);\n                            if (this.undoElement && args.source) {\n                                obj = void 0;\n                                obj = cloneObject(args.source);\n                                entry = {\n                                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                                    category: 'Internal'\n                                };\n                                this.commandHandler.addHistoryEntry(entry);\n                            }\n                        }\n                        else if (!(this instanceof ConnectorDrawingTool) &&\n                            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n                            if (this.undoElement && args.source) {\n                                obj = void 0;\n                                obj = cloneObject(args.source);\n                                entry = {\n                                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                                };\n                                this.commandHandler.addHistoryEntry(entry);\n                            }\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        this.canCancel = undefined;\n                        this.tempArgs = undefined;\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /* tslint:disable */\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var tempArgs;\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connectors), state: 'Start', targetNode: targetNode,\n                    oldValue: oldValue, newValue: oldValue, cancel: arg.cancel, targetPort: targetPort\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = { x: this.currentPosition.x, y: this.currentPosition.y, };\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Progress', targetNode: targetNodeId,\n                    oldValue: oldValue, newValue: newValue, cancel: arg.cancel, targetPort: targetPortId\n                };\n            }\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        tempArgs = this.commandHandler.disConnect(args.source, this.endPoint, this.canCancel);\n                        this.isConnected = true;\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            tempArgs = this.commandHandler.connect(this.endPoint, args, this.canCancel);\n                            this.isConnected = true;\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.isConnected = true;\n                            tempArgs = this.commandHandler.connect(this.endPoint, args, this.canCancel);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.isConnected = true;\n                    tempArgs = this.commandHandler.disConnect(args.source, this.endPoint, this.canCancel);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n            if (tempArgs) {\n                this.tempArgs = tempArgs;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.canCancel = false;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        var oldValues;\n        if (isBlazor()) {\n            this.startPosition = this.currentPosition = this.prevPosition = args.position;\n            this.initialOffset = { x: 0, y: 0 };\n            if (args.source) {\n                oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n            }\n            var arg = {\n                source: cloneObject(args.source), state: 'Start', oldValue: oldValues, newValue: {},\n                target: cloneObject(args.target), targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.tempArgs = arg;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var oldValues, newValues, arg, blazorArgs, tx, ty, obj, historyAdded, object, redoObject, wrapper, arg, entry, entry_1, snappedPoint, arg, nodes, isEndGroup, i, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(isBlazor() && this.objectType !== 'Port')) return [3 /*break*/, 2];\n                        if (args.source) {\n                            newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                            oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        }\n                        arg = {\n                            source: cloneBlazorObject(args.source), state: 'Completed',\n                            oldValue: cloneBlazorObject(this.tempArgs.oldValue), newValue: cloneBlazorObject(newValues),\n                            target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                            allowDrop: true, cancel: false\n                        };\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg)];\n                    case 1:\n                        blazorArgs = _a.sent();\n                        if (blazorArgs && blazorArgs.cancel) {\n                            this.canCancel = true;\n                        }\n                        if (this.canCancel) {\n                            tx = this.tempArgs.oldValue.offsetX - args.source.wrapper.offsetX;\n                            ty = this.tempArgs.oldValue.offsetY - args.source.wrapper.offsetY;\n                            this.commandHandler.dragSelectedObjects(tx, ty);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.checkPropertyValue();\n                        historyAdded = false;\n                        redoObject = { nodes: [], connectors: [] };\n                        if (!(this.objectType !== 'Port')) return [3 /*break*/, 7];\n                        if (args.source instanceof Node || args.source instanceof Connector) {\n                            if (args.source instanceof Node) {\n                                redoObject.nodes.push(cloneObject(args.source));\n                            }\n                            else {\n                                redoObject.connectors.push(cloneObject(args.source));\n                            }\n                            obj = cloneObject(redoObject);\n                            wrapper = args.source.wrapper;\n                            obj.offsetX = wrapper.offsetX;\n                            obj.offsetY = wrapper.offsetY;\n                        }\n                        else {\n                            obj = cloneObject(args.source);\n                        }\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source || this.commandHandler.renderContainerHelper(args.source);\n                        if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                            || (object.id !== 'helper')) {\n                            if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY ||\n                                object.sourcePoint !== this.undoElement.sourcePoint\n                                || object.targetPoint !== this.undoElement.targetPoint) {\n                                if (args.source) {\n                                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                                }\n                                arg = {\n                                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                                };\n                                arg = {\n                                    source: cloneBlazorObject(args.source), state: 'Completed',\n                                    oldValue: cloneBlazorObject(oldValues), newValue: cloneBlazorObject(newValues),\n                                    target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                                    allowDrop: arg.allowDrop, cancel: arg.cancel\n                                };\n                                if (isBlazor()) {\n                                    arg = this.getBlazorPositionChangeEventArgs(arg, this.currentTarget);\n                                }\n                                if (!isBlazor()) {\n                                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                                }\n                                if (!isPreventHistory) {\n                                    this.commandHandler.startGroupAction();\n                                    historyAdded = true;\n                                    entry = {\n                                        type: 'PositionChanged',\n                                        redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                                    };\n                                    if (obj.nodes[0] && obj.nodes[0].processId) {\n                                        entry_1 = {\n                                            type: 'SizeChanged', category: 'Internal',\n                                            undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                                        };\n                                        this.commandHandler.addHistoryEntry(entry_1);\n                                    }\n                                    this.commandHandler.addHistoryEntry(entry);\n                                }\n                            }\n                        }\n                        snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.removeHighlighter();\n                        if (!(args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                            this.commandHandler.isDroppable(args.source, this.currentTarget))) return [3 /*break*/, 6];\n                        this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                        arg = {\n                            element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                        };\n                        if (!isBlazor()) return [3 /*break*/, 4];\n                        arg = getDropEventArguements(args, arg);\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.drop, arg)];\n                    case 3:\n                        arg = (_a.sent()) || arg;\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                        _a.label = 5;\n                    case 5:\n                        if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                            nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                            isEndGroup = false;\n                            for (i = 0; i < nodes.length; i++) {\n                                if (!nodes[i].container) {\n                                    isEndGroup = true;\n                                    this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                                    this.commandHandler.renderContainerHelper(nodes[i]);\n                                }\n                            }\n                            if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                                this.commandHandler.endGroupAction();\n                            }\n                        }\n                        _a.label = 6;\n                    case 6:\n                        if (args.source && this.currentTarget) {\n                            this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n                        }\n                        this.commandHandler.updateSelector();\n                        if (historyAdded && !this.commandHandler.isContainer) {\n                            this.commandHandler.endGroupAction();\n                        }\n                        return [3 /*break*/, 8];\n                    case 7:\n                        redoObject.nodes.push(cloneObject(args.source));\n                        args.portId = this.portId;\n                        obj = cloneObject(redoObject);\n                        entry = {\n                            type: 'PortPositionChanged', objectId: this.portId,\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        this.commandHandler.addHistoryEntry(entry);\n                        _a.label = 8;\n                    case 8:\n                        this.commandHandler.updateBlazorSelector();\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MoveTool.prototype.getBlazorPositionChangeEventArgs = function (args, target) {\n        args = {\n            source: cloneBlazorObject(args.source), state: args.state, oldValue: args.oldValue, newValue: args.newValue,\n            target: getObjectType(target) === Connector ? { connector: cloneBlazorObject(target) }\n                : { node: cloneBlazorObject(target) },\n            targetPosition: this.currentPosition, allowDrop: true, cancel: false\n        };\n        return args;\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        arg = {\n            source: cloneBlazorObject(object), state: 'Start', oldValue: cloneBlazorObject(oldValues),\n            newValue: cloneBlazorObject(oldValues),\n            target: args.target, targetPosition: args.position, allowDrop: arg.allowDrop, cancel: arg.cancel\n        };\n        if (isSame && !isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            if (isBlazor()) {\n                arg_1 = this.getBlazorPositionChangeEventArgs(arg_1, args.target);\n            }\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            }\n            if (!arg_1.cancel && !this.canCancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        if (isBlazor()) {\n            var object = void 0;\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: cloneBlazorObject(args.source), state: 'Start', oldValue: oldValue, newValue: undefined, cancel: false\n            };\n            var temparg = arg;\n            this.tempArgs = temparg;\n            if (this.tempArgs && this.tempArgs.cancel) {\n                this.canCancel = true;\n            }\n        }\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var object_2, oldValue, newValue, arg, args1, object, oldValue, arg, obj, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.checkPropertyValue();\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        object_2 = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        oldValue = { rotateAngle: this.tempArgs.oldValue.rotateAngle };\n                        newValue = { rotateAngle: object_2.wrapper.rotateAngle };\n                        arg = {\n                            source: cloneBlazorObject(args.source), state: 'Completed', oldValue: oldValue, newValue: newValue, cancel: false\n                        };\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg)];\n                    case 1:\n                        args1 = _a.sent();\n                        if (args1 && args1.cancel) {\n                            this.canCancel = true;\n                        }\n                        if (this.canCancel) {\n                            this.commandHandler.rotatePropertyChnage(this.tempArgs.oldValue.rotateAngle);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n                            oldValue = { rotateAngle: object.wrapper.rotateAngle };\n                            arg = {\n                                source: args.source, state: 'Completed', oldValue: oldValue,\n                                newValue: oldValue, cancel: false\n                            };\n                            if (!isBlazor())\n                                this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n                            obj = void 0;\n                            obj = cloneObject(args.source);\n                            entry = {\n                                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                                childTable: this.childTable\n                            };\n                            this.commandHandler.addHistoryEntry(entry);\n                            this.commandHandler.updateSelector();\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        this.canCancel = undefined;\n                        this.tempArgs = undefined;\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n            }\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        var arg1 = {\n            source: cloneBlazorObject(args.source), state: 'Progress', oldValue: cloneBlazorObject(oldValue),\n            newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        if (!isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg1);\n        }\n        if ((!isBlazor() && !arg1.cancel) || (isBlazor() && !this.canCancel)) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.canCancel = false;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        var oldValues;\n        if (isBlazor()) {\n            this.startPosition = this.currentPosition = this.prevPosition = args.position;\n            this.currentElement = args.source;\n            this.initialBounds.x = args.source.wrapper.offsetX;\n            this.initialBounds.y = args.source.wrapper.offsetY;\n            this.initialBounds.height = args.source.wrapper.actualSize.height;\n            this.initialBounds.width = args.source.wrapper.actualSize.width;\n            if (args.source) {\n                oldValues = {\n                    offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                };\n            }\n            var arg = {\n                source: cloneBlazorObject(args.source), state: 'Start', oldValue: oldValues, newValue: cloneBlazorObject(this.currentElement), cancel: false\n            };\n            this.tempArgs = arg;\n        }\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var obj, oldValues, arg, blazarArgs, scaleWidth, scaleHeight, object, deltaValues, oldValue, arg, obj, entry, entry_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!isBlazor()) return [3 /*break*/, 3];\n                        obj = cloneObject(args.source);\n                        oldValues = {\n                            width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height,\n                            offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY\n                        };\n                        arg = {\n                            oldValue: this.tempArgs.oldValue, newValue: oldValues, cancel: false,\n                            source: cloneBlazorObject(args.source), state: 'Completed'\n                        };\n                        if (!!this.canCancel) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg)];\n                    case 1:\n                        blazarArgs = _a.sent();\n                        if (blazarArgs && blazarArgs.cancel) {\n                            scaleWidth = this.tempArgs.oldValue.width / obj.wrapper.actualSize.width;\n                            scaleHeight = this.tempArgs.oldValue.height / obj.wrapper.actualSize.height;\n                            this.commandHandler.scaleSelectedItems(scaleWidth, scaleHeight, this.getPivot(this.corner));\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.tempArgs = undefined;\n                        this.canCancel = undefined;\n                        _a.label = 3;\n                    case 3:\n                        this.checkPropertyValue();\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.updateSelector();\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if ((this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY)) {\n                            if (!isBlazor()) {\n                                deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n                                this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n                                oldValue = {\n                                    offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                                };\n                                arg = {\n                                    source: cloneBlazorObject(args.source), state: 'Completed',\n                                    oldValue: oldValue, newValue: oldValue, cancel: false\n                                };\n                                this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n                            }\n                            obj = cloneObject(args.source);\n                            entry = {\n                                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                                childTable: this.childTable\n                            };\n                            if (!isPreventHistory) {\n                                this.commandHandler.startGroupAction();\n                                this.commandHandler.addHistoryEntry(entry);\n                                if (obj.nodes[0] && obj.nodes[0].processId) {\n                                    entry_2 = {\n                                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                                        undoObject: this.undoParentElement, category: 'Internal'\n                                    };\n                                    this.commandHandler.addHistoryEntry(entry_2);\n                                }\n                                this.commandHandler.endGroupAction();\n                            }\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/, !this.blocked];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            }\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        var arg1;\n        arg1 = {\n            source: cloneBlazorObject(source), state: 'Progress',\n            oldValue: cloneBlazorObject(oldValue), newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        if (!isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg1);\n        }\n        if (arg1.cancel || this.canCancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        this.commandHandler.setFocus();\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.commandHandler.updateBlazorSelector();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /** @private */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                _super.prototype.mouseDown.call(this, args);\n                this.inAction = true;\n                this.commandHandler.setFocus();\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if ((args.target || (args.actualObject && args.sourceWrapper && checkPort(args.actualObject, args.sourceWrapper)))\n                && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.diagram.allowServerDataBinding = false;\n                this.commandHandler.connect(this.endPoint, args);\n                this.commandHandler.diagram.allowServerDataBinding = true;\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.checkPropertyValue();\n                if (this.drawingObject && this.drawingObject instanceof Connector) {\n                    this.commandHandler.addObjectToDiagram(this.drawingObject);\n                    this.drawingObject = null;\n                }\n                this.commandHandler.updateBlazorSelector();\n                this.inAction = false;\n                _super.prototype.mouseUp.call(this, args);\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            if (isBlazor() && node.shape.type === 'Basic') {\n                node.shape.basicShape = 'Polygon';\n            }\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                var drawObject = this.drawingObject;\n                drawObject.segments[drawObject.segments.length - 1].point = { x: 0, y: 0 };\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3, cloneBlazorObject } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        var connectors;\n        var edit = true;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        if (args.info) {\n            edit = args.info.ctrlKey && args.actualObject.type !== 'Orthogonal';\n        }\n        if (connectors && edit) {\n            this.inAction = true;\n            this.undoElement = cloneObject(args.source);\n            _super.prototype.mouseDown.call(this, args);\n            // Sets the selected segment         \n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                if (this.endPoint === 'OrthoThumb') {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var segPoint = { x: 0, y: 0 };\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(this.currentPosition, segPoint, 30)) {\n                            this.selectedSegment = segment;\n                            this.segmentIndex = j;\n                        }\n                    }\n                }\n                else {\n                    if (contains(this.currentPosition, segment.point, 10)) {\n                        this.selectedSegment = segment;\n                    }\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: args.cancel\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            args = {\n                element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            this.commandHandler.enableServerDataBinding(false);\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n            this.commandHandler.enableServerDataBinding(true);\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel, element: cloneBlazorObject(obj),\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                element: cloneBlazorObject(obj), addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        var args1;\n        args1 = {\n            element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n            type: 'Addition', cancel: args.cancel\n        };\n        if (isBlazor()) {\n            args1 = {\n                element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n                type: 'Addition', cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args1);\n        if (!args1.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from '../objects/node';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction, DiagramConstraints } from '../enum/enum';\nimport { BlazorAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes, cloneBlazorObject, checkPort } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints, RealAction } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.previousAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.keyArgs = {};\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x + diagramCanvas.scrollLeft, y: y + diagramCanvas.scrollTop })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x + diagramCanvas.scrollLeft, y: y + diagramCanvas.scrollTop })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.checkPreviousAction = function () {\n        if (this.action !== this.previousAction && this.diagram.selectedItems.userHandles.length) {\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (this.previousAction && this.diagram.selectedItems.userHandles[i]) {\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseLeave);\n                    this.previousAction = 'None';\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkUserHandleEvent = function (eventName) {\n        if (this.diagram.selectedItems && this.diagram.selectedItems.userHandles.length > 0) {\n            var currentAction = (eventName === DiagramEvent.onUserHandleMouseLeave) ? this.previousAction : this.action;\n            var arg = { element: undefined };\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if ((currentAction === this.diagram.selectedItems.userHandles[i].name) ||\n                    (eventName === DiagramEvent.onUserHandleMouseUp && currentAction === 'Select')) {\n                    arg.element = this.diagram.selectedItems.userHandles[i];\n                    if (eventName === DiagramEvent.onUserHandleMouseEnter) {\n                        this.previousAction = this.action;\n                    }\n                    if (eventName === DiagramEvent.onUserHandleMouseDown) {\n                        this.userHandleObject = this.diagram.selectedItems.userHandles[i].name;\n                    }\n                    var element = document.getElementById(this.diagram.selectedItems.userHandles[i].name + '_userhandle');\n                    if (eventName === DiagramEvent.onUserHandleMouseUp) {\n                        if (this.commandHandler.isUserHandle(this.currentPosition)\n                            && element && element.id === this.userHandleObject + '_userhandle') {\n                            this.diagram.triggerEvent(eventName, arg);\n                        }\n                    }\n                    else {\n                        this.diagram.triggerEvent(eventName, arg);\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (isBlazor()) {\n            this.commandHandler.oldSelectedObjects = cloneObject(this.diagram.selectedItems);\n        }\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseDown);\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: cloneBlazorObject(this.diagram), position: cloneBlazorObject(this.currentPosition),\n                    count: evt.buttons, actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, this.currentPosition);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    DiagramEventHandler.prototype.isSwimlaneElements = function (obj) {\n        if (obj && (obj.isLane || obj.isPhase || obj.isHeader)) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                            }\n                            this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            var canResetElement = true;\n                            if (!this.isSwimlaneElements(obj)\n                                && (this.hoverElement && this.isSwimlaneElements(this.hoverElement))) {\n                                canResetElement = false;\n                            }\n                            this.hoverElement = canResetElement ? obj : this.hoverElement;\n                            if (canResetElement) {\n                                this.elementEnter(this.currentPosition, false);\n                            }\n                            else {\n                                this.hoverElement = obj;\n                            }\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseEnter);\n                    this.checkPreviousAction();\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool))\n                        && (obj instanceof Node && this.isSwimlaneElements(obj)) &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    var padding = this.getConnectorPadding(this.eventArgs);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source, padding);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseUp);\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    var padding = this.getConnectorPadding(this.eventArgs);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source, padding);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                        if (this.diagram.checkMenu && (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n                            this.diagram.contextMenuModule.contextMenu.open(evt.pageY, evt.pageX, this.diagram.element);\n                            this.diagram.checkMenu = false;\n                        }\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                if (this.eventArgs.clickCount !== 2) {\n                    this.commandHandler.updateSelectedNodeProperties(this.eventArgs.source);\n                }\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: cloneBlazorObject(this.eventArgs.source) || cloneBlazorObject(this.diagram),\n                    position: cloneBlazorObject(this.eventArgs.position), count: evt.detail,\n                    actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                if (isBlazor() && this.diagram.click) {\n                    arg = this.getBlazorClickEventArgs(arg);\n                }\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getConnectorPadding = function (eventArgs) {\n        var padding;\n        var targetObject = eventArgs.source;\n        if (targetObject && (targetObject instanceof Selector) && targetObject.connectors.length) {\n            var selectedConnector = targetObject.connectors[0];\n            padding = (selectedConnector.constraints & ConnectorConstraints.ConnectToNearByPort) ? selectedConnector.connectionPadding : 0;\n        }\n        return padding || 0;\n    };\n    DiagramEventHandler.prototype.getBlazorClickEventArgs = function (arg) {\n        arg = {\n            element: this.eventArgs.source ? { selector: cloneBlazorObject(this.eventArgs.source) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n            position: cloneBlazorObject(this.eventArgs.position), count: arg.count,\n            actualObject: this.eventArgs.actualObject ? { selector: cloneBlazorObject(this.eventArgs.actualObject) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n        };\n        if (this.eventArgs.source instanceof Node) {\n            arg.element.selector.nodes = [];\n            arg.element.selector.nodes.push(cloneBlazorObject(this.eventArgs.source));\n        }\n        else if (this.eventArgs.source instanceof Connector) {\n            arg.element.selector.connectors = [];\n            arg.element.selector.connectors.push(cloneBlazorObject(this.eventArgs.source));\n        }\n        return arg;\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height, addInfo: selectedNode.addInfo,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.elementLeave();\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n            this.diagram.remove(this.diagram.selectedObject.helperObject);\n            this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n        }\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        this.diagram.blazorActions = BlazorAction.interaction;\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n        this.diagram.blazorActions = this.diagram.blazorActions & ~BlazorAction.interaction;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var inAction = 'inAction';\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (isBlazor() || (canExecute &&\n                                canExecute({\n                                    'keyDownEventArgs': KeyboardEvent,\n                                    parameter: command.parameter\n                                }))) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                    else if (this.inAction && this.diagram.drawingObject && this.tool && this.tool[inAction]) {\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.tool = null;\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    if (this.diagram.tool !== DiagramTools.ZoomPan) {\n                                        // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                        //     command.execute()\n                                        // } else {\n                                        var execute = getFunction(command.execute);\n                                        execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    }\n                                    // }\n                                }\n                                if (isBlazor()) {\n                                    var arg = { gesture: command.gesture };\n                                    this.diagram.triggerEvent(DiagramEvent.commandExecute, arg);\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        var selectedObject = (this.diagram.selectedItems.nodes.length) ?\n            this.diagram.selectedItems.nodes : this.diagram.selectedItems.connectors;\n        this.keyArgs = {\n            element: cloneBlazorObject(this.diagram.selectedItems),\n            key: evt.key, keyCode: evt.keyCode ? evt.keyCode : evt.which,\n        };\n        this.getKeyModifier(this.keyArgs, evt);\n        if ((this.diagram.diagramActions & DiagramAction.TextEdit)) {\n            this.getlabel(this.keyArgs, evt);\n        }\n        this.diagram.triggerEvent(DiagramEvent.keyDown, this.keyArgs);\n    };\n    DiagramEventHandler.prototype.getlabel = function (args, evt) {\n        var label = this.diagram.activeLabel;\n        args.target = this.diagram.element.id + '_editBox';\n        var node = this.diagram.nameTable[label.parentId];\n        args.text = document.getElementById(this.diagram.element.id + '_editBox').value;\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (node.annotations[i].id === label.id) {\n                args.label = node.annotations[i];\n                break;\n            }\n        }\n    };\n    DiagramEventHandler.prototype.getKeyModifier = function (args, evt) {\n        args.keyModifiers = KeyModifiers.None;\n        if (evt.ctrlKey) {\n            args.keyModifiers |= KeyModifiers.Control;\n        }\n        if (evt.shiftKey) {\n            args.keyModifiers |= KeyModifiers.Shift;\n        }\n        if (evt.altKey) {\n            args.keyModifiers |= KeyModifiers.Alt;\n        }\n        if (this.isMetaKey(evt)) {\n            args.keyModifiers |= KeyModifiers.Meta;\n        }\n    };\n    DiagramEventHandler.prototype.keyUp = function (evt) {\n        this.keyArgs = {\n            element: cloneBlazorObject(this.diagram.selectedItems), key: evt.key, keyCode: evt.keyCode ? evt.keyCode : evt.which,\n        };\n        var selectedObject = (this.diagram.selectedItems.nodes.length) ?\n            this.diagram.selectedItems.nodes : this.diagram.selectedItems.connectors;\n        this.getKeyModifier(this.keyArgs, evt);\n        if ((this.diagram.diagramActions & DiagramAction.TextEdit)) {\n            this.getlabel(this.keyArgs, evt);\n        }\n        this.diagram.triggerEvent(DiagramEvent.keyUp, this.keyArgs);\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.currentPosition = this.eventArgs.position;\n            var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n            this.eventArgs.target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: {}\n        };\n        if (!isBlazor()) {\n            arg = {\n                targets: cloneBlazorObject(target),\n                element: cloneBlazorObject((this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source),\n                actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n            };\n        }\n        if (isBlazor() && (this.diagram.mouseEnter || this.diagram.mouseOver)) {\n            arg.actualObject = getObjectType(this.eventArgs.actualObject) === Connector ? {\n                connector: cloneBlazorObject(this.eventArgs.actualObject)\n            }\n                : {\n                    node: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n            arg.targets.connector = [];\n            arg.targets.node = [];\n            this.getBlazorCollectionObject(target, arg);\n        }\n        if (this.lastObjectUnderMouse && this.diagram.mouseLeave\n            && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = {\n                targets: undefined, element: cloneBlazorObject(this.lastObjectUnderMouse), actualObject: undefined\n            };\n            if (isBlazor()) {\n                arg_1 = {\n                    targets: undefined,\n                    element: getObjectType(this.lastObjectUnderMouse) === Connector ? { connector: cloneBlazorObject(target) }\n                        : {\n                            node: cloneBlazorObject(this.lastObjectUnderMouse)\n                        },\n                    actualObject: undefined\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            if (this.eventArgs.actualObject !== undefined) {\n                this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n            }\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.getBlazorCollectionObject = function (obj, arg1) {\n        if (obj) {\n            for (var i = 0; i < obj.length; i++) {\n                if (getObjectType(obj[i]) === Connector) {\n                    arg1.targets.connector.push(cloneBlazorObject(obj[i]));\n                }\n                else {\n                    arg1.targets.node.push(cloneBlazorObject(obj[i]));\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                        position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.wrapper.children[1].id.split('_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                position: this.currentPosition, count: evt.detail\n            };\n            if (isBlazor()) {\n                var selector = void 0;\n                if (obj instanceof Node) {\n                    selector = { nodes: [cloneBlazorObject(obj)] };\n                }\n                else if (obj instanceof Connector) {\n                    selector = { connectors: [cloneBlazorObject(obj)] };\n                }\n                else {\n                    selector = cloneBlazorObject(obj);\n                }\n                arg = {\n                    source: obj ? { selector: selector } : { diagram: cloneBlazorObject(this.diagram) },\n                    position: this.currentPosition, count: evt.detail\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || (node && node.shape.type === 'SwimLane')) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source, padding) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition, padding);\n            if (wrapper && obj.ports && obj.ports.length &&\n                !checkPort(obj, wrapper) && (source instanceof Selector) && source.connectors.length) {\n                var currentConnector = source.connectors[0];\n                if ((currentConnector.constraints & ConnectorConstraints.ConnectToNearByPort) &&\n                    !(currentConnector.constraints & ConnectorConstraints.ConnectToNearByNode)) {\n                    wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition, 0);\n                    if (!wrapper) {\n                        obj = null;\n                    }\n                }\n            }\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var basicShape = 'basicShape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && (this.diagram.drawingObject.shape[shape] === 'Polygon' ||\n                    (isBlazor() && this.diagram.drawingObject.shape[basicShape] === 'Polygon')) &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position, padding);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.selectObjects([obj]);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                        if (parentNode && parentNode.isLane && (obj.constraints & NodeConstraints.AllowMovingOutsideLane)) {\n                            var swimlane = this.diagram.getObject(parentNode.parentId);\n                            var laneId = swimlane.id + swimlane.shape.lanes[0].id + '0';\n                            var firstlane = this.diagram.getObject(laneId);\n                            var x = firstlane.wrapper.bounds.x;\n                            var y = firstlane.wrapper.bounds.y;\n                            var width = swimlane.wrapper.bounds.bottomRight.x - x;\n                            var height = swimlane.wrapper.bounds.bottomRight.y - y;\n                            var swimlaneBounds = new Rect(x, y, width, height);\n                            if (swimlaneBounds.containsPoint(this.currentPosition)) {\n                                obj.offsetX = helperObject.offsetX;\n                                obj.offsetY = helperObject.offsetY;\n                                obj.width = helperObject.width;\n                                obj.height = helperObject.height;\n                                obj.rotateAngle = helperObject.rotateAngle;\n                            }\n                        }\n                        else {\n                            obj.offsetX = helperObject.offsetX;\n                            obj.offsetY = helperObject.offsetY;\n                            if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                                if (obj.shape.type !== 'Bpmn' ||\n                                    (obj.shape.type === 'Bpmn' && obj.shape.shape !== 'TextAnnotation')) {\n                                    obj.width = helperObject.width;\n                                    obj.height = helperObject.height;\n                                }\n                            }\n                            obj.rotateAngle = helperObject.rotateAngle;\n                        }\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if ((this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting))\n                        && (!checkParentAsContainer(this.diagram, obj, true))) {\n                        if (obj.children) {\n                            this.diagram.realActions |= RealAction.EnableGroupAction;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            width: obj.width, height: obj.height,\n                            offsetX: obj.offsetX, offsetY: obj.offsetY\n                        });\n                        if (obj.children) {\n                            this.diagram.realActions &= ~RealAction.EnableGroupAction;\n                        }\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        if (obj && (obj.isPhase || obj.isLane ||\n            (obj.shape && obj.shape.type === 'SwimLane'))) {\n            this.diagram.updateDiagramElementQuad();\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill,\n                        strokeColor: (node.style.strokeColor === 'black') ? '#ffffff00' : node.style.strokeColor },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.clearSelection();\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var endPadding = (source && (source instanceof Connector) &&\n            ((source.constraints & ConnectorConstraints.ConnectToNearByNode) ||\n                (source.constraints & ConnectorConstraints.ConnectToNearByPort)) && source.connectionPadding) || 0;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50 - endPadding, pt.y - 50 - endPadding, 100 + endPadding, 100 + endPadding));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point, endPadding);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point, endPadding)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, endPadding || padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var endPoint = 'endPoint';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    var tool = diagram[eventHandler].tool;\n                    var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                    if (action === 'Draw' && portElement && (objects[i] instanceof Node) && !checkPort(objects[i], portElement)) {\n                        if (((tool && tool[endPoint] === 'ConnectorSourceEnd') && !canOutConnect(objects[i])) ||\n                            ((tool && tool[endPoint] === 'ConnectorTargetEnd') && !canInConnect(objects[i]))) {\n                            return actualTarget;\n                        }\n                    }\n                    if (objects[i] instanceof Node && ((canOutConnect(objects[i]) || (canPortOutConnect(outPort)) || canInConnect(objects[i]) || (canPortInConnect(inPort))) ||\n                        (action === 'PortDraw' && (tool instanceof ConnectTool) && tool[endPoint] == 'ConnectorTargetEnd' &&\n                            (canInConnect(objects[i]) || (canPortInConnect(inPort)))))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if ((action === 'Select' || action === 'Pan') && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        var objj1 = objects[i - 1];\n                        if (objects[i - 1] instanceof Node && objj1.ports) {\n                            var portElement_1 = this.findTargetElement(objj1.wrapper, position, undefined);\n                            if ((portElement_1 && (portElement_1.id.match('_icon_content_shape$') || portElement_1.id.match('_icon_content_rect$')))) {\n                                return objj1;\n                            }\n                            for (var j = 0; j < objj1.ports.length; j++) {\n                                if (portElement_1 && portElement_1.id.match('_' + objj1.ports[j].id + '$')) {\n                                    if (canDraw(objj1.ports[j], diagram)) {\n                                        return objj1;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node || objects[i] instanceof Connector) {\n                        var portElement_2 = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'Pan') || ((portElement_2 && (portElement_2.id.match('_icon_content_shape$') || portElement_2.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position, padding) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position, padding);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position, padding || 0)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position, padding || 0)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { Diagram } from '../../diagram/diagram';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction, getIndex } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement, cloneBlazorObject, getUserHandlePosition, cloneSelectedObjects } from './../utility/diagram-util';\nimport { updateDefaultValues } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from '../objects/node';\nimport { hasSelection, isSelected, hasSingleConnection, contains } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { BlazorAction } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction, RealAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector, canShowCorner } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove, isBlazor } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, canLaneInterchange, findLane } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\nimport { DeepDiffMapper } from '../utility/diff-map';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        // private newNodeObject: Object[] = [];\n        // private newConnectorObject: Object[] = [];\n        /**   @private  */\n        this.diagramObject = {};\n        /**   @private  */\n        this.newSelectedObjects = {};\n        /**   @private  */\n        this.oldSelectedObjects = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /**   @private  */\n        this.deepDiffer = new DeepDiffMapper();\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /** @private */\n    CommandHandler.prototype.setFocus = function () {\n        document.getElementById(this.diagram.element.id).focus();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorValue = function (args) {\n        if (args.cancel) {\n            var newChanges = {};\n            var oldChanges = {};\n            var connector = this.diagram.nameTable[args.connector.id];\n            var nodeEndId = args.connectorEnd === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n            var portEndId = args.connectorEnd === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n            var connectionEnd = args.connectorEnd === 'ConnectorTargetEnd';\n            var newValue = connectionEnd ? args.newValue.connectorTargetValue : args.newValue.connectorSourceValue;\n            var oldValue = connectionEnd ? args.oldValue.connectorTargetValue : args.oldValue.connectorSourceValue;\n            oldChanges[nodeEndId] = newValue.nodeId;\n            oldChanges[portEndId] = newValue.portId;\n            newChanges[nodeEndId] = oldValue.nodeId;\n            newChanges[portEndId] = oldValue.portId;\n            if (args.cancel && args.connectorEnd !== 'ConnectorTargetEnd') {\n                connector.sourceID = oldValue.nodeId;\n                if (args.connector.sourcePortID) {\n                    connector.sourcePortID = oldValue.portId;\n                }\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            }\n            if (args.cancel && args.connectorEnd === 'ConnectorTargetEnd') {\n                if (args.connector.targetPortID) {\n                    connector.targetPortID = oldValue.portId;\n                }\n                connector.targetID = oldValue.nodeId;\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var temparg;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n                            event === DiagramEvent.connectionChange) {\n                            if (this.diagram.currentSymbol) {\n                                return [2 /*return*/];\n                            }\n                            if (event === DiagramEvent.drop) {\n                                args.source = cloneBlazorObject(this.diagram);\n                            }\n                            if (this.diagram.currentDrawingObject && event !== DiagramEvent.positionChange) {\n                                return [2 /*return*/];\n                            }\n                        }\n                        return [4 /*yield*/, this.diagram.triggerEvent(event, args)];\n                    case 1:\n                        temparg = _a.sent();\n                        return [2 /*return*/, temparg];\n                }\n            });\n        });\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: cloneBlazorObject(args.source), target: cloneBlazorObject(args.target),\n                mousePosition: cloneBlazorObject(currentPosition), diagram: cloneBlazorObject(this.diagram)\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint, canCancel) {\n        var checkBlazor = isBlazor();\n        var oldChanges = {};\n        var newChanges = {};\n        var returnargs;\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (isBlazor()) {\n                this.diagram.insertValue(cloneObject(connector), false);\n            }\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    returnargs = this.connectionEventChange(connector, oldChanges, newChanges, endPoint, canCancel);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: cloneBlazorObject(connector), oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connector: cloneBlazorObject(oldChanges) },\n                        newValue: { connector: cloneBlazorObject(newChanges) },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    returnargs = arg;\n                }\n                if (!checkBlazor) {\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    if (isBlazor()) {\n                        arg = {\n                            connector: cloneBlazorObject(connector), oldValue: { connector: oldChanges },\n                            newValue: { connector: newChanges }, cancel: false, state: 'Changed', connectorEnd: endPoint\n                        };\n                        returnargs = arg;\n                    }\n                    if (!checkBlazor) {\n                        this.triggerEvent(DiagramEvent.connectionChange, arg);\n                    }\n                }\n            }\n        }\n        return returnargs;\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint, canCancel) {\n        var checkBlazor = isBlazor();\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var connectedNode;\n        if (this.enableCloneObject) {\n            connectedNode = this.diagram.nameTable[newChanges[nodeEndId]];\n            var nodeObject = cloneObject(connectedNode);\n            this.diagram.insertValue(nodeObject, true);\n        }\n        var returnargs;\n        var arg = {\n            cancel: false, state: 'Changing', connectorEnd: endPoint,\n            connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }\n        };\n        if (isBlazor()) {\n            arg = {\n                connector: cloneBlazorObject(connector),\n                cancel: false, state: 'Changing', connectorEnd: endPoint,\n                oldValue: undefined, newValue: undefined\n            };\n            if (endPoint === 'ConnectorSourceEnd') {\n                arg.oldValue = {\n                    connectorSourceValue: {\n                        portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId]\n                    }\n                };\n                arg.newValue = {\n                    connectorSourceValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId], }\n                };\n            }\n            else {\n                arg.oldValue = {\n                    connectorTargetValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] }\n                };\n                arg.newValue = {\n                    connectorTargetValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }\n                };\n            }\n            returnargs = arg;\n        }\n        if (!checkBlazor) {\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n        if (arg.cancel || (isBlazor() && canCancel)) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: {\n                    nodeId: newChanges[nodeEndId],\n                    portId: newChanges[portEndId]\n                },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: undefined,\n                    newValue: undefined,\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (endPoint === 'ConnectorSourceEnd') {\n                    arg.newValue = {\n                        connectorSourceValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                    arg.oldValue = {\n                        connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                }\n                else {\n                    arg.oldValue = {\n                        connectorTargetValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId], }\n                    };\n                    arg.newValue = {\n                        connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                }\n                returnargs = arg;\n            }\n        }\n        if (this.enableCloneObject) {\n            if (connectedNode === undefined) {\n                connectedNode = this.diagram.nameTable[oldChanges[nodeEndId]];\n                var nodeObject = cloneObject(connectedNode);\n                this.diagram.insertValue(nodeObject, true);\n            }\n        }\n        return returnargs;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && ((!isBlazor() && argsTarget.shape.shape === 'Activity') ||\n                (isBlazor() && argsTarget.shape.bpmnShape === 'Activity'))) {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                ((!isBlazor() && args.target.shape.shape !== 'TextAnnotation') ||\n                    (isBlazor() && args.target.shape.bpmnShape !== 'TextAnnotation'))) {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /* tslint:disable */\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args, canCancel) {\n        var checkBlazor;\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        var returnargs;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget((args.targetWrapper || args.sourceWrapper), (args.target || args.actualObject), endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            returnargs = this.connectionEventChange(connector, oldChanges, newChanges, endPoint, canCancel);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = (args.target && args.target.id || args.actualObject.id);\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: undefined,\n                    newValue: undefined,\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (endPoint === 'ConnectorSourceEnd') {\n                    arg.oldValue = {\n                        connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                    arg.newValue = {\n                        connectorSourceValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                }\n                else {\n                    arg.newValue = {\n                        connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                    arg.oldValue = {\n                        connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                }\n                returnargs = arg;\n            }\n            if (!checkBlazor) {\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n            if (arg.cancel || (isBlazor() && canCancel)) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        newValue: undefined,\n                        connector: cloneBlazorObject(connector),\n                        oldValue: undefined,\n                        cancel: false, state: 'Changing', connectorEnd: endPoint,\n                    };\n                    if (endPoint === 'ConnectorSourceEnd') {\n                        arg.oldValue = {\n                            connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                        };\n                        arg.newValue = {\n                            connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                        };\n                    }\n                    else {\n                        arg.oldValue = {\n                            connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                        };\n                        arg.newValue = {\n                            connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                        };\n                    }\n                }\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n        return returnargs;\n    };\n    /* tslint:enable */\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    CommandHandler.prototype.UpdateBlazorDiagramModelLayers = function (layer) {\n        var blazorInterop = 'sfBlazor';\n        var updatedModel = cloneBlazorObject(layer);\n        var blazor = 'Blazor';\n        if (window && window[blazor]) {\n            var obj = { 'methodName': 'UpdateBlazorDiagramModelLayers', 'diagramobj': JSON.stringify(updatedModel) };\n            window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects, isClone) {\n        if (isClone === void 0) { isClone = false; }\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        this.diagram.enableServerDataBinding(false);\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        this.diagram.enableServerDataBinding(true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        if (isClone) {\n            this.UpdateBlazorDiagramModelLayers(layer);\n        }\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer, null, true);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                if (!selectedItems[j].isPhase) {\n                    var node = clone(this.diagram.selectedItems.nodes[j]);\n                    if (node.wrapper && (node.offsetX !== node.wrapper.offsetX)) {\n                        node.offsetX = node.wrapper.offsetX;\n                    }\n                    if (node.wrapper && (node.offsetY !== node.wrapper.offsetY)) {\n                        node.offsetY = node.wrapper.offsetY;\n                    }\n                    var processTable = {};\n                    this.copyProcesses(node);\n                    obj.push(clone(node));\n                    var matrix = identityMatrix();\n                    rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                    if (node.children) {\n                        var childTable = this.clipboardData.childTable;\n                        var tempNode = void 0;\n                        var elements = [];\n                        var nodes = this.getAllDescendants(node, elements, true);\n                        for (var i = 0; i < nodes.length; i++) {\n                            tempNode = this.diagram.nameTable[nodes[i].id];\n                            var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                            var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                            if (tempNode instanceof Node) {\n                                clonedObject.offsetX = newOffset.x;\n                                clonedObject.offsetY = newOffset.y;\n                                clonedObject.rotateAngle -= node.rotateAngle;\n                            }\n                        }\n                        this.clipboardData.childTable = childTable;\n                    }\n                    if (node.shape.type === 'SwimLane') {\n                        var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                        var childTable = this.clipboardData.childTable;\n                        var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                        for (var i = 0; i < connectorsList.length; i++) {\n                            var connector = this.diagram.getObject(connectorsList[i]);\n                            childTable[connector.id] = clone(connector);\n                        }\n                    }\n                    if (node && node.isLane) {\n                        var childTable = this.clipboardData.childTable;\n                        var swimlane = this.diagram.getObject(node.parentId);\n                        var lane = findLane(node, this.diagram);\n                        childTable[node.id] = cloneObject(lane);\n                        childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                    }\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0\n                    && (!isBlazor() || isBlazor() && node.annotations[0].content !== '')) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                var copiedObject = [];\n                if (multiSelect) {\n                    this.diagram.isServerUpdate = true;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        copiedObject.push(newObj);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        copiedObject.push(newNode);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (multiSelect) {\n                    this.diagram.isServerUpdate = false;\n                    this.diagram.UpdateBlazorDiagramModelCollection(copiedItems[0], copiedObject);\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n            (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var oldProtectPropertyChangeValue;\n        if (isBlazor()) {\n            oldProtectPropertyChangeValue = this.diagram.getProtectPropertyChangeValue();\n            this.diagram.protectPropertyChange(true);\n        }\n        var newObj;\n        var cloneObject;\n        if (obj && obj.shape) {\n            if (obj.shape.type === 'Text') {\n                obj.width = this.diagram.drawingObject.width ? this.diagram.drawingObject.width : 50;\n                obj.height = this.diagram.drawingObject.height ? this.diagram.drawingObject.height : 20;\n            }\n        }\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n        }\n        if (isBlazor()) {\n            updateDefaultValues(newObj, cloneObject, (getObjectType(this.diagram.drawingObject) === Node) ? this.diagram.nodeDefaults : this.diagram.connectorDefaults);\n        }\n        this.diagram.initObject(newObj);\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        if (isBlazor()) {\n            this.diagram.protectPropertyChange(oldProtectPropertyChangeValue);\n        }\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.enableServerDataBinding = function (enable) {\n        this.diagram.enableServerDataBinding(enable);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    CommandHandler.prototype.updateArgsObject = function (obj, arg1, argValue) {\n        if (obj) {\n            var connector = void 0;\n            for (var i = 0; i < obj.length; i++) {\n                connector = (getObjectType(obj[i]) === Connector);\n                connector ? argValue.connectors.push(cloneBlazorObject(obj[i])) : argValue.nodes.push(cloneBlazorObject(obj[i]));\n            }\n        }\n    };\n    CommandHandler.prototype.updateSelectionChangeEventArgs = function (arg, obj, oldValue) {\n        if (isBlazor()) {\n            arg = {\n                cause: this.diagram.diagramActions, newValue: {}, oldValue: {},\n                state: arg.state, type: arg.type, cancel: false\n            };\n            var argOldValue = arg.oldValue;\n            var argNewValue = arg.newValue;\n            argOldValue.connectors = [];\n            argOldValue.nodes = [];\n            argNewValue.connectors = [];\n            argNewValue.nodes = [];\n            this.updateArgsObject(this.getSelectedObject(), arg, argNewValue);\n            this.updateArgsObject(oldValue, arg, argOldValue);\n            return arg;\n        }\n        return arg;\n    };\n    /** @private */\n    CommandHandler.prototype.isUserHandle = function (position) {\n        var handle = this.diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                if (obj.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj, this.diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj.size / (2 * this.diagram.scroller.transform.scale))) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        return __awaiter(this, void 0, void 0, function () {\n            var arg, select, canDoMultipleSelection, canDoSingleSelection, i, newObj, i_1, parentNode, blazorArgs, selectedObjects;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        arg = {\n                            oldValue: oldValue ? oldValue : this.getSelectedObject(),\n                            newValue: obj, cause: this.diagram.diagramActions,\n                            state: 'Changing', type: 'Addition', cancel: false\n                        };\n                        this.diagram.enableServerDataBinding(false);\n                        select = true;\n                        if (!isBlazor()) {\n                            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                        }\n                        canDoMultipleSelection = canMultiSelect(this.diagram);\n                        canDoSingleSelection = canSingleSelect(this.diagram);\n                        if (canDoSingleSelection || canDoMultipleSelection) {\n                            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                                if (obj.length === 1) {\n                                    this.clearSelection();\n                                }\n                                else {\n                                    return [2 /*return*/];\n                                }\n                            }\n                            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                                this.clearSelection();\n                                return [2 /*return*/];\n                            }\n                        }\n                        if (!!arg.cancel) return [3 /*break*/, 4];\n                        for (i = 0; i < obj.length; i++) {\n                            newObj = obj[i];\n                            if (newObj) {\n                                select = true;\n                                if (!hasSelection(this.diagram)) {\n                                    this.select(newObj, i > 0 || multipleSelection, true);\n                                }\n                                else {\n                                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                                        for (i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                                            parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                                            if (parentNode) {\n                                                parentNode = this.findParent(parentNode);\n                                                if (parentNode) {\n                                                    if (newObj.id === parentNode.id) {\n                                                        this.selectGroup(newObj);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    this.selectProcesses(newObj);\n                                    select = this.selectBpmnSubProcesses(newObj);\n                                    if (select) {\n                                        this.select(newObj, i > 0 || multipleSelection, true);\n                                    }\n                                }\n                            }\n                        }\n                        arg = {\n                            oldValue: oldValue ? oldValue : [],\n                            newValue: this.getSelectedObject(),\n                            cause: this.diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false,\n                        };\n                        this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n                        this.updateBlazorSelectorModel(oldValue);\n                        if (isBlazor() && this.diagram.selectionChange) {\n                            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue ? oldValue : []);\n                        }\n                        if (!!isBlazor()) return [3 /*break*/, 1];\n                        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.diagram.triggerEvent(DiagramEvent.selectionChange, arg)];\n                    case 2:\n                        blazorArgs = _a.sent();\n                        if (blazorArgs && blazorArgs.cancel) {\n                            selectedObjects = [];\n                            if (blazorArgs.oldValue.nodes.length > 0) {\n                                selectedObjects = blazorArgs.oldValue.nodes;\n                            }\n                            if (blazorArgs.oldValue.connectors.length > 0) {\n                                selectedObjects = selectedObjects.concat(blazorArgs.oldValue.connectors);\n                            }\n                            if (selectedObjects) {\n                                if (selectedObjects.length > 0) {\n                                    this.diagram.select(selectedObjects);\n                                }\n                                else {\n                                    this.clearSelection(true, true);\n                                }\n                            }\n                        }\n                        _a.label = 3;\n                    case 3:\n                        this.diagram.enableServerDataBinding(true);\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /** @private */\n    CommandHandler.prototype.updateBlazorSelector = function () {\n        if (isBlazor()) {\n            this.newSelectedObjects = cloneSelectedObjects(this.diagram);\n            var result = this.deepDiffer.map(cloneObject(this.newSelectedObjects), this.oldSelectedObjects);\n            var diffValue = this.deepDiffer.frameObject({}, result);\n            var diff = this.deepDiffer.removeEmptyValues(diffValue);\n            diff.nodes = [];\n            for (var i = 0; i < this.diagram.selectedItems.nodes.length; i++) {\n                diff.nodes.push(this.diagram.selectedItems.nodes[i].id);\n            }\n            diff.connectors = [];\n            for (var i = 0; i < this.diagram.selectedItems.connectors.length; i++) {\n                diff.connectors.push(this.diagram.selectedItems.connectors[i].id);\n            }\n            var blazorInterop = 'sfBlazor';\n            var blazor = 'Blazor';\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': { selectedItems: diff } };\n                window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            this.diagram.enableServerDataBinding(false);\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n            this.diagram.enableServerDataBinding(true);\n        }\n    };\n    CommandHandler.prototype.getObjectCollectionId = function (isNode, clearSelection) {\n        var id = [];\n        var i = 0;\n        var selectedObject = isNode ? this.diagram.selectedItems.nodes\n            : this.diagram.selectedItems.connectors;\n        while (!clearSelection && i < selectedObject.length) {\n            id[i] = selectedObject[i].id;\n            i++;\n        }\n        return id;\n    };\n    CommandHandler.prototype.updateBlazorSelectorModel = function (oldItemsCollection, clearSelection) {\n        var blazorInterop = 'sfBlazor';\n        if (window && window[blazorInterop]) {\n            var i = 0;\n            var nodes = [];\n            var connectors = [];\n            var oldItems = [];\n            while (oldItemsCollection && i < oldItemsCollection.length) {\n                oldItems[i] = oldItemsCollection[i].id;\n                i++;\n            }\n            i = 0;\n            nodes = this.getObjectCollectionId(true, clearSelection);\n            connectors = this.getObjectCollectionId(false, clearSelection);\n            var items = { nodes: nodes, connectors: connectors };\n            var newItems = cloneBlazorObject(items);\n            if (window[blazorInterop].updateDiagramCollection) {\n                window[blazorInterop].updateDiagramCollection.call(this.diagram, 'selectedItems', newItems, oldItems, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            if (!isBlazor()) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(objArray);\n            arg = {\n                oldValue: cloneBlazorObject(objArray), newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: arg.cancel\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    if (isBlazor()) {\n                        arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n                    }\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function (object) {\n        this.diagram.protectPropertyChange(true);\n        if (hasSelection(this.diagram) || object) {\n            var objectId = (object && object.id);\n            objectId = objectId || (this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id);\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var undoObject = cloneObject(this.diagram.selectedItems);\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n            var redoObject = cloneObject(this.diagram.selectedItems);\n            var entry = { type: 'SendToBack', category: 'Internal', undoObject: undoObject, redoObject: redoObject };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        this.diagram.protectPropertyChange(false);\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function (obj) {\n        this.diagram.protectPropertyChange(true);\n        if (hasSelection(this.diagram) || obj) {\n            var objectName = (obj && obj.id);\n            objectName = objectName || (this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id);\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var undoObject = cloneObject(this.diagram.selectedItems);\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n            var redoObject = cloneObject(this.diagram.selectedItems);\n            var entry = { type: 'BringToFront', category: 'Internal', undoObject: undoObject, redoObject: redoObject };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        this.diagram.protectPropertyChange(false);\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.orderCommands = function (isRedo, selector, action) {\n        var selectedObject = selector.nodes;\n        selectedObject = selectedObject.concat(selector.connectors);\n        if (isRedo) {\n            if (action === 'SendBackward') {\n                this.sendBackward(selectedObject[0]);\n            }\n            else if (action === 'SendForward') {\n                this.sendForward(selectedObject[0]);\n            }\n            else if (action === 'BringToFront') {\n                this.bringToFront(selectedObject[0]);\n            }\n            else if (action === 'SendToBack') {\n                this.sendToBack(selectedObject[0]);\n            }\n        }\n        else {\n            var startZIndex = selectedObject[0].zIndex;\n            var endZIndex = this.diagram.nameTable[selectedObject[0].id].zIndex;\n            var undoObject = selectedObject[0];\n            var layer = this.getObjectLayer(undoObject.id);\n            var layerIndex = layer.zIndex;\n            var zIndexTable = layer.zIndexTable;\n            if (action === 'SendBackward' || action === 'SendForward') {\n                for (var i = 0; i < selectedObject.length; i++) {\n                    var undoObject_1 = selectedObject[i];\n                    var layer_2 = this.diagram.layers.indexOf(this.getObjectLayer(undoObject_1.id));\n                    var node = this.diagram.nameTable[selectedObject[i].id];\n                    node.zIndex = undoObject_1.zIndex;\n                    this.diagram.layers[layer_2].zIndexTable[undoObject_1.zIndex] = undoObject_1.id;\n                }\n            }\n            else if (action === 'BringToFront') {\n                var k = 1;\n                for (var j = endZIndex; j > startZIndex; j--) {\n                    if (zIndexTable[j]) {\n                        if (!zIndexTable[j - k]) {\n                            zIndexTable[j - k] = zIndexTable[j];\n                            this.diagram.nameTable[zIndexTable[j - k]].zIndex = j;\n                            delete zIndexTable[j];\n                        }\n                        else {\n                            zIndexTable[j] = zIndexTable[j - k];\n                            this.diagram.nameTable[zIndexTable[j]].zIndex = j;\n                        }\n                    }\n                }\n            }\n            else if (action === 'SendToBack') {\n                for (var j = endZIndex; j < startZIndex; j++) {\n                    if (zIndexTable[j]) {\n                        if (!zIndexTable[j + 1]) {\n                            zIndexTable[j + 1] = zIndexTable[j];\n                            this.diagram.nameTable[zIndexTable[j + 1]].zIndex = j;\n                            delete zIndexTable[j];\n                        }\n                        else {\n                            zIndexTable[j] = zIndexTable[j + 1];\n                            this.diagram.nameTable[zIndexTable[j]].zIndex = j;\n                        }\n                    }\n                }\n            }\n            if (action === 'BringToFront' || action === 'SendToBack') {\n                var node = this.diagram.nameTable[selectedObject[0].id];\n                node.zIndex = undoObject.zIndex;\n                this.diagram.layers[layerIndex].zIndexTable[undoObject.zIndex] = undoObject.id;\n            }\n            if (this.diagram.mode === 'SVG') {\n                if (action === 'SendBackward') {\n                    this.moveObject(selectedObject[1].id, selectedObject[0].id);\n                }\n                else if (action === 'SendForward') {\n                    this.moveObject(selectedObject[0].id, selectedObject[1].id);\n                }\n                else if (action === 'BringToFront') {\n                    this.moveObject(selectedObject[0].id, zIndexTable[selectedObject[0].zIndex + 1]);\n                }\n                else if (action === 'SendToBack') {\n                    var layer_3 = this.getObjectLayer(selectedObject[0].id);\n                    for (var i = 0; i <= selectedObject[0].zIndex; i++) {\n                        if (layer_3.objects[i] !== selectedObject[0].id) {\n                            this.moveSvgNode(layer_3.objects[i], selectedObject[0].id);\n                            this.updateNativeNodeIndex(selectedObject[0].id);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    CommandHandler.prototype.moveObject = function (sourceId, targetId) {\n        if (targetId) {\n            this.moveSvgNode(sourceId, targetId);\n            this.updateNativeNodeIndex(sourceId, targetId);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function (obj) {\n        this.diagram.protectPropertyChange(true);\n        if (hasSelection(this.diagram) || obj) {\n            var nodeId = (obj && obj.id);\n            nodeId = nodeId || (this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id);\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                var undoObject = cloneObject(this.diagram.selectedItems);\n                (this.diagram.nameTable[temp_2] instanceof Node) ? undoObject.nodes.push(cloneObject(this.diagram.nameTable[temp_2])) :\n                    undoObject.connectors.push(cloneObject(this.diagram.nameTable[temp_2]));\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n                var redo = cloneObject(this.diagram.selectedItems);\n                (this.diagram.nameTable[temp_2] instanceof Node) ? redo.nodes.push(cloneObject(this.diagram.nameTable[temp_2])) :\n                    redo.connectors.push(cloneObject(this.diagram.nameTable[temp_2]));\n                var historyEntry = {\n                    type: 'SendForward', category: 'Internal',\n                    undoObject: undoObject, redoObject: redo\n                };\n                if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    this.addHistoryEntry(historyEntry);\n                }\n            }\n        }\n        this.diagram.protectPropertyChange(false);\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function (obj) {\n        this.diagram.protectPropertyChange(true);\n        if (hasSelection(this.diagram) || obj) {\n            var objectId = (obj && obj.id);\n            objectId = objectId || (this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id);\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                var undoObject = cloneObject(this.diagram.selectedItems);\n                (this.diagram.nameTable[temp_4] instanceof Node) ? undoObject.nodes.push(cloneObject(this.diagram.nameTable[temp_4])) :\n                    undoObject.connectors.push(cloneObject(this.diagram.nameTable[temp_4]));\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    if (!(node.children && node.children.length > 0)) {\n                        this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                        this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    }\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n                var redoObject = cloneObject(this.diagram.selectedItems);\n                (this.diagram.nameTable[temp_4] instanceof Node) ? redoObject.nodes.push(cloneObject(this.diagram.nameTable[temp_4])) :\n                    redoObject.connectors.push(cloneObject(this.diagram.nameTable[temp_4]));\n                var entry = { type: 'SendBackward', category: 'Internal', undoObject: undoObject, redoObject: redoObject };\n                if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    this.addHistoryEntry(entry);\n                }\n                //swap the nodes\n            }\n        }\n        this.diagram.protectPropertyChange(false);\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var node = this.diagram.selectedItems.nodes[0] || this.diagram.getObject(targetID);\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (node && (node.shape.type === 'HTML'\n                || node.shape.type === 'Native')) {\n                var id = node.shape.type === 'HTML' ? '_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateBlazorProperties = function (isObjectInteraction) {\n        var blazorInterop = 'sfBlazor';\n        var blazor = 'Blazor';\n        if (!isObjectInteraction) {\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': this.diagramObject };\n                window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n        else {\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': this.deepDiffer.diagramObject };\n                window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n        this.diagram.enableServerDataBinding(true);\n        this.deepDiffer.newNodeObject = [];\n        this.deepDiffer.newConnectorObject = [];\n        this.diagramObject = [];\n        this.diagram.oldNodeObjects = [];\n        this.diagram.oldConnectorObjects = [];\n    };\n    /**   @private  */\n    CommandHandler.prototype.enableCloneObject = function (value) {\n        this.diagram.canEnableBlazorObject = value;\n    };\n    /**   @private  */\n    CommandHandler.prototype.ismouseEvents = function (value) {\n        if (value) {\n            this.diagram.blazorActions = BlazorAction.interaction;\n        }\n        else {\n            this.diagram.blazorActions = ~BlazorAction.interaction;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateLayerObject = function (oldDiagram, temp) {\n        if (isBlazor()) {\n            var diffLayers = {};\n            diffLayers = this.deepDiffer.getLayerObject(oldDiagram, temp, this.diagram);\n            this.diagramObject = diffLayers;\n            this.updateBlazorProperties();\n        }\n    };\n    /* tslint:enable:no-string-literal */\n    /** @private */\n    CommandHandler.prototype.getDiagramOldValues = function (oldDiagram, attribute) {\n        var newDiagram = {};\n        for (var i = 0; i < attribute.length; i++) {\n            newDiagram[attribute[i]] = cloneObject(this.diagram[attribute[i]]);\n        }\n        var newObject = cloneObject(newDiagram);\n        var result = this.deepDiffer.map(newObject, oldDiagram);\n        var diffValue = this.deepDiffer.frameObject({}, result);\n        var diff = this.deepDiffer.removeEmptyValues(diffValue);\n        diff = this.deepDiffer.changeSegments(diff, newObject);\n        this.diagramObject = diff;\n        this.updateBlazorProperties();\n    };\n    /* tslint:disable */\n    /** @private */\n    CommandHandler.prototype.getBlazorOldValues = function (args, labelDrag) {\n        if (isBlazor()) {\n            var oldNodeObject = this.diagram.oldNodeObjects;\n            for (var i = 0; i < oldNodeObject.length; i++) {\n                if (oldNodeObject[i].id) {\n                    if (this.diagram.oldNodeObjects[i] instanceof Node) {\n                        this.diagram.oldNodeObjects[i] = cloneBlazorObject(this.diagram.oldNodeObjects[i]);\n                    }\n                    this.deepDiffer.getDifferenceValues(this.diagram.nameTable[oldNodeObject[i].id], args, labelDrag, this.diagram);\n                }\n            }\n            var oldConnectorObject = this.diagram.oldConnectorObjects;\n            for (var i = 0; i < oldConnectorObject.length; i++) {\n                if (oldConnectorObject[i].id) {\n                    if (this.diagram.oldConnectorObjects[i] instanceof Connector) {\n                        this.diagram.oldConnectorObjects[i] = cloneBlazorObject(this.diagram.oldConnectorObjects[i]);\n                    }\n                    this.deepDiffer.getDifferenceValues(this.diagram.nameTable[oldConnectorObject[i].id], args, labelDrag, this.diagram);\n                }\n            }\n            if (oldNodeObject.length > 0 || oldConnectorObject.length > 0) {\n                this.updateBlazorProperties(true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectChanges = function (previousObject, currentObject, changedNodes) {\n        for (var i = 0; i < previousObject.length; i++) {\n            var value = this.deepDiffer.map(currentObject[i], previousObject[i]);\n            var result = this.deepDiffer.frameObject({}, value);\n            var change = this.deepDiffer.removeEmptyValues(result);\n            if (change.children) {\n                change.children = cloneObject(currentObject[i]).children;\n            }\n            change = this.deepDiffer.changeSegments(change, currentObject[i]);\n            change.sfIndex = getIndex(this.diagram, currentObject[i].id);\n            changedNodes.push(change);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction, isTriggered) {\n        return __awaiter(this, void 0, void 0, function () {\n            var selectormodel, arrayNodes, arg, blazarArgs, selectNodes;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.diagram.enableServerDataBinding(false);\n                        if (!hasSelection(this.diagram)) return [3 /*break*/, 4];\n                        selectormodel = this.diagram.selectedItems;\n                        arrayNodes = this.getSelectedObject();\n                        if (this.diagram.currentSymbol) {\n                            this.diagram.previousSelectedObject = arrayNodes;\n                        }\n                        arg = {\n                            oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                            state: 'Changing', type: 'Removal', cancel: false\n                        };\n                        this.updateBlazorSelectorModel(arrayNodes, true);\n                        if (triggerAction) {\n                            if (!isBlazor()) {\n                                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                            }\n                            else {\n                                this.oldSelectedObjects = cloneObject(selectormodel);\n                            }\n                        }\n                        if (!!arg.cancel) return [3 /*break*/, 3];\n                        selectormodel.offsetX = 0;\n                        selectormodel.offsetY = 0;\n                        selectormodel.width = 0;\n                        selectormodel.height = 0;\n                        selectormodel.rotateAngle = 0;\n                        selectormodel.nodes = [];\n                        selectormodel.connectors = [];\n                        selectormodel.wrapper = null;\n                        selectormodel.annotation = undefined;\n                        this.diagram.clearSelectorLayer();\n                        if (!triggerAction) return [3 /*break*/, 3];\n                        arg = {\n                            oldValue: cloneBlazorObject(arrayNodes), newValue: [], cause: this.diagram.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        if (isBlazor()) {\n                            arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                        }\n                        if (!!isBlazor()) return [3 /*break*/, 1];\n                        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.diagram.triggerEvent(DiagramEvent.selectionChange, arg)];\n                    case 2:\n                        blazarArgs = _a.sent();\n                        if (blazarArgs && blazarArgs.cancel && !isTriggered) {\n                            selectNodes = [];\n                            if (blazarArgs.oldValue.nodes.length > 0) {\n                                selectNodes = blazarArgs.oldValue.nodes;\n                            }\n                            if (blazarArgs.oldValue.connectors.length > 0) {\n                                selectNodes = selectNodes.concat(blazarArgs.oldValue.connectors);\n                            }\n                            if (selectNodes) {\n                                this.diagram.select(selectNodes);\n                            }\n                        }\n                        _a.label = 3;\n                    case 3:\n                        this.updateBlazorSelector();\n                        this.diagram.enableServerDataBinding(true);\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                        this.diagram.parentObject = target;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                if ((source.isLane && canLaneInterchange(source, this.diagram)) || !source.isLane) {\n                    canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n                }\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    if (!(checkParentAsContainer(this.diagram, obj, true))) {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.isGroupDragging;\n                    }\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.isGroupDragging;\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, (actualObject.parentId &&\n                                    (this.diagram.diagramActions & DiagramAction.isGroupDragging)) ? false : true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        if (!(this.diagram.realActions & RealAction.AnimationClick)) {\n            this.diagram.refreshCanvasLayers();\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        if (!(this.diagram.realActions & RealAction.AnimationClick)) {\n            this.diagram.refreshCanvasLayers();\n        }\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotatePropertyChnage = function (angle) {\n        var selectedItems = this.diagram.selectedItems;\n        var objects = [];\n        objects = objects.concat(selectedItems.nodes);\n        objects = objects.concat(selectedItems.connectors);\n        var pivotValue = { x: selectedItems.offsetX, y: selectedItems.offsetY };\n        this.rotateObjects(selectedItems, objects, angle - selectedItems.rotateAngle, pivotValue);\n        selectedItems.wrapper.rotateAngle = selectedItems.rotateAngle = angle;\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject, isOutsideBoundary) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints && isOutsideBoundary) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot, undefined, true);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.diagramActions = this.diagram.diagramActions | (DiagramAction.PreventZIndexOnDragging | DiagramAction.DragUsingMouse);\n            var actualObject = this.diagram.selectedObject.actualObject;\n            if ((actualObject && actualObject instanceof Node && actualObject.isLane &&\n                canLaneInterchange(actualObject, this.diagram)) || (!actualObject || !actualObject.isLane)) {\n                this.diagram.drag(obj, tx, ty);\n            }\n            this.diagram.diagramActions = this.diagram.diagramActions & ~(DiagramAction.PreventZIndexOnDragging | DiagramAction.DragUsingMouse);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        for (var _i = 0, _a = this.diagram.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            var view = this.diagram.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.diagram.refreshCanvasDiagramLayer(view);\n            }\n        }\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.blazorActions = BlazorAction.expandNode;\n        objects = this.diagram.doLayout();\n        this.diagram.blazorActions = BlazorAction.Default;\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.diagram.allowServerDataBinding = false;\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n            this.diagram.allowServerDataBinding = true;\n        }\n        else {\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n            if (this.diagram.lineRoutingModule && this.diagram.constraints & DiagramConstraints.LineRouting) {\n                this.diagram.resetSegments();\n            }\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.wrapper.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.wrapper.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            var previousNodeObject = [];\n            var previousConnectorObject = [];\n            var updateNodeObject = [];\n            var updateConnectorObject = [];\n            var changeNodes = [];\n            var changeConnectors = [];\n            this.diagram.protectPropertyChange(true);\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                if (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length > 0) {\n                    this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                }\n                if (actualObject instanceof Node &&\n                    actualObject.shape.type !== 'SwimLane' && !actualObject.isLane && !actualObject.isPhase && !actualObject.isHeader) {\n                    if (actualObject.offsetX !== actualObject.wrapper.offsetX || actualObject.offsetY !== actualObject.wrapper.offsetY ||\n                        actualObject.width !== actualObject.wrapper.width || actualObject.height !== actualObject.wrapper.height ||\n                        actualObject.rotateAngle !== actualObject.wrapper.rotateAngle) {\n                        if (isBlazor()) {\n                            previousNodeObject.push(cloneObject(actualObject, undefined, undefined, true));\n                        }\n                        actualObject.offsetX += offsetX;\n                        actualObject.offsetY += offsetY;\n                        actualObject.width += width;\n                        actualObject.height += height;\n                        actualObject.rotateAngle += rotateAngle;\n                        this.diagram.nodePropertyChange(actualObject, {}, {\n                            offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                            width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                        });\n                        if (isBlazor()) {\n                            updateNodeObject.push(cloneObject(actualObject, undefined, undefined, true));\n                        }\n                    }\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        if (node instanceof Node && node.shape.type !== 'SwimLane' && !node.isLane\n                            && !node.isPhase && !node.isHeader) {\n                            node.offsetX += offsetX;\n                            node.offsetY += offsetY;\n                            node.width += width;\n                            node.height += height;\n                            node.rotateAngle += rotateAngle;\n                            this.diagram.nodePropertyChange(node, {}, {\n                                offsetX: node.offsetX, offsetY: node.offsetY,\n                                width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                            });\n                            objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                        }\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector && connector.type === 'Orthogonal') {\n                    if (isBlazor()) {\n                        previousConnectorObject.push(cloneObject(connector, undefined, undefined, true));\n                    }\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                    if (isBlazor()) {\n                        updateConnectorObject.push(cloneObject(connector, undefined, undefined, true));\n                    }\n                }\n            }\n            this.updateSelector();\n            if (isBlazor()) {\n                this.getObjectChanges(previousNodeObject, updateNodeObject, changeNodes);\n                this.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n                var blazorInterop = 'sfBlazor';\n                var blazor = 'Blazor';\n                var diagramObject = { nodes: changeNodes, connectors: changeConnectors };\n                if (window && window[blazor] && (changeConnectors.length + changeNodes.length)) {\n                    var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                    window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n                }\n            }\n            this.diagram.protectPropertyChange(false);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation'))) {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            for (i = 0; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n            }\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[0];\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && (((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight)) {\n                scale.x = Math.min(this.currentZoom, scale.x);\n                scale.y = Math.min(this.currentZoom, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                var scrollableBounds = this.diagram.scrollSettings.scrollableArea;\n                bounds = new Rect(scrollableBounds.x, scrollableBounds.y, scrollableBounds.width, scrollableBounds.height);\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar CustomCursorAction = /** @class */ (function (_super) {\n    __extends(CustomCursorAction, _super);\n    function CustomCursorAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"action\", void 0);\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"cursor\", void 0);\n    return CustomCursorAction;\n}(ChildProperty));\nexport { CustomCursorAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Represents the diagram settings\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * diagramSettings: { inversedAlignment: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar DiagramSettings = /** @class */ (function (_super) {\n    __extends(DiagramSettings, _super);\n    function DiagramSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], DiagramSettings.prototype, \"inversedAlignment\", void 0);\n    return DiagramSettings;\n}(ChildProperty));\nexport { DiagramSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { cloneBlazorObject, cloneSelectedObjects } from './utility/diagram-util';\nimport { updateDefaultValues, getCollectionChangeEventArguements, checkBrowserInfo } from './utility/diagram-util';\nimport { flipConnector, updatePortEdges, alignElement, setConnectorDefaults } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { BlazorAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './objects/node';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg, applyStyleAgainstCsp } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit, canMultiSelect } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes, canMeasureDecoratorPath } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\nimport { CustomCursorAction } from './diagram/custom-cursor';\nimport { DiagramSettings } from '../diagram/diagram-settings';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.checkMenu = false;\n        /** @private */\n        _this.isServerUpdate = false;\n        /** @private */\n        _this.oldNodeObjects = [];\n        /** @private */\n        _this.oldDiagramObject = {};\n        /** @private */\n        _this.oldConnectorObjects = [];\n        /** @private */\n        _this.canEnableBlazorObject = false;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.callBlazorModel = true;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.changedConnectorCollection = [];\n        _this.changedNodesCollection = [];\n        _this.previousNodeCollection = [];\n        _this.previousConnectorCollection = [];\n        _this.crudDeleteNodes = [];\n        _this.diagramid = 88123;\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        var blazor = 'Blazor';\n        var canCloneObject = isBlazor() && window && window[blazor] && !_this.dataSourceSettings.dataSource;\n        _this.ignoreCollectionWatch = true;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n            if (_this.nodeDefaults) {\n                if (canCloneObject) {\n                    _this.previousNodeCollection.push(cloneObject(node, undefined, undefined, true));\n                }\n                updateDefaultValues(node, child, _this.nodeDefaults);\n            }\n            _this.updateAnnotationText(node.annotations);\n        }\n        if (options && options.connectors && _this.connectorDefaults) {\n            for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n                child = options.connectors[i];\n                node = _this.connectors[i];\n                if (canCloneObject) {\n                    _this.previousConnectorCollection.push(cloneObject(node, undefined, undefined, true));\n                }\n                updateDefaultValues(node, child, _this.connectorDefaults);\n                _this.updateAnnotationText(node.annotations);\n            }\n        }\n        for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n            var defaultConnector = options.connectors[i];\n            var connector = _this.connectors[i];\n            if (defaultConnector.shape && defaultConnector.shape.type !== 'None') {\n                setConnectorDefaults(defaultConnector, connector);\n            }\n            if (isBlazor()) {\n                var defaultPropChanges = cloneObject(_this.bulkChanges);\n                _this.enableServerDataBinding(true);\n                _this.protectPropertyChange(true);\n                var keys = Object.keys(defaultPropChanges);\n                for (var i_1 = 0; i_1 < keys.length; i_1++) {\n                    var key = keys[i_1];\n                    var split = key.split('-');\n                    if (split && split[0]) {\n                        if (split[0] === 'nodes') {\n                            defaultPropChanges[key].sfIndex = Number(split[1]);\n                            _this.changedNodesCollection.push(defaultPropChanges[key]);\n                        }\n                        if (split[0] === 'connectors') {\n                            defaultPropChanges[key].sfIndex = Number(split[1]);\n                            _this.changedConnectorCollection.push(defaultPropChanges[key]);\n                        }\n                    }\n                }\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.updateAnnotationText = function (annotations) {\n        if (isBlazor() && annotations.length > 0) {\n            for (var i = 0; annotations && i < annotations.length; i++) {\n                var label = annotations[i];\n                label.content = label.content.split('\\\\n').join('\\n');\n            }\n        }\n    };\n    Diagram.prototype.callFromServer = function (arg) {\n        var methodName = 'methodName';\n        var mId = 'id';\n        if (arg[methodName] === 'getParentID') {\n            var id = arg[mId];\n            return this.nameTable[id].parentId;\n        }\n        else if (arg[methodName] === 'getEdges') {\n            var outEdge = 'outEdge';\n            var isOutEdge = arg[outEdge];\n            var id = arg[mId];\n            if (isOutEdge) {\n                return this.nameTable[id].outEdges;\n            }\n            else {\n                return this.nameTable[id].inEdges;\n            }\n        }\n        else if (arg[methodName] === 'updateDiagramObjects') {\n            var obj = 'obj';\n            var isAdding = 'IsAdding';\n            var args = arg[obj];\n            this.isServerUpdate = true;\n            if (arg[isAdding]) {\n                var add = 'add';\n                this[add].apply(this, args);\n            }\n            else {\n                var remove_1 = 'remove';\n                this[remove_1].apply(this, args);\n            }\n            this.isServerUpdate = false;\n        }\n        else if (arg[methodName] === 'invokeLoadDiagramMethod') {\n            var data = 'data';\n            this.loadDiagram(arg[data]);\n        }\n    };\n    ;\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param {DiagramModel} newProp - Lists the new values of the changed properties\n     * @param {DiagramModel} oldProp - Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        if (this.diagramActions & DiagramAction.Render) {\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'width':\n                    case 'height':\n                        this.element.style.width = this.getSizeValue(this.width);\n                        this.element.style.height = this.getSizeValue(this.height);\n                        this.eventHandler.updateViewPortSize(this.element);\n                        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                            var view = _c[_b];\n                            var temp = this.views[view];\n                            if (!(temp instanceof Diagram)) {\n                                temp.updateView(temp);\n                            }\n                        }\n                        break;\n                    case 'nodes':\n                        if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                            this.clearCollection();\n                            refereshColelction = true;\n                        }\n                        else {\n                            for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                                var key = _e[_d];\n                                var index = Number(key);\n                                var actualObject = this.nodes[index];\n                                var changedProp = newProp.nodes[index];\n                                refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                                this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                                var args = {\n                                    element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                    oldValue: cloneBlazorObject(oldProp.nodes[index]),\n                                    newValue: cloneBlazorObject(newProp.nodes[index])\n                                };\n                                if (isBlazor()) {\n                                    args.element = { node: cloneBlazorObject(actualObject) };\n                                    args.oldValue = { node: cloneBlazorObject(oldValue) };\n                                    args.newValue = { node: cloneBlazorObject(newValue) };\n                                }\n                                this.triggerEvent(DiagramEvent.propertyChange, args);\n                                if (isPropertyChanged) {\n                                    isPropertyChanged = false;\n                                }\n                            }\n                            if (this.mode === 'Canvas') {\n                                this.refreshDiagramLayer();\n                            }\n                        }\n                        break;\n                    case 'connectors':\n                        var oldObject = void 0;\n                        if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                            this.clearCollection(true);\n                            refereshColelction = true;\n                        }\n                        else {\n                            for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                                var key = _g[_f];\n                                var index = Number(key);\n                                var actualObject = this.connectors[index];\n                                var changedProp = newProp.connectors[index];\n                                if (changedProp && (changedProp.sourceDecorator || changedProp.targetDecorator)) {\n                                    this.diagramActions |= DiagramAction.DecoratorPropertyChange;\n                                }\n                                this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                                if (changedProp && (changedProp.sourceDecorator || changedProp.targetDecorator)) {\n                                    this.diagramActions = this.diagramActions & ~DiagramAction.DecoratorPropertyChange;\n                                }\n                                var args = {\n                                    element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                    oldValue: cloneBlazorObject(oldProp.connectors[index]),\n                                    newValue: cloneBlazorObject(newProp.connectors[index])\n                                };\n                                if (isBlazor()) {\n                                    args.element = { connector: cloneBlazorObject(actualObject) };\n                                    args.oldValue = { connector: cloneBlazorObject(oldValue) };\n                                    args.newValue = { connector: cloneBlazorObject(newValue) };\n                                }\n                                this.triggerEvent(DiagramEvent.propertyChange, args);\n                                if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                    this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                                }\n                                if (isPropertyChanged) {\n                                    isPropertyChanged = false;\n                                }\n                            }\n                            this.updateBridging();\n                            if (this.mode === 'Canvas') {\n                                this.refreshDiagramLayer();\n                            }\n                        }\n                        break;\n                    case 'bridgeDirection':\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                        break;\n                    case 'backgroundColor':\n                        this.intOffPageBackground();\n                        break;\n                    case 'pageSettings':\n                        this.validatePageSize();\n                        this.updatePage();\n                        break;\n                    case 'selectedItems':\n                        if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                            if (this.selectedItems.userHandles.length > 0) {\n                                this.renderSelector(true);\n                                break;\n                            }\n                        }\n                        if (newProp.selectedItems.constraints) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                        break;\n                    case 'snapSettings':\n                        this.updateSnapSettings(newProp);\n                        break;\n                    case 'commandManager':\n                        this.initCommands();\n                        break;\n                    case 'layout':\n                        refreshLayout = true;\n                        break;\n                    case 'dataSourceSettings':\n                        this.clear();\n                        this.initObjects();\n                        if (this.layout.type === 'None') {\n                            refereshColelction = true;\n                        }\n                        else {\n                            refreshLayout = true;\n                        }\n                        break;\n                    case 'tooltip':\n                        initTooltip(this);\n                        break;\n                    case 'rulerSettings':\n                        this.updateRulerSettings(newProp);\n                        break;\n                    case 'layers':\n                        this.updateLayer(newProp);\n                        break;\n                    case 'scrollSettings':\n                        this.updateScrollSettings(newProp);\n                        break;\n                    case 'locale':\n                        if (newProp.locale !== oldProp.locale) {\n                            this.realActions |= RealAction.PreventDataInit;\n                            _super.prototype.refresh.call(this);\n                            this.realActions &= ~RealAction.PreventDataInit;\n                        }\n                        break;\n                    case 'contextMenuSettings':\n                        if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                            this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                        }\n                        if (newProp.contextMenuSettings.show !== undefined) {\n                            this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                        }\n                        if (newProp.contextMenuSettings.items) {\n                            var items = newProp.contextMenuSettings.items;\n                            for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                                var key = _j[_h];\n                                var index = Number(key);\n                                this.contextMenuSettings.items[index] = items[index];\n                            }\n                        }\n                        break;\n                    case 'serializationSettings':\n                        if (newProp.serializationSettings.preventDefaults !== undefined) {\n                            this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                        }\n                        break;\n                }\n            }\n            if (refreshLayout && !refereshColelction) {\n                this.doLayout();\n            }\n            if (isPropertyChanged && this.propertyChange) {\n                var args = {\n                    element: cloneBlazorObject(this), cause: this.diagramActions,\n                    oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n                };\n                if (isBlazor()) {\n                    args.element = { diagram: cloneBlazorObject(this) };\n                    args.oldValue = { diagram: cloneBlazorObject(oldValue) };\n                    args.newValue = { diagram: cloneBlazorObject(newValue) };\n                }\n                this.triggerEvent(DiagramEvent.propertyChange, args);\n            }\n            if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n                var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n                this.addHistoryEntry(entry);\n            }\n            this.resetDiagramActions();\n            if (refereshColelction) {\n                this.initObjects(true);\n                this.refreshDiagramLayer();\n                if (refreshLayout) {\n                    this.doLayout();\n                }\n            }\n            var scrollAlone = ((Object.keys(newProp).length === 1) && newProp.scrollSettings !== undefined);\n            if (!refereshColelction) {\n                for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                    var temp = _l[_k];\n                    var view = this.views[temp];\n                    if (!(view instanceof Diagram)) {\n                        if (newProp.scrollSettings && newProp.scrollSettings.currentZoom != oldProp.scrollSettings.currentZoom) {\n                            view.updateHtmlLayer(view);\n                        }\n                        if (!scrollAlone) {\n                            this.refreshCanvasDiagramLayer(view);\n                        }\n                    }\n                }\n            }\n            this.resetTemplate();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines || newProp.snapSettings.gridType) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-diagram').length;\n            this.element.id = 'diagram_' + this.diagramid + '_' + collection;\n        }\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /* tslint:disable */\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        this.ignoreCollectionWatch = true;\n        var domTable = 'domTable';\n        window[domTable] = {};\n        var collapsedNode = [];\n        if (isBlazor()) {\n            var changedNodes = [];\n            var changedConnectors = [];\n            for (var i = 0; i < this.changedNodesCollection.length; i++) {\n                changedNodes.push(this.commandHandler.deepDiffer.removeEmptyValues(this.changedNodesCollection[i]));\n            }\n            for (var i = 0; i < this.changedConnectorCollection.length; i++) {\n                changedConnectors.push(this.commandHandler.deepDiffer.removeEmptyValues(this.changedConnectorCollection[i]));\n            }\n            var blazorInterop = 'sfBlazor';\n            var blazor = 'Blazor';\n            var diagramObject = { nodes: changedNodes, connectors: changedConnectors };\n            if (window && window[blazor] && !this.dataSourceSettings.dataSource) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                window[blazorInterop].updateBlazorProperties(obj, this);\n            }\n        }\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        var isLayout = false;\n        if (isBlazor() && !this.dataSourceSettings.dataSource && this.layout.type !== \"None\") {\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                this.insertValue(cloneObject(obj), true);\n            }\n            for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n                var obj = _c[_b];\n                this.insertValue(cloneObject(obj), false);\n            }\n            isLayout = true;\n        }\n        this.doLayout();\n        if (isLayout) {\n            this.commandHandler.getBlazorOldValues();\n        }\n        if (this.lineRoutingModule) {\n            var previousConnectorObject = [];\n            var updateConnectorObject = [];\n            var changeConnectors = [];\n            if (isBlazor()) {\n                for (var _d = 0, _e = this.connectors; _d < _e.length; _d++) {\n                    var obj = _e[_d];\n                    previousConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n                }\n            }\n            this.lineRoutingModule.lineRouting(this);\n            if (isBlazor()) {\n                for (var _f = 0, _g = this.connectors; _f < _g.length; _f++) {\n                    var obj = _g[_f];\n                    updateConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n                }\n                this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n                var blazorInterop = 'sfBlazor';\n                var blazor = 'Blazor';\n                var diagramObject = { nodes: [], connectors: changeConnectors };\n                if (window && window[blazor]) {\n                    var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                    window[blazorInterop].updateBlazorProperties(obj, this);\n                }\n            }\n        }\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        this.renderComplete();\n        this.updateFitToPage();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateFitToPage = function () {\n        if (this.pageSettings && this.pageSettings.fitOptions && this.pageSettings.fitOptions.canFit) {\n            this.fitToPage(this.pageSettings.fitOptions);\n        }\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate('diagramsf_node_template', 'NodeTemplate', this, false);\n            }\n            else if (annotation && annotation.annotationType === 'Template') {\n                updateBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate', this, false);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.annotationType === 'Template') {\n                updateBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate', this, false);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate('diagramsf_node_template', 'NodeTemplate');\n            }\n            else if (templateAnnotation && templateAnnotation.annotationType === 'Template') {\n                resetBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.annotationType === 'Template') {\n                resetBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate');\n            }\n        }\n    };\n    //Call back function to the node template\n    // private measureNode(node: NodeModel): void {\n    //     if (node.shape.type === 'Native' && isBlazor()) {\n    //         node.wrapper.measure(new Size(node.width, node.height));\n    //         node.wrapper.arrange(node.wrapper.desiredSize);\n    //     }\n    // }\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: [this]\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-diagram-tooltip');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                var measureElementCount = 'measureElementCount';\n                window[measureElementCount]--;\n                if (window[measureElementCount] === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n        var domTable = 'domTable';\n        window[domTable] = {};\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keyup', this.eventHandler.keyUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'keyup', this.eventHandler.keyUp);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param {NodeModel | ConnectorModel} objects - Defines the collection of nodes and connectors to be selected\n     * @param {boolean} multipleSelection - Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (isBlazor()) {\n            for (var i = 0; i < objects.length; i++) {\n                objects[i] = this.nameTable[objects[i].id];\n            }\n            objects = this.nameTable[objects.id] || objects;\n        }\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param {NodeModel | ConnectorModel} obj - Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (isBlazor()) {\n            this.commandHandler.oldSelectedObjects = cloneObject(this.selectedItems);\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n            this.commandHandler.updateBlazorSelector();\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.eventHandler.updateViewPortSize(this.element);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     * @blazorArgsType process|DiagramNode\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param {NodeModel[] | ConnectorModel[]} obj - Defines the objects to be added to diagram\n     * @deprecated\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.fitToPage(options);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.bringIntoView(bound);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.bringToCenter(bound);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.callBlazorModel = false;\n        this.insertBlazorDiagramObjects(this.selectedItems);\n        this.commandHandler.group();\n        this.callBlazorModel = true;\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.callBlazorModel = false;\n        this.insertBlazorDiagramObjects(this.selectedItems);\n        this.commandHandler.unGroup();\n        this.callBlazorModel = true;\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendToBack();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * set the active layer\n     *  @param {string} layerName - defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param {LayerModel} layer - defines the layer model which is to be added\n     * @param {Object[]} layerObject - defines the object of the layer\n     * @blazorArgsType layer|DiagramLayer\n     * @deprecated\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param {string} layerId - define the id of the layer\n     * @deprecated\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param {string[]} objects - define the objects id of string array\n     * @blazorArgsType objects|List<string>\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        var oldValues = cloneObject(this.layers);\n        this.enableServerDataBinding(false);\n        this.commandHandler.moveObjects(objects, targetLayer);\n        var result = this.commandHandler.deepDiffer.map(oldValues, cloneObject(this.layers));\n        var diffValue = this.commandHandler.deepDiffer.frameObject({}, result);\n        this.oldDiagramObject = { layers: diffValue };\n        this.commandHandler.updateBlazorProperties();\n    };\n    /* tslint:disable */\n    Diagram.prototype.layerObjectUpdate = function () {\n        if (isBlazor()) {\n            this.enableServerDataBinding(false);\n            this.oldDiagramObject['layers'] = [];\n            for (var i = 0; i < this.layers.length; i++) {\n                var leyerObject = cloneObject(this.layers[i]);\n                leyerObject.sfIndex = this.layers[i].zIndex;\n                this.oldDiagramObject['layers'].push(leyerObject);\n            }\n        }\n    };\n    /* tslint:enable */\n    /**\n     * move the layer backward\n     * @param {string} layerName - define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.layerObjectUpdate();\n        this.commandHandler.sendLayerBackward(layerName);\n        this.commandHandler.updateLayerObject(this.oldDiagramObject, true);\n    };\n    /**\n     * move the layer forward\n     * @param {string} layerName - define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.layerObjectUpdate();\n        this.commandHandler.bringLayerForward(layerName);\n        this.commandHandler.updateLayerObject(this.oldDiagramObject);\n    };\n    /**\n     * clone a layer with its object\n     * @param {string} layerName - define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.bringToFront();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendForward();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendBackward();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * gets the node or connector having the given name\n     * @deprecated\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the node object for the given node ID\n     */\n    Diagram.prototype.getNodeObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the connector object for the given node ID\n     */\n    Diagram.prototype.getConnectorObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param {NudgeDirection} direction -  Defines the direction by which the objects have to be moved\n     * @param {number} x - Defines the distance by which the selected objects have to be horizontally moved\n     * @param {number} y -  Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            var undoObject = cloneObject(this.selectedItems);\n            this.protectPropertyChange(true);\n            this.drag(obj, tx, ty);\n            this.protectPropertyChange(false);\n            var entry = {\n                type: 'PositionChanged',\n                redoObject: cloneObject(this.selectedItems), undoObject: undoObject, category: 'Internal'\n            };\n            this.addHistoryEntry(entry);\n        }\n        this.refreshCanvasLayers();\n    };\n    Diagram.prototype.insertBlazorDiagramObjects = function (actualObject) {\n        if (isBlazor() && !(this.blazorActions & BlazorAction.interaction)) {\n            this.enableServerDataBinding(false);\n            if (actualObject instanceof Selector) {\n                for (var i = 0; i < actualObject.nodes.length; i++) {\n                    this.insertBlazorDiagramObjects(actualObject.nodes[i]);\n                }\n                for (var i = 0; i < actualObject.connectors.length; i++) {\n                    this.insertBlazorDiagramObjects(actualObject.connectors[i]);\n                }\n            }\n            if (!(actualObject instanceof Selector)) {\n                var object = void 0;\n                if (actualObject && actualObject.children && actualObject.children.length > 0) {\n                    for (var i = 0; i < actualObject.children.length; i++) {\n                        this.insertBlazorDiagramObjects(this.nameTable[actualObject.children[i]]);\n                    }\n                }\n                object = cloneObject(this.nameTable[actualObject.id]);\n                this.insertValue(object, !(getObjectType(actualObject) === Connector));\n            }\n        }\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param {NodeModel | ConnectorMode | SelectorModel} obj - Defines the nodes/connectors to be dragged\n     * @param {number} tx - Defines the distance by which the given objects have to be horizontally moved\n     * @param {number} ty - Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        if (isBlazor() && obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.callBlazorModel = false;\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            if (obj.connectors && obj.connectors.length) {\n                this.callBlazorModel = false;\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            this.updateSelector();\n            if ((this.diagramActions & DiagramAction.DragUsingMouse)) {\n                this.updatePage();\n            }\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction) && !(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.updateSelector();\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param {NodeModel | ConnectorModel | SelectorModel} obj - Defines the objects to be resized\n     * @param {number} sx - Defines the ratio by which the objects have to be horizontally scaled\n     * @param {number} sy - Defines the ratio by which the objects have to be vertically scaled\n     * @param {PointModel} pivot - Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        this.insertBlazorDiagramObjects(obj);\n        var checkBoundaryConstraints = true;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                this.callBlazorModel = false;\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                    if (!this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds)) {\n                        this.commandHandler.scale(node, 1 / sx, 1 / sy, pivot, obj);\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            if (obj.connectors && obj.connectors.length) {\n                this.callBlazorModel = false;\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                    if (!this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds)) {\n                        this.commandHandler.scale(conn, 1 / sx, 1 / sy, pivot, obj);\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param {NodeModel | ConnectorModel | SelectorModel} obj - Defines the objects to be rotated\n     * @param {number} angle - Defines the angle by which the objects have to be rotated\n     * @param {PointModel} pivot - Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        this.insertBlazorDiagramObjects(obj);\n        var checkBoundaryConstraints;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                this.callBlazorModel = false;\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n                this.callBlazorModel = true;\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param {ConnectorModel} obj - Defines the connector, the end points of which has to be moved\n     * @param {number} tx - Defines the distance by which the end point has to be horizontally moved\n     * @param {number} ty - Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n        if (this.callBlazorModel) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param {ConnectorModel} obj - Defines the connector, the end points of which has to be moved\n     * @param {number} tx - Defines the distance by which the end point has to be horizontally moved\n     * @param {number} ty - Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n        if (this.callBlazorModel) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param {PointModel} position - Defines the position, the objects under which has to be found\n     * @param {IElement} source - Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param {NodeModel[] | ConnectorModel[]}objects - Defines the collection of objects, from which the object has to be found.\n     * @param {Actions} action - Defines the action, using which the relevant object has to be found.\n     * @param {boolean} inAction - Defines the active state of the action.\n     * @deprecated\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param {NodeModel[] | ConnectorModel[]} objects - Defines the collection of objects, from which the object has to be found.\n     * @param {Actions} action - Defines the action, using which the relevant object has to be found.\n     * @param {boolean} inAction - Defines the active state of the action.\n     * @deprecated\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param {IElement} obj - Defines the object, the child element of which has to be found\n     * @param {PointModel} position - Defines the position, the child element under which has to be found\n     * @param {number} padding - Defines the padding, the child element under which has to be found\n     * @deprecated\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.eventHandler.findElementUnderMouse(obj, position, padding);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param {NodeModel | ConnectorModel} obj - Defines the object under mouse\n     * @param {DiagramElement} wrapper - Defines the target element of the object under mouse\n     * @param {PointModel} position - Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param {string} action - Defines the action that is going to be performed\n     * @deprecated\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param {string} action - Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        if (this.customCursor.length) {\n            for (var i = 0; i < this.customCursor.length; i++) {\n                if (this.customCursor[i].action === action) {\n                    return this.customCursor[i].cursor;\n                }\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param {HistoryEntry} entry - Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry, 'CustomAction');\n            }\n        }\n    };\n    /**\n     * Adds the given custom change in the diagram control to the track\n     * @param {HistoryEntry} entry - Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addCustomHistoryEntry = function (entry) {\n        if (isBlazor() && this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            entry.type = undefined;\n            entry.category = 'External';\n            this.undoRedoModule.addHistoryEntry(entry, this);\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry, action) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry.category === 'Internal') {\n            if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n                ((entry.redoObject.connectors) instanceof Array)) {\n                source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n            }\n            else {\n                if (entry.redoObject) {\n                    source.push(entry.redoObject);\n                }\n            }\n            change[type] = entry.type;\n            switch (entry.type) {\n                case 'PositionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n                case 'RotationChanged':\n                    change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                    change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                    break;\n                case 'SizeChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                        width: entry.undoObject.width, height: entry.undoObject.height\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                        width: entry.redoObject.width, height: entry.redoObject.height\n                    };\n                    break;\n                case 'CollectionChanged':\n                    change[entry.changeType] = source;\n                    break;\n                case 'ConnectionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n            }\n            var arg = void 0;\n            arg = {\n                cause: entry.category, source: cloneBlazorObject(source), change: cloneBlazorObject(change),\n                action: action\n            };\n            if (isBlazor()) {\n                arg = {\n                    cause: entry.category, change: cloneBlazorObject(change),\n                    source: { connectors: undefined, nodes: undefined }, action: action\n                };\n                var sourceValue = arg.source;\n                sourceValue.connectors = [];\n                sourceValue.nodes = [];\n                var object = void 0;\n                for (var i = 0; i < source.length; i++) {\n                    object = cloneBlazorObject(source[i]);\n                    (getObjectType(source[i]) === Connector) ?\n                        (sourceValue.connectors.push(object)) : (sourceValue.nodes.push(object));\n                }\n                arg.source = sourceValue;\n            }\n            if (source.length) {\n                this.triggerEvent(DiagramEvent.historyChange, arg);\n            }\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        this.canEnableBlazorObject = true;\n        this.callBlazorModel = false;\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        this.canEnableBlazorObject = true;\n        this.callBlazorModel = false;\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    Diagram.prototype.getBlazorDiagramObjects = function (objects) {\n        if (objects) {\n            for (var j = 0; j < objects.length; j++) {\n                this.insertBlazorDiagramObjects(objects[j]);\n            }\n        }\n        else {\n            this.insertBlazorDiagramObjects(this.selectedItems);\n        }\n        this.callBlazorModel = false;\n        this.canEnableBlazorObject = true;\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param {NodeModel[] | ConnectorModel[]} objects - Defines the objects that have to be aligned\n     * @param {AlignmentOptions}option - Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param {DistributeOptions} objects - Defines the objects that have to be equally spaced\n     * @param {NodeModel[] | ConnectorModel[]} option - Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n        this.commandHandler.getBlazorOldValues();\n        this.canEnableBlazorObject = false;\n        this.callBlazorModel = true;\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param {NodeModel[] | ConnectorModel[]}objects - Defines the collection of objects that have to be scaled\n     * @param {SizingOptions} option - Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n        this.commandHandler.getBlazorOldValues();\n        this.canEnableBlazorObject = false;\n        this.callBlazorModel = true;\n    };\n    Diagram.prototype.updateBlazorDiagramProperties = function (attribute, canCall) {\n        if (isBlazor() && !canCall) {\n            this.enableServerDataBinding(false);\n            for (var i = 0; i < attribute.length; i++) {\n                this.oldDiagramObject[attribute[i]] = cloneObject(this[attribute[i]]);\n            }\n        }\n        if (canCall) {\n            this.commandHandler.getDiagramOldValues(this.oldDiagramObject, attribute);\n        }\n    };\n    Diagram.prototype.getZoomingAttribute = function () {\n        var attribute = [];\n        attribute.push('scrollSettings');\n        attribute.push('snapSettings');\n        return attribute;\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param {number} factor - Defines the factor by which the diagram is zoomed\n     * @param {PointModel} focusedPoint - Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n        if (!(this.blazorActions & BlazorAction.interaction)) {\n            this.updateBlazorDiagramProperties(attribute, true);\n        }\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param {ZoomOptions} options - used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param {number} horizontalOffset - Defines the horizontal distance to which the diagram has to be scrolled\n     * @param {number} verticalOffset - Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.setCursor('grabbing');\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * Resets the segments of the connectors\n     */\n    Diagram.prototype.resetSegments = function () {\n        var previousConnectorObject = [];\n        var updateConnectorObject = [];\n        var changeConnectors = [];\n        if (isBlazor()) {\n            for (var _i = 0, _a = this.connectors; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                previousConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n        }\n        if (this.constraints & DiagramConstraints.LineRouting && this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        else {\n            this.protectPropertyChange(true);\n            var connector = void 0;\n            for (var i = 0; i < this.connectors.length; i++) {\n                connector = this.connectors[i];\n                connector.segments = [];\n                this.connectorPropertyChange(connector, {}, { segments: connector.segments });\n            }\n            this.protectPropertyChange(false);\n        }\n        if (isBlazor()) {\n            for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n                var obj = _c[_b];\n                updateConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n            this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n            var blazorInterop = 'sfBlazor';\n            var blazor = 'Blazor';\n            var diagramObject = { nodes: [], connectors: changeConnectors };\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                window[blazorInterop].updateBlazorProperties(obj, this);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var eventArgs;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (args) {\n                            this.updateEventValue(args);\n                        }\n                        return [4 /*yield*/, this.trigger(DiagramEvent[eventName], args)];\n                    case 1:\n                        eventArgs = _a.sent();\n                        if (isBlazor() && typeof eventArgs === 'string') {\n                            eventArgs = JSON.parse(eventArgs);\n                        }\n                        return [2 /*return*/, eventArgs];\n                }\n            });\n        });\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given node to the lane\n     * @deprecated\n     */\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n            }\n            if (!this.nameTable[node.id]) {\n                node.offsetX = swimlaneNode.wrapper.bounds.width + swimlaneNode.wrapper.bounds.x;\n                node.offsetY = swimlaneNode.wrapper.bounds.height + swimlaneNode.wrapper.bounds.y;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            if (!swimlaneNode.shape.phases.length) {\n                var laneId = swimLane + lane + '0';\n                if (this.nameTable[laneId]) {\n                    addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                    updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                }\n            }\n            else {\n                for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                    var laneId = swimLane + lane + i;\n                    if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                        var laneNode = this.nameTable[laneId].wrapper.bounds;\n                        var focusPoint = {\n                            x: laneNode.x +\n                                (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                            y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                        };\n                        if (swimlaneNode.shape.orientation === 'Horizontal') {\n                            focusPoint.y = laneNode.y;\n                        }\n                        else {\n                            focusPoint.x = laneNode.x;\n                            var laneHeaderId = this.nameTable[laneId].parentId +\n                                swimlaneNode.shape.lanes[0].id + '_0_header';\n                            focusPoint.y = laneNode.y +\n                                (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                    node.margin.top + (node.wrapper.bounds.height / 2));\n                        }\n                        if (laneNode.containsPoint(focusPoint) ||\n                            (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                            addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                            updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                            break;\n                        }\n                    }\n                }\n            }\n            if (this.undoRedoModule) {\n                this.historyManager.endGroupAction();\n            }\n            this.protectPropertyChange(false);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param {NodeModel | ConnectorModel} obj - Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param {NodeModel | ConnectorModel} obj - Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given node to diagram control\n     * @param {NodeModel} obj - Defines the node that has to be added to diagram\n     * @blazorArgsType obj|DiagramNode\n     */\n    Diagram.prototype.addNode = function (obj, group) {\n        return this.add(obj, group);\n    };\n    /**\n     * Adds the given diagram object to the group.\n     * @param {NodeModel} Group - defines where the diagram object to be added.\n     * @param {string | NodeModel | ConnectorModel} Child - defines the diagram object to be added to the group\n     * @blazorArgsType group|DiagramNode\n     */\n    Diagram.prototype.addChildToGroup = function (group, child) {\n        this.addChild(group, child);\n    };\n    /**\n     * Will return the history stack values\n     * @param {boolean} isUndoStack - returns the history stack values\n     */\n    Diagram.prototype.getHistoryStack = function (isUndoStack) {\n        var temp;\n        var historyEntry = [];\n        temp = isUndoStack ? this.historyManager.undoStack : this.historyManager.redoStack;\n        if (this.historyManager.stackLimit !== undefined) {\n            for (var i = temp.length - 1; i >= 0; i--) {\n                historyEntry.push(temp[i]);\n                if (historyEntry.length > this.historyManager.stackLimit) {\n                    return historyEntry;\n                }\n            }\n        }\n        else {\n            historyEntry = temp;\n        }\n        return historyEntry;\n    };\n    /* tslint:disable */\n    /**\n     * Return the edges for the given node\n     * @deprecated\n     * @param {Object} args - return the edge of the given node\n     */\n    Diagram.prototype.getEdges = function (args) {\n        return args['outEdge'] ? this.nameTable[args['id']].outEdges : this.nameTable[args['id']].inEdges;\n    };\n    /* tslint:enable */\n    /**\n     * Returns the parent id for the node\n     * @deprecated\n     * @param {string} id - returns the parent id\n     */\n    Diagram.prototype.getParentId = function (id) {\n        return this.nameTable[id].parentId;\n    };\n    /**\n     * Adds the given connector to diagram control\n     * @param {ConnectorModel} obj - Defines the connector that has to be added to diagram\n     * @blazorArgsType obj|DiagramConnector\n     * @blazorType DiagramConnector\n     */\n    Diagram.prototype.addConnector = function (obj) {\n        return this.add(obj);\n    };\n    /** @private */\n    Diagram.prototype.UpdateBlazorDiagramModelCollection = function (obj, copiedObject, multiSelectDelete) {\n        var blazorInterop = 'sfBlazor';\n        var updatedModel = cloneBlazorObject(obj);\n        var blazor = 'Blazor';\n        if (window && window[blazor] && (!this.isServerUpdate || multiSelectDelete)) {\n            this.isServerUpdate = true;\n            var removalIndexCollection = [];\n            var updatedModelCollection = [];\n            var connectorModelCollection = [];\n            var elements = [];\n            var removalIndex = void 0;\n            var tempNode = [];\n            var objectTypeCollection = [];\n            if (!copiedObject) {\n                if (!multiSelectDelete) {\n                    tempNode = this.commandHandler.getChildren(obj, elements);\n                }\n                else {\n                    tempNode = multiSelectDelete;\n                }\n                for (var i = 0; i < tempNode.length; i++) {\n                    updatedModel = cloneBlazorObject(tempNode[i]);\n                    updatedModelCollection.push(updatedModel);\n                    if (getObjectType(tempNode[i]) === Connector) {\n                        removalIndex = this.connectors.indexOf(tempNode[i]);\n                    }\n                    else {\n                        removalIndex = this.nodes.indexOf(tempNode[i]);\n                    }\n                    removalIndexCollection.push(removalIndex);\n                    objectTypeCollection.push(getObjectType(tempNode[i]) === Connector ? 'Connector' : 'Node');\n                }\n                if (!multiSelectDelete) {\n                    updatedModelCollection.push(cloneBlazorObject(obj));\n                    removalIndexCollection.push(this.nodes.indexOf(obj));\n                    objectTypeCollection.push(getObjectType(obj) === Connector ? 'Connector' : 'Node');\n                }\n            }\n            if (copiedObject && copiedObject.length > 0) {\n                for (var i = 0; i < copiedObject.length; i++) {\n                    updatedModel = cloneBlazorObject(copiedObject[i]);\n                    var isNode = (copiedObject[i] instanceof Node) ? true : false;\n                    isNode ? updatedModelCollection.push(updatedModel) : connectorModelCollection.push(updatedModel);\n                    objectTypeCollection.push(getObjectType(copiedObject[i]) === Connector ? 'Connector' : 'Node');\n                }\n            }\n            var dgmObj = {\n                'methodName': 'UpdateBlazorDiagramObjects',\n                'diagramobj': {\n                    'nodeObj': JSON.stringify(updatedModelCollection),\n                    'ObjectType': objectTypeCollection,\n                    'removalIndex': copiedObject ? undefined : removalIndexCollection,\n                    'isMultipleObjects': true, 'annotationIndex': undefined,\n                    'connectorObj': JSON.stringify(connectorModelCollection)\n                }\n            };\n            window[blazorInterop].updateBlazorProperties(dgmObj, this);\n        }\n    };\n    Diagram.prototype.UpdateBlazorDiagramModel = function (obj, objectType, removalIndex, annotationNodeIndex) {\n        var blazorInterop = 'sfBlazor';\n        var updatedModel = cloneBlazorObject(obj);\n        var blazor = 'Blazor';\n        if (window && window[blazor] && !this.isServerUpdate && !(this.diagramActions & DiagramAction.Clear)) {\n            var dgmObj = {\n                'methodName': 'UpdateBlazorDiagramObjects',\n                'diagramobj': {\n                    'nodeObj': JSON.stringify(updatedModel),\n                    'ObjectType': objectType, 'removalIndex': removalIndex,\n                    'isMultipleObjects': false,\n                    'annotationIndex': annotationNodeIndex, 'connectorObj': undefined\n                }\n            };\n            window[blazorInterop].updateBlazorProperties(dgmObj, this);\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.addBlazorDiagramObjects = function () {\n        var nodesCollection = [];\n        var connectorCollection = [];\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            for (var i = 0; i < this.nodes.length; i++) {\n                nodesCollection.push(cloneObject(this.nodes[i], undefined, undefined, true));\n            }\n            for (var i = 0; i < this.connectors.length; i++) {\n                connectorCollection.push(cloneObject(this.connectors[i], undefined, undefined, true));\n            }\n        }\n        var blazorInterop = 'sfBlazor';\n        var blazor = 'Blazor';\n        if (window && window[blazor]) {\n            var obj = {\n                'methodName': 'AddBlazorObjects',\n                'diagramobj': { 'nodeObj': JSON.stringify(nodesCollection), 'isConnector': false }\n            };\n            window[blazorInterop].updateBlazorProperties(obj, this);\n            obj = {\n                'methodName': 'AddBlazorObjects',\n                'diagramobj': { 'nodeObj': JSON.stringify(connectorCollection), 'isConnector': true }\n            };\n            window[blazorInterop].updateBlazorProperties(obj, this);\n        }\n    };\n    Diagram.prototype.removeNodeEdges = function (elementId, id, isOutEdges) {\n        var node = this.nameTable[elementId];\n        var edges = isOutEdges ? node.outEdges : node.inEdges;\n        if (edges.length > 0) {\n            for (var i = 0; i < edges.length; i++) {\n                if (edges[i] === id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /* tslint:disable */\n    /**\n     * Adds the given object to diagram control\n     * @param {NodeModel | ConnectorModel} obj - Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = void 0;\n            args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (this.parentObject) {\n                args.parentId = this.parentObject.id;\n            }\n            if (isBlazor()) {\n                args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Addition');\n            }\n            if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            if (args.cancel && this.drawingObject) {\n                this.removeElements(args.element);\n                this.tooltipObject.close();\n                if (getObjectType(args.element) === Connector) {\n                    if (args.element.sourceID) {\n                        this.removeNodeEdges(args.element.sourceID, args.element.id, true);\n                    }\n                    if (args.element.targetID) {\n                        this.removeNodeEdges(args.element.targetID, args.element.id, false);\n                    }\n                }\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    updateDefaultValues(newObj, obj, this.connectorDefaults);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    this.UpdateBlazorDiagramModel(newObj, \"Connector\");\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    updateDefaultValues(newObj, obj, this.nodeDefaults);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    this.UpdateBlazorDiagramModel(newObj, \"Node\");\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (this.parentObject) {\n                    args.parentId = this.parentObject.id;\n                }\n                this.updateBlazorCollectionChange(newObj, true);\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Addition');\n                }\n                if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                this.parentObject = undefined;\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateTextElementValue(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateBlazorCollectionChange = function (newObject, isAdding) {\n        var blazorInterop = 'sfBlazor';\n        if (window && window[blazorInterop]) {\n            var newNode = {};\n            var object = newObject instanceof Node ? 'nodes' : 'connectors';\n            var index = void 0;\n            index = (object === 'nodes') ? this.nodes.indexOf(newObject).toString()\n                : this.connectors.indexOf(newObject).toString();\n            newNode[index] = cloneObject(newObject);\n            if (window[blazorInterop].updateDiagramCollection) {\n                window[blazorInterop].updateDiagramCollection.call(this, object, newNode, {}, !isAdding, false);\n            }\n        }\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param {BpmnAnnotationModel} annotation - Defines the annotation to be added\n     * @param {NodeModel} node - Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        if (children) {\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                    if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                        element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                        if (element) {\n                            element.parentNode.removeChild(element);\n                        }\n                        element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                        if (element) {\n                            element.parentNode.removeChild(element);\n                        }\n                    }\n                    for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                        var elementId = _a[_i];\n                        removeElement(children[i].id + '_groupElement', elementId);\n                        var nodeIndex = this.scroller.removeCollection.indexOf(currentObj.id);\n                        this.scroller.removeCollection.splice(nodeIndex, 1);\n                    }\n                }\n                else if (children[i] instanceof DiagramHtmlElement) {\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var elementId = _c[_b];\n                        removeElement(currentObj.id + '_html_element', elementId);\n                        removeElement(children[i].id + '_html_element', elementId);\n                    }\n                }\n                removeGradient(children[i].id);\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param {NodeModel | ConnectorModel} obj - Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Removal');\n                }\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        this.updateBlazorCollectionChange(obj, false);\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (isBlazor() && (obj.id !== 'helper')) {\n                            this.UpdateBlazorDiagramModel(obj, \"Node\", index);\n                        }\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        this.UpdateBlazorDiagramModel(obj, \"Connector\", index);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (isBlazor()) {\n                                args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Removal');\n                            }\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    if (isBlazor()) {\n                        if (!this.isServerUpdate && selectedItems && selectedItems.length > 1) {\n                            this.isServerUpdate = true;\n                            this.UpdateBlazorDiagramModelCollection(selectedItems[0], undefined, selectedItems);\n                        }\n                        if (selectedItems[i].parentId) {\n                            this.insertBlazorDiagramObjects(this.nameTable[selectedItems[i].parentId]);\n                        }\n                    }\n                    this.remove(selectedItems[i]);\n                    if (isBlazor() && selectedItems[i].parentId) {\n                        this.commandHandler.getBlazorOldValues();\n                        this.isServerUpdate = false;\n                    }\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n        if (isBlazor() && selectedItems && selectedItems.length > 0) {\n            var check = true;\n            for (var k = 0; k < selectedItems.length; k++) {\n                if (this.nameTable[selectedItems[k].id]) {\n                    check = false;\n                }\n            }\n            if (check) {\n                this.isServerUpdate = false;\n            }\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     * @deprecated\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /* tslint:disable */\n    /**\n     * Specified annotation to edit mode\n     * @param {NodeModel | ConnectorModel} node - Defines node/connector that contains the annotation to be edited\n     * @param {string} id - Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if ((!canZoomPan(this) && !canMultiSelect(this)) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(node);\n                    if (selectedNode.annotations.length > 0) {\n                        this.insertValue(selectedNode, (node instanceof Node) ? true : false);\n                    }\n                    node = this.nameTable[node.id] || node;\n                }\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    Diagram.prototype.removeChildrenFromLayout = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var nodes = this.removeChildrenFromLayout(this.nodes);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.layout.type !== 'None') {\n            if (this.organizationalChartModule) {\n                layout = this.organizationalChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n                update = true;\n                if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                    this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n                }\n            }\n            else if (this.mindMapChartModule) {\n                if (nodes && nodes.length > 0) {\n                    this.mindMapChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n                }\n                update = true;\n            }\n            else if (this.radialTreeModule) {\n                this.radialTreeModule.updateLayout(nodes, this.nameTable, this.layout, viewPort);\n                update = true;\n            }\n            else if (this.symmetricalLayoutModule) {\n                this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n                this.symmetricalLayoutModule.springLength = this.layout.springLength;\n                this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n                this.symmetricalLayoutModule.updateLayout(nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n                update = true;\n            }\n            else if (this.complexHierarchicalTreeModule) {\n                var nodes_1 = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n                if (nodes_1.length > 0) {\n                    this.complexHierarchicalTreeModule.doLayout(nodes_1, this.nameTable, this.layout, viewPort);\n                }\n                update = true;\n            }\n            if (update) {\n                this.preventUpdate = true;\n                var connectors = {};\n                var updatedNodes = nodes;\n                if (isBlazor()) {\n                    this.updateTemplate();\n                }\n                for (var _i = 0, updatedNodes_1 = updatedNodes; _i < updatedNodes_1.length; _i++) {\n                    var obj = updatedNodes_1[_i];\n                    var node = obj;\n                    if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                        this.updateIcon(node);\n                        this.updateDefaultLayoutIcons(node);\n                    }\n                    this.preventNodesUpdate = true;\n                    this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                    this.preventNodesUpdate = false;\n                    node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                    node.wrapper.arrange(node.wrapper.desiredSize);\n                    this.updateDiagramObject(node, true);\n                    if (node.inEdges.length > 0) {\n                        for (var j = 0; j < node.inEdges.length; j++) {\n                            var connector = this.nameTable[node.inEdges[j]];\n                            connectors[connector.id] = connector;\n                        }\n                    }\n                    if (node.outEdges.length > 0) {\n                        for (var k = 0; k < node.outEdges.length; k++) {\n                            var connection = this.nameTable[node.outEdges[k]];\n                            connectors[connection.id] = connection;\n                        }\n                    }\n                }\n                for (var _a = 0, _b = Object.keys(connectors); _a < _b.length; _a++) {\n                    var conn = _b[_a];\n                    var connector = connectors[conn];\n                    var points = this.getPoints(connector);\n                    updateConnector(connector, points);\n                    if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                        this.commandHandler.updatePathElementOffset(connector);\n                    }\n                    connector.wrapper.measure(new Size(undefined, undefined));\n                    connector.wrapper.arrange(connector.wrapper.desiredSize);\n                    this.updateConnectorAnnotation(connector);\n                    this.updateQuad(connector);\n                    this.updateDiagramObject(connector, true);\n                }\n                this.preventUpdate = false;\n                this.updatePage();\n                if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                    this.refreshDiagramLayer();\n                }\n            }\n            if (!propChange) {\n                this.protectPropertyChange(propChange);\n            }\n        }\n        if (update) {\n            this.updateDiagramElementQuad();\n        }\n        return ((this.blazorActions & BlazorAction.expandNode) ? layout : true);\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param {string} data - Defines the behavior of the diagram to be loaded\n     * @deprecated\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param {StyleSheetList} styleSheets - defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param {string} image - defines image content to be exported.\n     * @param {IExportOptions} options - defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param {string} image - defines image content.\n     * @param {IExportOptions} options - defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param {number} stackLimit - defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param {IExportOptions} options - defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param {IPrintOptions} optons - defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     * @blazorArgsType obj|DiagramNode, ports|ObservableCollection<DiagramPort>\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add labels in node at the run time in the blazor platform\n     * @blazorArgsType obj|DiagramNode,labels|ObservableCollection<DiagramNodeAnnotation>\n     */\n    Diagram.prototype.addNodeLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add labels in connector at the run time in the blazor platform\n     * @blazorArgsType obj|DiagramConnector , labels|ObservableCollection<DiagramConnectorAnnotation>\n     */\n    Diagram.prototype.addConnectorLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(obj);\n                    this.insertValue(selectedNode, (obj instanceof Node) ? true : false);\n                }\n                this.UpdateBlazorDiagramModel(newObj, 'NodeAnnotation', undefined, this.nodes.indexOf(obj));\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_2 = 0; i_2 < node.wrapper.children.length; i_2++) {\n                        if (node.wrapper.children[i_2].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_2];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                this.UpdateBlazorDiagramModel(newObj, 'ConnectorAnnotation', undefined, this.connectors.indexOf(obj));\n                obj.annotations.push(newObj);\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(obj);\n                    this.insertValue(selectedNode, (obj instanceof Node) ? true : false);\n                }\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     * @deprecated\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     * @deprecated\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove dynamic Lanes to swimLane at runtime\n     * @deprecated\n     */\n    Diagram.prototype.removeLane = function (node, lane) {\n        removeLane(this, undefined, node, lane);\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove a phase to a swimLane at runtime\n     * @deprecated\n     */\n    Diagram.prototype.removePhase = function (node, phase) {\n        removePhase(this, undefined, node, phase);\n        this.updateDiagramElementQuad();\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        obj = this.nameTable[obj.id] || obj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     * @blazorArgsType obj|DiagramNode,ports|ObservableCollection<DiagramPort>\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        obj = this.nameTable[obj.id] || obj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param {string | number} real - real value\n     * @param {number} rulerSize - ruler size\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            applyStyleAgainstCsp(this.diagramCanvas, style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        applyStyleAgainstCsp(bgLayer, commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%'\n        });\n        if (checkBrowserInfo()) {\n            rect.setAttribute('fill', 'url(' + location.href + '#' + this.element.id + '_pattern ');\n        }\n        else {\n            rect.setAttribute('fill', 'url(#' + this.element.id + '_pattern)');\n        }\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.style['pointer-events'] = 'none';\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramSvg.style['pointer-events'] = 'all';\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            applyStyleAgainstCsp(this.diagramLayer, 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.style['pointer-events'] = 'none';\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.style[' pointer-events'] = 'all';\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.updateBazorShape = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            switch (node.shape.type) {\n                case 'Bpmn':\n                    node.shape.bpmnShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.bpmnShape;\n                    break;\n                case 'UmlActivity':\n                    node.shape.umlActivityShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.umlActivityShape;\n                    break;\n                case 'Flow':\n                    node.shape.flowShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.flowShape;\n                    break;\n                case 'Basic':\n                    node.shape.basicShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.basicShape;\n                    break;\n                case 'Text':\n                    node.shape.textContent =\n                        node.shape.content ? node.shape.content\n                            : node.shape.textContent;\n                    break;\n            }\n        }\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        this.updateBazorShape();\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var blazor = 'Blazor';\n        var canCloneObject = window && window[blazor] && !this.dataSourceSettings.dataSource;\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        var previousNodeObject = [];\n        var previousConnectorObject = [];\n        var updateNodeObject = [];\n        var updateConnectorObject = [];\n        var changeNodes = [];\n        var changeConnectors = [];\n        if (isBlazor() && canCloneObject) {\n            previousNodeObject = this.previousNodeCollection;\n            previousConnectorObject = this.previousConnectorCollection;\n        }\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        var alignedGroups = this.alignGroup(groups, tempTabel);\n        for (var _m = 0, alignedGroups_1 = alignedGroups; _m < alignedGroups_1.length; _m++) {\n            var obj = alignedGroups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n        if (isBlazor() && canCloneObject) {\n            for (var _p = 0, _q = this.nodes; _p < _q.length; _p++) {\n                var obj_2 = _q[_p];\n                updateNodeObject.push(cloneObject(obj_2, undefined, undefined, true));\n            }\n            for (var _r = 0, _s = this.connectors; _r < _s.length; _r++) {\n                var obj_3 = _s[_r];\n                updateConnectorObject.push(cloneObject(obj_3, undefined, undefined, true));\n            }\n            this.commandHandler.getObjectChanges(previousNodeObject, updateNodeObject, changeNodes);\n            this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n            var blazorInterop = 'sfBlazor';\n            var diagramObject = { nodes: changeNodes, connectors: changeConnectors };\n            var obj = {\n                'methodName': 'UpdateBlazorProperties',\n                'diagramobj': diagramObject\n            };\n            window[blazorInterop].updateBlazorProperties(obj, this);\n        }\n    };\n    Diagram.prototype.alignGroup = function (parents, tempTabel) {\n        var newList = [];\n        var parentist = [];\n        var child;\n        var childNode;\n        var i;\n        var j;\n        for (i = 0; i < parents.length; i++) {\n            child = parents[i];\n            childNode = tempTabel[child];\n            var node = void 0;\n            if (childNode && childNode.children.length) {\n                for (j = 0; j < childNode.children.length; j++) {\n                    node = childNode.children[j];\n                    if (parents.indexOf(node) > -1 && (newList.indexOf(node) === -1) &&\n                        (parentist.indexOf(node) === -1)) {\n                        newList.splice(0, 0, node);\n                    }\n                }\n            }\n            if (newList.indexOf(child) === -1) {\n                parentist.push(child);\n            }\n        }\n        newList = newList.concat(parentist);\n        return newList;\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue,\n            newValue: newValue, source: this\n        };\n        if (isBlazor() && this.scrollChange) {\n            arg = {\n                oldValue: oldValue,\n                newValue: newValue,\n                sourceId: this.element.id\n            };\n        }\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer, null, true);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults.ports) {\n                                for (var i = 0; i < defaults.ports.length; i++) {\n                                    defaults.ports[i].inEdges = [];\n                                    defaults.ports[i].outEdges = [];\n                                }\n                            }\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== ''\n                    && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== ''\n                    && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                if (obj instanceof Connector && obj.type === 'Bezier') {\n                    this.updateConnectorAnnotation(obj);\n                }\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                this.preventNodesUpdate = true;\n                this.preventConnectorsUpdate = true;\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n                this.preventNodesUpdate = false;\n                this.preventConnectorsUpdate = false;\n            }\n            if (this['enterObject'] === undefined) {\n                this.updateQuad(obj);\n            }\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && ((this.realActions & RealAction.EnableGroupAction) ||\n                    (!(this.diagramActions & DiagramAction.ToolAction)\n                        && !(this.diagramActions & DiagramAction.PublicMethod)))) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && ((this.realActions & RealAction.EnableGroupAction) ||\n                    (!(this.diagramActions & DiagramAction.ToolAction)))) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!this.diagramSettings.inversedAlignment) {\n            canvas.inversedAlignment = false;\n        }\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate && obj.id !== 'helper') {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false, this.annotationTemplate);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n            this.updateDiagramElementQuad();\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height), obj.id, this.onLoadImageSize.bind(this));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramElementQuad = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            if (this.nodes[i].wrapper && (this.nodes[i].wrapper instanceof Container)) {\n                this.updateQuad(this.nodes[i]);\n            }\n        }\n    };\n    Diagram.prototype.onLoadImageSize = function (id, size) {\n        var obj = this.getObject(id);\n        var image = document.getElementById(id + 'sf-imageNode');\n        if (image) {\n            image.parentNode.removeChild(image);\n        }\n        this.nodePropertyChange(obj, {}, { width: size.width, height: size.height });\n        var args = { element: cloneObject(obj), size: size };\n        this.triggerEvent(DiagramEvent.onImageLoad, args);\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n            this.updatePortEdges(node, obj, false);\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            this.updatePortEdges(node, obj, true);\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortEdges = function (node, obj, isInEdges) {\n        if (node) {\n            for (var i = 0; i < node.ports.length; i++) {\n                var port = node.ports[i];\n                var portId = (isInEdges) ? obj.targetPortID : obj.sourcePortID;\n                if (port.id === portId) {\n                    var portEdges = (isInEdges) ? port.inEdges : port.outEdges;\n                    if (portEdges.indexOf(obj.id) === -1) {\n                        portEdges.push(obj.id);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n        this.addBlazorDiagramObjects();\n        if (isBlazor() && this.layout && this.layout.layoutInfo && this.layout.layoutInfo.isRootInverse && this.nodes.length > 2) {\n            var rootNode = this.nodes[0];\n            if (rootNode.outEdges.length > 1) {\n                var isProtectedChange = this.isProtectedOnChange;\n                var connector = this.nameTable[rootNode.outEdges[1]];\n                this.protectPropertyChange(false);\n                this.preventUpdate = true;\n                connector.sourcePortID = rootNode.ports[1].id;\n                this.preventUpdate = false;\n                this.dataBind();\n                this.protectPropertyChange(isProtectedChange);\n            }\n        }\n        if (isBlazor()) {\n            var view = void 0;\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                view = this.views[temp];\n                if (view.renderDocument) {\n                    view.renderDocument(view);\n                    view.diagramRenderer.setLayers();\n                    view.updateView(view);\n                    this.renderNodes(view);\n                }\n            }\n        }\n        this.updateFitToPage();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex, isUpdateObject) {\n        var view;\n        var domTable = 'domTable';\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var hasLayers = this.layers.length > 1;\n                    var layer = void 0;\n                    if (hasLayers) {\n                        layer = this.commandHandler.getObjectLayer(obj.id);\n                    }\n                    if ((layer === undefined || (layer && layer.visible)) || isUpdateObject) {\n                        var htmlLayer = getHTMLLayer(this.element.id);\n                        if (!window[domTable][view.element.id + '_diagramLayer']) {\n                            window[domTable][view.element.id + '_diagramLayer'] =\n                                document.getElementById(view.element.id + '_diagramLayer');\n                        }\n                        var diagramElementsLayer = window[domTable][view.element.id + '_diagramLayer'];\n                        if (this.diagramActions & DiagramAction.Interactions) {\n                            this.updateCanupdateStyle(obj.wrapper.children, true);\n                        }\n                        this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById(this.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(this.element.id);\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var domTable = 'domTable';\n        if (!window[domTable][this.element.id + 'content']) {\n            window[domTable][this.element.id + 'content'] = document.getElementById(this.element.id + 'content');\n        }\n        var container = window[domTable][this.element.id + 'content'];\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        if (!(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.updateSelector();\n        }\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var isProtectedOnChangeValue = this.isProtectedOnChange;\n        if (isBlazor()) {\n            this.isProtectedOnChange = true;\n            this.commandHandler.oldSelectedObjects = cloneSelectedObjects(this, true);\n        }\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n        this.commandHandler.updateBlazorSelector();\n        this.isProtectedOnChange = isProtectedOnChangeValue;\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if ((!isBlazor() && node.shape.shape === 'Activity') ||\n                (isBlazor() && node.shadow.bpmnShape === 'Activity')) {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    /* tslint:disable */\n    Diagram.prototype.endEdit = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var textArea, text, element, node, annotation, args, bpmnAnnotation, textWrapper, deleteNode, annotation_1, clonedObject, selectedNode, swimLaneNode, laneHeader, phaseHeader, collection, j;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.diagramActions & DiagramAction.TextEdit)) return [3 /*break*/, 9];\n                        this.enableServerDataBinding(false);\n                        textArea = document.getElementById(this.element.id + '_editBox');\n                        if (!((isBlazor() && textArea) || !isBlazor())) return [3 /*break*/, 9];\n                        text = textArea.value;\n                        EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n                        EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n                        element = document.getElementById(this.element.id + '_editTextBoxDiv');\n                        node = void 0;\n                        node = this.nameTable[this.activeLabel.parentId];\n                        annotation = findAnnotation(node, this.activeLabel.id);\n                        args = { oldValue: this.activeLabel.text, newValue: text, cancel: false, element: node, annotation: annotation };\n                        if (isBlazor() && this.textEdit) {\n                            args = this.getBlazorTextEditArgs(args);\n                        }\n                        bpmnAnnotation = false;\n                        element.parentNode.removeChild(element);\n                        textWrapper = void 0;\n                        if (!this.bpmnModule) return [3 /*break*/, 4];\n                        node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                        textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                        bpmnAnnotation = node ? true : false;\n                        if (!bpmnAnnotation) return [3 /*break*/, 4];\n                        if (!(element.textContent !== text || text !== this.activeLabel.text)) return [3 /*break*/, 4];\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.textEdit, args)];\n                    case 1:\n                        args = (_a.sent()) || args;\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        _a.label = 3;\n                    case 3:\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                        _a.label = 4;\n                    case 4:\n                        if (!!bpmnAnnotation) return [3 /*break*/, 8];\n                        node = this.nameTable[this.activeLabel.parentId];\n                        deleteNode = this.eventHandler.isAddTextNode(node, true);\n                        if (!(!deleteNode && (element.textContent !== text || text !== this.activeLabel.text))) return [3 /*break*/, 7];\n                        if (!isBlazor()) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.textEdit, args)];\n                    case 5:\n                        args = (_a.sent()) || args;\n                        return [3 /*break*/, 7];\n                    case 6:\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        _a.label = 7;\n                    case 7:\n                        if (!textWrapper) {\n                            textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                        }\n                        annotation_1 = findAnnotation(node, this.activeLabel.id);\n                        if (annotation_1.content !== text && !args.cancel) {\n                            if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                                && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                                && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                                text = ' + ' + text;\n                            }\n                            if (node.isLane || node.isPhase) {\n                                this.protectPropertyChange(true);\n                            }\n                            if (isBlazor() && (node.shape).type === \"Text\") {\n                                node.shape.textContent = text;\n                            }\n                            annotation_1.content = text;\n                            this.dataBind();\n                            this.updateSelector();\n                            if (node.isLane || node.isPhase) {\n                                this.protectPropertyChange(false);\n                            }\n                        }\n                        if (deleteNode) {\n                            this.removeObjectsFromLayer(node);\n                            this.removeFromAQuad(node);\n                            delete this.nameTable[this.activeLabel.parentId];\n                            if (text !== '') {\n                                this.clearSelection();\n                                clonedObject = cloneObject(node);\n                                node = this.add(clonedObject);\n                                this.updateDiagramObject(node);\n                                this.commandHandler.select(this.nameTable[node.id]);\n                            }\n                        }\n                        _a.label = 8;\n                    case 8:\n                        if (this.selectedItems.nodes.length) {\n                            selectedNode = this.nameTable[this.activeLabel.parentId];\n                            swimLaneNode = this.nameTable[selectedNode.parentId];\n                            if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                                laneHeader = 'LaneHeaderParent';\n                                phaseHeader = 'PhaseHeaderParent';\n                                if ((selectedNode.shape.type === 'SwimLane')) {\n                                    swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                                    selectedNode = node;\n                                }\n                                if ((selectedNode.isLane || selectedNode.isPhase)) {\n                                    collection = selectedNode.isLane ?\n                                        swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                                    for (j = 0; j < collection.length; j++) {\n                                        if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                            collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                                        }\n                                    }\n                                }\n                                else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                                    swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                                }\n                            }\n                            this.dataBind();\n                        }\n                        textWrapper.visible = true;\n                        this.updateDiagramObject(node);\n                        this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n                        if (this.activeLabel.isGroup) {\n                            this.endGroupAction();\n                        }\n                        this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n                        this.commandHandler.getBlazorOldValues();\n                        this.enableServerDataBinding(true);\n                        _a.label = 9;\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /* tslint:enable */\n    Diagram.prototype.getBlazorTextEditArgs = function (args) {\n        var element = getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n            : { node: cloneBlazorObject(args.element) };\n        var annotation = {};\n        if (element.node) {\n            if (element.node.shape.type === 'Text') {\n                annotation.textNode = args.element.shape;\n            }\n            else {\n                annotation.nodeAnnotation = args.element.annotations[0];\n            }\n        }\n        else {\n            annotation.connectorAnnotation = args.element.annotations[0];\n        }\n        args = {\n            oldValue: args.oldValue,\n            newValue: args.newValue,\n            cancel: args.cancel,\n            element: element,\n            annotation: annotation\n        };\n        return args;\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        if (isBlazor()) {\n            for (var i = 0; i < this.nodes.length; i++) {\n                if (node.id === this.nodes[i].id) {\n                    this.UpdateBlazorDiagramModel(node, 'Node', i);\n                }\n            }\n        }\n        this.UpdateBlazorDiagramModel(node, 'Node', (this.nodes.indexOf(node)));\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        this.UpdateBlazorDiagramModelCollection(node);\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            else if (oldObject.constraints) {\n                var oldSelectConstraints = (oldObject.constraints & NodeConstraints.Select);\n                var newSelectConstraints = (node.constraints & NodeConstraints.Select);\n                if (oldSelectConstraints !== newSelectConstraints) {\n                    var shape = actualObject.shape;\n                    // Header - constraints\n                    var headerNode = this.nameTable[actualObject.id + shape.header.id];\n                    headerNode.constraints = (!newSelectConstraints) ? headerNode.constraints & ~NodeConstraints.Select :\n                        headerNode.constraints | NodeConstraints.Select;\n                    // Phase - Constraints\n                    var phaseNode = void 0;\n                    if (shape.phaseSize > 0) {\n                        for (var i = 0; i < shape.phases.length; i++) {\n                            phaseNode = this.nameTable[actualObject.id + shape.phases[i].id + '_header'];\n                            phaseNode.constraints = (!newSelectConstraints) ? phaseNode.constraints & ~NodeConstraints.Select :\n                                phaseNode.constraints | NodeConstraints.Select;\n                        }\n                    }\n                    // Header - Constraints\n                    var laneNode = void 0;\n                    var laneHeader = void 0;\n                    var value = shape.phases.length || 1;\n                    for (var i = 0; i < shape.lanes.length; i++) {\n                        for (var l = 0; l < value; l++) {\n                            laneNode = this.nameTable[actualObject.id + shape.lanes[i].id + l];\n                            laneNode.constraints = (!newSelectConstraints) ? laneNode.constraints & ~NodeConstraints.Select :\n                                laneNode.constraints | NodeConstraints.Select;\n                            if (l === 0) {\n                                laneHeader = this.nameTable[actualObject.id + shape.lanes[i].id + '_' + l + '_header'];\n                                laneHeader.constraints = (!newSelectConstraints) ? laneHeader.constraints & ~NodeConstraints.Select :\n                                    laneHeader.constraints | NodeConstraints.Select;\n                            }\n                        }\n                    }\n                }\n            }\n            update = true;\n        }\n        return update;\n    };\n    /** @private */\n    Diagram.prototype.insertValue = function (oldNodeObject, isNode) {\n        var value;\n        var oldObjects = isNode ? this.oldNodeObjects : this.oldConnectorObjects;\n        for (var i = 0; i < oldObjects.length; i++) {\n            if (oldObjects[i].id === oldNodeObject.id) {\n                value = true;\n            }\n        }\n        if (!value) {\n            isNode ? (this.oldNodeObjects.push(oldNodeObject)) : this.oldConnectorObjects.push(oldNodeObject);\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        if (this.canEnableBlazorObject) {\n            var node_2 = cloneObject(actualObject);\n            this.insertValue(node_2, true);\n        }\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && ((!isBlazor() && actualObject.shape.shape === 'FinalNode') ||\n            (isBlazor() && actualObject.shape.umlActivityShape === 'FinalNode'))) {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            if (this.checkSelectedItem(actualObject) && actualObject.wrapper.children[0] instanceof TextElement) {\n                actualObject.wrapper.children[0].refreshTextElement();\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height), actualObject.id, this.onLoadImageSize.bind(this));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                    if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                        this.updateDiagramObject(actualObject, true);\n                    }\n                    else {\n                        this.updateDiagramObject(actualObject);\n                    }\n                }\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_3 = 0; i_3 < objects_2.length; i_3++) {\n                            var object = objects_2[i_3];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_3], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: element, cause: this.diagramActions,\n                oldValue: oldObject, newValue: node\n            };\n            if (isBlazor() && this.propertyChange) {\n                args.element = { node: cloneBlazorObject(element) };\n                args.oldValue = { node: cloneBlazorObject(oldObject) };\n                args.newValue = { node: cloneBlazorObject(node) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        if (this.canEnableBlazorObject) {\n            var node = cloneObject(actualObject);\n            this.insertValue(node, false);\n        }\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                    if (actualObject.sourcePortID && newProp.sourcePortID === undefined) {\n                        actualObject.sourcePortWrapper = sourceNode ? this.getWrapper(sourceNode.wrapper, actualObject.sourcePortID) : undefined;\n                    }\n                    this.removePortEdges(this.nameTable[oldProp.sourceID] || sourceNode, oldProp.sourcePortID || actualObject.sourcePortID, actualObject.id, false);\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                    if (actualObject.targetPortID && newProp.targetPortID === undefined) {\n                        actualObject.targetPortWrapper = targetNode ? this.getWrapper(targetNode.wrapper, actualObject.targetPortID) : undefined;\n                    }\n                    this.removePortEdges(this.nameTable[oldProp.targetID] || targetNode, oldProp.targetPortID || actualObject.targetPortID, actualObject.id, true);\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ? this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (actualObject.type === 'Orthogonal' && this.lineRoutingModule && this.diagramActions &&\n                (this.constraints & DiagramConstraints.LineRouting) && !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && (canMeasureDecoratorPath(Object.keys(newProp.targetDecorator)))) || newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints, this.diagramActions);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (actualObject.shape.type === 'Bpmn' && actualObject.shape.sequence === 'Default') {\n            this.commandHandler.updatePathElementOffset(actualObject);\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction)\n            || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                    this.updateDiagramObject(actualObject, true);\n                }\n                else {\n                    this.updateDiagramObject(actualObject);\n                }\n            }\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        this.triggerPropertyChange(propertyChange, actualObject, oldProp, newProp);\n    };\n    /* tslint:enable */\n    /** @private */\n    Diagram.prototype.removePortEdges = function (node, portId, item, isInEdges) {\n        if (node) {\n            for (var i = 0; i < node.ports.length; i++) {\n                var port = node.ports[i];\n                if (port.id === portId) {\n                    var portEdge = (isInEdges) ? port.inEdges : port.outEdges;\n                    removeItem(portEdge, item);\n                }\n            }\n        }\n    };\n    Diagram.prototype.getpropertyChangeArgs = function (element, oldProp, newProp, args) {\n        args.element = { connector: cloneBlazorObject(element) };\n        args.oldValue = { connector: cloneBlazorObject(oldProp) };\n        args.newValue = { connector: cloneBlazorObject(newProp) };\n        return args;\n    };\n    Diagram.prototype.triggerPropertyChange = function (propertyChange, actualObject, oldProp, newProp) {\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args = this.getpropertyChangeArgs(element, oldProp, newProp, args);\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id], undefined, true);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    //updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if (actualObject.shape.type === 'UmlActivity' &&\n                    ((isBlazor && actualObject.shape.umlActivityShape === 'StructuredNode') ||\n                        (!isBlazor && actualObject.shape.shape === 'StructuredNode'))) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                    portWrapper.canMeasurePath = true;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if ((this.diagramActions & DiagramAction.Render) &&\n            !(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.getProtectPropertyChangeValue = function () {\n        return this.isProtectedOnChange;\n    };\n    /** @private */\n    Diagram.prototype.enableServerDataBinding = function (enable) {\n        if (isBlazor()) {\n            this.allowServerDataBinding = enable;\n            if (enable) {\n                this.bulkChanges = {};\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                var dragDataHelper = null;\n                if (!args.dragData && args.name === 'drag') {\n                    var helper = document.getElementsByClassName('e-dragclone')[0];\n                    if (helper) {\n                        dragDataHelper = helper;\n                    }\n                }\n                if (args.dragData || dragDataHelper) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = dragDataHelper || args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    var nodeDragSize = void 0;\n                    var nodePreviewSize = void 0;\n                    var paletteDragSize = void 0;\n                    if (paletteId) {\n                        // tslint:disable-next-line:no-any\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            _this.allowServerDataBinding = false;\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                if (obj.shape.shape === 'TextAnnotation') {\n                                    clonedObject.offsetX = position.x + 11 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                    clonedObject.offsetY = position.y + 11 + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                }\n                                else {\n                                    clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                    clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                }\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                nodeDragSize = newNode.dragSize;\n                                nodePreviewSize = newNode.previewSize;\n                                paletteDragSize = sourceElement['symbolDragSize'];\n                                var palettePreview = sourceElement['symbolPreview'];\n                                newNode.width = nodeDragSize.width || paletteDragSize.width || nodePreviewSize.width || palettePreview.width || newNode.width;\n                                newNode.height = nodeDragSize.height || paletteDragSize.height || nodePreviewSize.height || palettePreview.height || newNode.height;\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        _this.diagramActions |= DiagramAction.PreventCollectionChangeOnDragOver;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        group.previewSize = newNode.previewSize;\n                                        group.dragSize = newNode.dragSize;\n                                        group.addInfo = newNode.addInfo;\n                                        newNode = _this.add(group);\n                                        _this.diagramActions &= ~DiagramAction.PreventCollectionChangeOnDragOver;\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            if (isBlazor()) {\n                                arg = _this.getBlazorDragEventArgs(arg);\n                            }\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                nodeDragSize = newObj.dragSize;\n                                nodePreviewSize = newObj.previewSize;\n                                paletteDragSize = sourceElement['symbolDragSize'];\n                                laneObj.width = nodeDragSize.width || paletteDragSize.width || nodePreviewSize.width || laneObj.width;\n                                laneObj.height = nodeDragSize.height || paletteDragSize.height || nodePreviewSize.height || laneObj.height;\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                        _this.allowServerDataBinding = true;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) { return __awaiter(_this, void 0, void 0, function () {\n            var source, value, isPhase, orientation_2, isConnector, newObj, node, conn, arg, clonedObject, id, nodeId, arg, clonedObject, id, selectedSymbols;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.allowServerDataBinding = false;\n                        source = 'sourceElement';\n                        if (!this.currentSymbol) return [3 /*break*/, 4];\n                        isPhase = false;\n                        isConnector = void 0;\n                        isConnector = (this.currentSymbol instanceof Connector) ? true : false;\n                        if (args.event.touches) {\n                            this.eventHandler.mouseUp(args.event);\n                        }\n                        newObj = void 0;\n                        node = void 0;\n                        conn = void 0;\n                        arg = void 0;\n                        arg = {\n                            source: this.droppable[source],\n                            element: this.currentSymbol,\n                            target: this.eventHandler['hoverNode'] || this.eventHandler['lastObjectUnderMouse'] || this, cancel: false,\n                            position: { x: this.currentSymbol.wrapper.offsetX, y: this.currentSymbol.wrapper.offsetY }\n                        };\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        arg = {\n                            source: cloneBlazorObject(this.droppable[source]),\n                            element: getObjectType(this.currentSymbol) === Connector ? { connector: cloneBlazorObject(this.currentSymbol) } : { node: cloneBlazorObject(this.currentSymbol) },\n                            cancel: false, target: {},\n                            position: { x: this.currentSymbol.wrapper.offsetX, y: this.currentSymbol.wrapper.offsetY }\n                        };\n                        this.getDropEventArgs(arg);\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.drop, arg)];\n                    case 1:\n                        arg = (_a.sent()) || arg;\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.triggerEvent(DiagramEvent.drop, arg);\n                        _a.label = 3;\n                    case 3:\n                        clonedObject = void 0;\n                        id = 'id';\n                        clonedObject = cloneObject(this.currentSymbol);\n                        clonedObject['hasTarget'] = this.currentSymbol['hasTarget'];\n                        this.removeFromAQuad(this.currentSymbol);\n                        this.removeObjectsFromLayer(this.nameTable[this.currentSymbol.id]);\n                        this.removeElements(this.currentSymbol);\n                        if (this.currentSymbol.shape.isLane ||\n                            this.currentSymbol.shape.isPhase) {\n                            this.removeChildInNodes(this.currentSymbol);\n                        }\n                        if (arg.cancel) {\n                            removeChildNodes(this.currentSymbol, this);\n                        }\n                        if (this.currentSymbol.shape.isPhase) {\n                            isPhase = true;\n                            orientation_2 = this.currentSymbol.shape.orientation;\n                        }\n                        delete this.nameTable[this.currentSymbol.id];\n                        this.currentSymbol = null;\n                        this.protectPropertyChange(true);\n                        if (!arg.cancel) {\n                            this.startGroupAction();\n                            if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                                if (isPhase) {\n                                    clonedObject.shape.isPhase = isPhase;\n                                    clonedObject.shape.orientation = orientation_2;\n                                }\n                                this.eventHandler.addSwimLaneObject(clonedObject);\n                            }\n                            if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                                && clonedObject['hasTarget']) {\n                                nodeId = clonedObject.shape.annotation.nodeId;\n                                clonedObject.shape.annotation.id = clonedObject.id;\n                                this.addTextAnnotation(clonedObject.shape.annotation, this.nameTable[nodeId]);\n                                clonedObject.nodeId = '';\n                            }\n                            if (!clonedObject.shape.isLane && !isPhase) {\n                                if (clonedObject.children) {\n                                    this.addChildNodes(clonedObject);\n                                }\n                                if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(this, arg.target)\n                                    && canAllowDrop(arg.target)) {\n                                    addChildToContainer(this, arg.target, clonedObject);\n                                }\n                                else {\n                                    value = this.add(clonedObject, true);\n                                }\n                                if ((clonedObject || value) && canSingleSelect(this)) {\n                                    this.select([this.nameTable[clonedObject[id]]]);\n                                }\n                            }\n                        }\n                        else {\n                            this.clearSelectorLayer();\n                        }\n                        this.protectPropertyChange(false);\n                        newObj = this.nameTable[clonedObject[id]];\n                        if (clonedObject['hasTarget']) {\n                            clonedObject.nodeId = clonedObject['hasTarget'];\n                            this.remove(clonedObject);\n                        }\n                        if (this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                            newObj.processId = clonedObject.processId;\n                            this.bpmnModule.dropBPMNchild(this.nameTable[newObj.processId], newObj, this);\n                        }\n                        this.endGroupAction();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        delete this.droppable[source];\n                        return [3 /*break*/, 5];\n                    case 4:\n                        arg = {\n                            source: cloneBlazorObject(args.droppedElement),\n                            element: undefined,\n                            target: cloneBlazorObject(this.eventHandler['hoverNode'] || (this.eventHandler['lastObjectUnderMouse']) || this), cancel: false,\n                            position: undefined\n                        };\n                        if (isBlazor()) {\n                            arg = {\n                                source: cloneBlazorObject(args.droppedElement),\n                                element: undefined,\n                                cancel: false,\n                                position: undefined,\n                                target: {}\n                            };\n                            this.getDropEventArgs(arg);\n                        }\n                        this.triggerEvent(DiagramEvent.drop, arg);\n                        clonedObject = void 0;\n                        id = 'id';\n                        _a.label = 5;\n                    case 5:\n                        selectedSymbols = 'selectedSymbols';\n                        if (this.droppable[selectedSymbols]) {\n                            remove(this.droppable[selectedSymbols]);\n                        }\n                        this.allowServerDataBinding = true;\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                var args_1 = {\n                    element: cloneBlazorObject(_this.currentSymbol),\n                    diagram: _this\n                };\n                if (isBlazor()) {\n                    args_1 = _this.getBlazorDragLeaveEventArgs(args_1);\n                }\n                _this.triggerEvent(DiagramEvent.dragLeave, args_1);\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.getBlazorDragLeaveEventArgs = function (args) {\n        args = {\n            diagramId: this.element.id,\n            element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) }\n        };\n        return args;\n    };\n    Diagram.prototype.getDropEventArgs = function (arg) {\n        if ((this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'])) {\n            var object = this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'];\n            arg.target = getObjectType(object) === Connector ? { connector: cloneBlazorObject(object) } : { node: cloneBlazorObject(object) };\n        }\n        else {\n            arg.target.diagramId = this.element.id;\n        }\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.getBlazorDragEventArgs = function (args) {\n        args = {\n            source: cloneBlazorObject(args.source), element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) },\n            cancel: args.cancel, diagramId: this.element.id\n        };\n        return args;\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.updateNativeNodeIndex(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    /**\n     * moves the node or connector forward within given layer\n     * @deprecated\n     */\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     * @deprecated\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     * @deprecated\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     * @deprecated\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"annotationTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"connectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Collection([], CustomCursorAction)\n    ], Diagram.prototype, \"customCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, DiagramSettings)\n    ], Diagram.prototype, \"diagramSettings\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"keyUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"keyDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onImageLoad\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"commandExecute\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { checkBrowserInfo } from './utility/diagram-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        /* tslint:disable */\n        return checkBrowserInfo() ? htmlData.replace(\"url(\" + location.href + \"#diagram_pattern \", \"url(#diagram_pattern)\") : htmlData;\n        /* tslint:enable */\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = context.diagram.pageSettings.background.color;\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, 0, 0, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\nimport { updateDefaultValues } from '../utility/diagram-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param {DataSourceModel} data\n     * @param {Diagram} diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param {DataSourceModel} data\n     * @param {Diagram} diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        var node;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    diagram.protectPropertyChange(true);\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.protectPropertyChange(false);\n                    diagram.trigger('dataLoaded', { diagram: cloneBlazorObject(diagram) });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var node;\n        var nodes;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param {Object} object\n     * @param {Object[]} rootnodes\n     * @param {DataSourceModel} mapper\n     * @param {Object[]} data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param {DataSourceModel} mapper\n     * @param {Object} item\n     * @param {Diagram} diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var blazor = 'Blazor';\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        updateDefaultValues(obj, nodeModel, diagram.nodeDefaults);\n        if (mapper.dataMapSettings) {\n            var index = void 0;\n            var arrayProperty = [];\n            var innerProperty = [];\n            for (var i = 0; i < mapper.dataMapSettings.length; i++) {\n                if (mapper.dataMapSettings[i].property.indexOf('.') !== -1) {\n                    innerProperty = this.splitString(mapper.dataMapSettings[i].property);\n                    for (var p = 0; p < innerProperty.length; p++) {\n                        if (innerProperty[p].indexOf('[') !== -1) {\n                            index = innerProperty[p].indexOf('[');\n                            arrayProperty = innerProperty[p].split('[');\n                        }\n                    }\n                    if (index) {\n                        if (innerProperty[2]) {\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]][innerProperty[2]] =\n                                item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            var value = item[mapper.dataMapSettings[i].field];\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]] = value;\n                        }\n                    }\n                    else {\n                        if (innerProperty[2]) {\n                            obj[innerProperty[0]][innerProperty[1]][innerProperty[2]] = item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            obj[innerProperty[0]][innerProperty[1]] = item[mapper.dataMapSettings[i].field];\n                        }\n                    }\n                }\n                else {\n                    var property = mapper.dataMapSettings[i].property;\n                    property = property.charAt(0).toLowerCase() + property.slice(1);\n                    obj[property] = item[mapper.dataMapSettings[i].field];\n                }\n                index = 0;\n                arrayProperty = [];\n                innerProperty = [];\n            }\n        }\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.splitString = function (property) {\n        var temp = [];\n        temp = property.split('.');\n        for (var i = 0; i < temp.length; i++) {\n            temp[i] = temp[i].charAt(0).toLowerCase() + temp[i].slice(1);\n        }\n        return temp;\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        var returnNode;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param {Node} node\n     * @param {Diagram} diagram\n     * @param {string} id\n     * @param {string} parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param {string} sNode\n     * @param {string} tNode\n     * @param {Diagram} diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        updateDefaultValues(obj, connModel, diagram.connectorDefaults);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && (event || this.parent.checkMenu) &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var diagramArgs, _i, _a, item, _b, _c, newItem, hidden, contextItems, i, item, i, item;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (!this.parent.checkMenu &&\n                            (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n                            this.parent.checkMenu = args.cancel = true;\n                        }\n                        if (this.parent.checkMenu) {\n                            this.hiddenItems = [];\n                        }\n                        diagramArgs = args;\n                        diagramArgs.hiddenItems = [];\n                        for (_i = 0, _a = args.items; _i < _a.length; _i++) {\n                            item = _a[_i];\n                            this.ensureItems(item, args.event);\n                            if (item.items.length) {\n                                for (_b = 0, _c = item.items; _b < _c.length; _b++) {\n                                    newItem = _c[_b];\n                                    this.ensureItems(newItem, args.event);\n                                }\n                            }\n                        }\n                        this.eventArgs = args.event;\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.parent.trigger(contextMenuOpen, diagramArgs)];\n                    case 1:\n                        diagramArgs =\n                            (_d.sent()) || diagramArgs;\n                        if (typeof diagramArgs === 'string') {\n                            diagramArgs = JSON.parse(diagramArgs);\n                        }\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.parent.trigger(contextMenuOpen, diagramArgs);\n                        _d.label = 3;\n                    case 3:\n                        hidden = true;\n                        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n                        this.contextMenu.enableItems(this.disableItems, false, true);\n                        contextItems = this;\n                        for (i = 0; i < args.items.length; i++) {\n                            item = args.items[i];\n                            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                                contextItems.contextMenu.hideItems([item.id], true);\n                            }\n                        }\n                        for (i = 0; i < contextItems.contextMenu.items.length; i++) {\n                            item = contextItems.contextMenu.items[i];\n                            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                                hidden = false;\n                                contextItems.contextMenu.showItems([item.id], true);\n                            }\n                        }\n                        if (hidden) {\n                            diagramArgs.cancel = hidden;\n                            this.hiddenItems = [];\n                        }\n                        /* tslint:disable */\n                        if (this.parent.selectedItems.nodes.length && this.parent.selectedItems.nodes[0].isPhase) {\n                            args.cancel = true;\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../objects/node';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale === 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = scale;\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\nimport { DiagramEvent } from '../enum/enum';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                if (!isBlazor()) {\n                    diagram.historyManager.undo(entry);\n                }\n                var arg = {\n                    entryType: 'undo', oldValue: entry.undoObject, newValue: entry.redoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryChangeEvent = function (object, prop) {\n        var value = {};\n        switch (prop) {\n            case 'Node':\n                value.node = object;\n                break;\n            case 'Connector':\n                value.connector = object;\n                break;\n            case 'Selector':\n                value.selector = object;\n                break;\n            case 'Diagram':\n                value.diagram = object;\n                break;\n            case 'ShapeAnnotation':\n                value.shapeAnnotation = object;\n                break;\n            case 'PathAnnotation':\n                value.pathAnnotation = object;\n                break;\n            case 'PortObject':\n                value.pointPortModel = object;\n                break;\n            case 'Object':\n                value.object = object;\n        }\n        return value;\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n            case 'SendToBack':\n            case 'SendForward':\n            case 'SendBackward':\n            case 'BringToFront':\n                this.recordOrderCommandChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry, 'Undo');\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (diagram.canEnableBlazorObject) {\n            var node = cloneObject(diagram.nameTable[entryObject.id]);\n            diagram.insertValue(node, node instanceof Node ? true : false);\n        }\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        if (diagram.canEnableBlazorObject) {\n            var node = cloneObject(diagram.nameTable[entryObject.id]);\n            diagram.insertValue(node, true);\n        }\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordOrderCommandChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        diagram.commandHandler.orderCommands(isRedo, (isRedo ? redoObject : undoObject), entry.type);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            diagram.removePortEdges(diagram.nameTable[connector.sourceID], connector.sourcePortID, connector.id, false);\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            diagram.removePortEdges(diagram.nameTable[connector.targetID], connector.targetPortID, connector.id, true);\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n                diagram.updatePortEdges(node, obj, false);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n                diagram.updatePortEdges(node, obj, true);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                if (!isBlazor()) {\n                    diagram.historyManager.redo(entry);\n                }\n                var arg = {\n                    entryType: 'redo', oldValue: entry.redoObject, newValue: entry.undoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'SendToBack':\n            case 'SendForward':\n            case 'SendBackward':\n            case 'BringToFront':\n                this.recordOrderCommandChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry, 'Redo');\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent, RealAction, DiagramConstraints } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        diagram.realActions = diagram.realActions | RealAction.AnimationClick;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    diagram.allowServerDataBinding = false;\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                    diagram.allowServerDataBinding = true;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.realActions = diagram.realActions & ~RealAction.AnimationClick;\n            diagram.refreshCanvasLayers();\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n            if (diagram.lineRoutingModule && diagram.constraints & DiagramConstraints.LineRouting) {\n                diagram.resetSegments();\n            }\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        this.considerWalkable = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal' && connector.visible) {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var extraBounds = this.size;\n        if (diagram.spatialSearch['pageTop'] < 0 || diagram.spatialSearch['pageLeft'] < 0) {\n            extraBounds = this.size + (this.size / 2);\n        }\n        var right = diagram.spatialSearch['pageRight'] + extraBounds;\n        var bottom = diagram.spatialSearch['pageBottom'] + extraBounds;\n        var left = diagram.spatialSearch['pageLeft'] - extraBounds;\n        var top = diagram.spatialSearch['pageTop'] - extraBounds;\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        var nodes = this.findNodes(diagram.nodes);\n        this.updateNodesInVirtualRegion(nodes);\n    };\n    LineRouting.prototype.findNodes = function (nodes) {\n        var objects = [];\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.shape.type !== 'SwimLane' && !node.isLane && !node.isPhase && !node.isHeader && node.visible) {\n                objects.push(node);\n            }\n        }\n        return objects;\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.bounds);\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                        if (diagramNodes[k].parentId !== '') {\n                            grid.parentNodeId = diagramNodes[k].parentId;\n                        }\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource, isPortBounds) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (isPortBounds) {\n                if (portDirection === 'Top') {\n                    endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n                }\n                else if (portDirection === 'Left') {\n                    endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n                }\n                else if (portDirection === 'Right') {\n                    endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n                }\n                else {\n                    endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n                }\n            }\n            else {\n                endPoint = { x: bounds.center.x, y: bounds.center.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.wrapper.offsetX, y: this.startNode.wrapper.offsetY } :\n                    { x: this.targetNode.wrapper.offsetX, y: this.targetNode.wrapper.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid &&\n                        (grid.nodeId.indexOf(sourceId) !== -1 || sourceId === '')) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid &&\n                        (grid.nodeId.indexOf(targetId) !== -1 || targetId === '')) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.bounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.bounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            this.findEdgeBoundary(sourcePortID, sourceLeft, sourceRight, sourceTop, sourceBottom, true);\n            this.findEdgeBoundary(targetPortID, targetLeft, targetRight, targetTop, targetBottom, false);\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            this.checkObstacles(connector);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            this.considerWalkable = [];\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    LineRouting.prototype.findEdgeBoundary = function (portID, left, right, top, bottom, isSource) {\n        var grid;\n        var collection = (isSource) ? this.sourceGridCollection : this.targetGridCollection;\n        if (!portID && ((isSource) ? this.startNode : this.targetNode)) {\n            for (var i = left.gridX; i <= right.gridX; i++) {\n                grid = this.gridCollection[i][left.gridY];\n                if ((grid.nodeId.length === 1 && (i === left.gridX || i === right.gridX)) ||\n                    (i !== left.gridX && i !== right.gridX)) {\n                    collection.push(grid);\n                }\n            }\n            for (var i = top.gridY; i <= bottom.gridY; i++) {\n                grid = this.gridCollection[top.gridX][i];\n                if (((grid.nodeId.length === 1 && (i === top.gridY || i === bottom.gridY)) ||\n                    (i !== top.gridY && i !== bottom.gridY)) && collection.indexOf(grid) === -1) {\n                    collection.push(grid);\n                }\n            }\n        }\n        else {\n            collection.push((isSource) ? this.startGrid : this.targetGrid);\n        }\n    };\n    LineRouting.prototype.checkObstacles = function (connector) {\n        var neigbours = this.findNearestNeigbours(this.startGrid, this.gridCollection, true);\n        if (neigbours.length === 0) {\n            if (connector.sourcePortID !== '') {\n                var endPoint = { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.sourceWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.startGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.startGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.startGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.startGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.startGrid, 'top', true);\n                this.resetGridColl(this.startGrid, 'right', true);\n                this.resetGridColl(this.startGrid, 'bottom', true);\n                this.resetGridColl(this.startGrid, 'left', true);\n            }\n        }\n        neigbours = this.findNearestNeigbours(this.targetGrid, this.gridCollection, false);\n        if (neigbours.length === 0) {\n            if (connector.targetPortID !== '') {\n                var endPoint = { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.targetWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.targetGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.targetGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.targetGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.targetGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.targetGrid, 'top', false);\n                this.resetGridColl(this.targetGrid, 'right', false);\n                this.resetGridColl(this.targetGrid, 'bottom', false);\n                this.resetGridColl(this.targetGrid, 'left', false);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined, true);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined, true);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined, true);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined, true);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    /* tslint:disable */\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false, true);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && connector.sourcePortID === '' && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    if (((targetPoint.x - points[j + 1].x) < 0) &&\n                        (Math.abs(targetPoint.x - points[j].x) < connector.targetDecorator.width + 1)) {\n                        points[j].x = points[j - 1].x -= this.size / 2;\n                    }\n                    if (((targetPoint.x - points[j + 1].x) > 0) &&\n                        (Math.abs(targetPoint.x - points[j].x) < connector.targetDecorator.width + 1)) {\n                        points[j].x = points[j - 1].x += this.size / 2;\n                    }\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    if (((targetPoint.y - points[j + 1].y) < 0) &&\n                        (Math.abs(targetPoint.y - points[j].y) < connector.targetDecorator.height + 1)) {\n                        points[j].y = points[j - 1].y -= this.size / 2;\n                    }\n                    if (((targetPoint.y - points[j + 1].y) > 0) &&\n                        (Math.abs(targetPoint.y - points[j].y) < connector.targetDecorator.width + 1)) {\n                        points[j].y = points[j - 1].y += this.size / 2;\n                    }\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    /* tslint:enable */\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection, true);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection, isSource) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours, isSource);\n            this.neigbour(startGrid, 'right', neigbours, isSource);\n            this.neigbour(startGrid, 'bottom', neigbours, isSource);\n            this.neigbour(startGrid, 'left', neigbours, isSource);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1)\n                || (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.resetGridColl = function (grid, direction, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (grid.gridX) : ((direction === 'left') ? grid.gridX - i : grid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (grid.gridY) : ((direction === 'top') ? grid.gridY - i : grid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1) ||\n                (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (this.isWalkable(x, y)) {\n                    break;\n                }\n                else {\n                    var grid_1 = this.gridCollection[x][y];\n                    this.considerWalkable.push(grid_1);\n                }\n            }\n            if (x > 0 && y > 0) {\n                if (direction === 'top' || direction === 'left') {\n                    i--;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || ((grid.nodeId.length === 1 || (grid.nodeId.length === 2 && grid.parentNodeId)) &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1 ||\n                    this.considerWalkable.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\nimport { updateLayoutValue } from '../utility/diagram-util';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        var parentId = 'parentId';\n                        var processId = 'processId';\n                        if (!node[parentId] && !node[processId]) {\n                            rootNodes.push(node);\n                        }\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            var check = void 0;\n            this.updateEdges(layout, node, 1, action, nodes);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1 ? shape1.tree.children && shape1.tree.children.length : 0;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action, nodes) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action, nodes);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if ((layout.getLayoutInfo || layout.layoutInfo) && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo ?\n                layout.getLayoutInfo(node, layoutInfo.tree) : updateLayoutValue(layoutInfo.tree, layout.layoutInfo, nodes, node);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var yValue = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                yValue = layout.graphNodes[fixedNode.id].y;\n                orientation === 'LeftToRight' ? layout.anchorX -= yValue : layout.anchorX += yValue;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                yValue = layout.graphNodes[fixedNode.id].y;\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                orientation === 'TopToBottom' ? layout.anchorY -= yValue : layout.anchorY += yValue;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            align = node && node.branch ? node.branch : align;\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if ((node.inEdges.length + node.outEdges.length > 0) && !node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        this.updateMargin(layoutProp, layout, modelBounds, viewPort);\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            this.isNodeOverLap(this.nameTable[this.vertices[i].name], layoutProp);\n        }\n    };\n    HierarchicalLayoutUtil.prototype.calculateRectValue = function (dnode) {\n        var rect = { x: 0, y: 0, right: 0, bottom: 0, height: 0, width: 0 };\n        rect.x = dnode.offsetX - dnode.actualSize.width / 2;\n        rect.right = dnode.offsetX + dnode.actualSize.width / 2;\n        rect.y = dnode.offsetY - dnode.actualSize.height / 2;\n        rect.bottom = dnode.offsetY + dnode.actualSize.height / 2;\n        return rect;\n    };\n    HierarchicalLayoutUtil.prototype.isNodeOverLap = function (dnode, layoutProp) {\n        var nodeRect = { x: 0, y: 0, right: 0, bottom: 0, height: 0, width: 0 };\n        for (var i = 0; i < this.vertices.length; i++) {\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            var tempnode1 = void 0;\n            tempnode1 = this.nameTable[this.vertices[i].value];\n            if (dnode.id !== tempnode1.id && tempnode1.offsetX !== 0 && tempnode1.offsetY !== 0) {\n                nodeRect = this.calculateRectValue(dnode);\n                rect = this.calculateRectValue(tempnode1);\n                if (this.isIntersect(rect, nodeRect, layoutProp)) {\n                    if (layoutProp.orientation === 'TopToBottom' || layoutProp.orientation === 'BottomToTop') {\n                        dnode.offsetX += layoutProp.horizontalSpacing;\n                    }\n                    else {\n                        dnode.offsetY += layoutProp.verticalSpacing;\n                    }\n                    this.isNodeOverLap(dnode, layoutProp);\n                }\n            }\n        }\n    };\n    HierarchicalLayoutUtil.prototype.isIntersect = function (rect, nodeRect, layoutProp) {\n        if (!(rect.right + layoutProp.horizontalSpacing <= nodeRect.x || rect.x - layoutProp.horizontalSpacing >= nodeRect.right\n            || rect.y - layoutProp.verticalSpacing >= nodeRect.bottom\n            || rect.bottom + layoutProp.verticalSpacing <= nodeRect.y)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    HierarchicalLayoutUtil.prototype.updateMargin = function (layoutProp, layout, modelBounds, viewPort) {\n        var viewPortBounds = { x: 0, y: 0, width: viewPort.x, height: viewPort.y };\n        var layoutBounds;\n        var bounds = {\n            x: modelBounds.x, y: modelBounds.y,\n            right: modelBounds.x + modelBounds.width,\n            bottom: modelBounds.y + modelBounds.height\n        };\n        layoutBounds = layoutProp.bounds ? layoutProp.bounds : viewPortBounds;\n        if (layout.orientation === 'TopToBottom' || layout.orientation === 'BottomToTop') {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    layout.marginX = (layoutBounds.x - bounds.x) + layoutProp.margin.left;\n                    break;\n                case 'Right':\n                    layout.marginX = layoutBounds.x + layoutBounds.width - layoutProp.margin.right - bounds.right;\n                    break;\n                case 'Center':\n                    layout.marginX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    var top_1;\n                    top_1 = layoutBounds.y + layoutProp.margin.top;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? top_1 : -top_1;\n                    break;\n                case 'Bottom':\n                    var bottom = void 0;\n                    bottom = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? bottom - bounds.bottom : -(bottom - bounds.bottom);\n                    break;\n                case 'Auto':\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.y + layoutBounds.height / 2;\n                    layout.marginY = layout.orientation === 'TopToBottom' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.y + bounds.bottom) / 2;\n                    break;\n            }\n        }\n        else {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    var left = void 0;\n                    left = layoutBounds.x + layoutProp.margin.left;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? left : -left;\n                    break;\n                case 'Right':\n                    var right = void 0;\n                    right = layoutBounds.x + layoutBounds.width - layoutProp.margin.right;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? right - bounds.right : bounds.right - right;\n                    break;\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.width / 2 + layoutBounds.x;\n                    layout.marginX = layout.orientation === 'LeftToRight' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    layout.marginY = layoutBounds.y + layoutProp.margin.top - bounds.x;\n                    break;\n                case 'Auto':\n                case 'Center':\n                    layout.marginY = layoutBounds.y + layoutBounds.height / 2 - (bounds.y + bounds.bottom) / 2;\n                    break;\n                case 'Bottom':\n                    layout.marginY = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom - bounds.bottom;\n                    break;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            if (nextConnectedCount === 1 && prevConnectedCount === 1) {\n                cellMedian = (medianPreviousLevel * prevConnectedCount) / prevConnectedCount;\n            }\n            else if (nextConnectedCount === 1) {\n                cellMedian = (medianNextLevel * nextConnectedCount) / nextConnectedCount;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param {MultiParentModel} model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass, applyStyleAgainstCsp } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults, updateDefaultValues } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    // tslint:disable-next-line:no-any\n    function Palette(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the drag size of the individual palette items.\n */\nvar SymbolDragSize = /** @class */ (function (_super) {\n    __extends(SymbolDragSize, _super);\n    function SymbolDragSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolDragSize.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolDragSize.prototype, \"height\", void 0);\n    return SymbolDragSize;\n}(ChildProperty));\nexport { SymbolDragSize };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.oldObject = null;\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isExpandMode = false;\n        _this.isMethod = false;\n        _this.paletteid = 88123;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = (_this.selectedSymbol && _this.selectedSymbol.id) || e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n                if (_this.nodeDefaults || _this.connectorDefaults) {\n                    updateDefaultValues(child, node, child instanceof Node ? _this.nodeDefaults : _this.connectorDefaults);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param {SymbolPaletteModel} newProp - Defines the new values of the changed properties\n     * @param {SymbolPaletteModel} oldProp - Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                this.isExpand = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            if (!this.isExpandMode && !this.isMethod && !this.isExpand) {\n                                this.isExpand = true;\n                            }\n                        }\n                        if (isBlazor() && newProp.palettes[index].symbols === null) {\n                            this.updateBlazorProperties(newProp);\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    this.isExpandMode = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh) {\n            this.refresh();\n            this.isExpand = false;\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n        this.isMethod = false;\n    };\n    /**\n     * @private\n     */\n    SymbolPalette.prototype.updateBlazorProperties = function (newProp) {\n        var blazorInterop = 'sfBlazor';\n        var blazor = 'Blazor';\n        if (window && window[blazor]) {\n            var palObj = { palette: newProp.palettes };\n            var obj = { 'methodName': 'UpdateBlazorProperties', 'paletteobj': palObj };\n            window[blazorInterop].updateBlazorProperties(obj, this);\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-symbolpalette').length;\n            this.element.id = 'symbolpalette_' + this.paletteid + '_' + collection;\n        }\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            var isAllowDatabind = _this.allowServerDataBinding;\n            _this.allowServerDataBinding = false;\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n            _this.allowServerDataBinding = isAllowDatabind;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n        this.renderComplete();\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    var measureElementCount = 'measureElementCount';\n                    window[measureElementCount]--;\n                    if (window[measureElementCount] === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    /**\n     * Add particular palettes to symbol palette at runtime\n     * @param { PaletteModel } palettes - Defines the collection of palettes to be added\n     * @blazorArgsType palettes|System.Collections.ObjectModel.ObservableCollection<SymbolPalettePalette>\n     */\n    SymbolPalette.prototype.addPalettes = function (palettes) {\n        var palette;\n        for (var i = 0; i < palettes.length; i++) {\n            var isEnableServerDatabind = this.allowServerDataBinding;\n            this.isProtectedOnChange = true;\n            this.allowServerDataBinding = false;\n            palette = new Palette(this, 'palettes', palettes[i], true);\n            this.palettes.push(palette);\n            this.initSymbols(palette);\n            this.allowServerDataBinding = isEnableServerDatabind;\n            this.isProtectedOnChange = false;\n            this.renderPalette(palette);\n        }\n        this.bulkChanges = {};\n        this.accordionElement.refresh();\n    };\n    /**\n     * @private\n     */\n    SymbolPalette.prototype.removePalette = function (paletteId) {\n        for (var i = 0; i < this.palettes.length; i++) {\n            if (this.palettes[i].id === paletteId) {\n                this.palettes.splice(i, 1);\n                this.accordionElement.items.splice(i, 1);\n                break;\n            }\n        }\n    };\n    /**\n     * Add particular palettes to symbol palette at runtime\n     * @param { PaletteModel } palettes - Defines the collection of palettes to be added\n     * @blazorArgsType palettes|string[]\n     */\n    SymbolPalette.prototype.removePalettes = function (palettes) {\n        var isEnableServerDatabind = this.allowServerDataBinding;\n        this.allowServerDataBinding = false;\n        for (var i = 0; i < palettes.length; i++) {\n            this.removePalette(palettes[i]);\n        }\n        this.accordionElement.refresh();\n        this.allowServerDataBinding = isEnableServerDatabind;\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    var isEnableServerDatabind = this.allowServerDataBinding;\n                    this.allowServerDataBinding = false;\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                    this.allowServerDataBinding = isEnableServerDatabind;\n                }\n                updateDefaultValues(obj, paletteSymbol, obj instanceof Node ? this.nodeDefaults : this.connectorDefaults);\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    var isEnableServerDatabind = this.allowServerDataBinding;\n                    this.allowServerDataBinding = false;\n                    this.prepareSymbol(obj);\n                    this.allowServerDataBinding = isEnableServerDatabind;\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || this.symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.id = parent.id + '_text';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        this.allowServerDataBinding = false;\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        var symbolPreview = symbol.previewSize;\n        if ((symbol && (symbolPreview.width || symbolPreview.height)) ||\n            this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (symbolPreview.width || this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (symbolPreview.height || this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                // BLAZ-3223: translate applied only for Basic and Flow now and need to add for remaining shapes in future \n                if (symbol.shape.type === 'Basic' || symbol.shape.type === 'Flow') {\n                    style += 'transform: scale(0.5) translate(-' + canvas.width / 2 + 'px, -' + canvas.height / 2 + 'px);';\n                }\n                else {\n                    style += 'transform:scale(0.5);';\n                }\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        applyStyleAgainstCsp(((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas), style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        this.allowServerDataBinding = true;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            applyStyleAgainstCsp(((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas), style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        this.isMethod = true;\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.oldObject, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    this.oldObject = id;\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n        if (isBlazor()) {\n            e.bindEvents(e.dragElement);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape.type === 'Bpmn' && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette', this.element.id);\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        applyStyleAgainstCsp(searchDiv, 'backgroundColor:white;height:30px');\n        //  searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        applyStyleAgainstCsp(textBox, 'width:100%;height:auto');\n        //textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.getFilterSymbol = function (symbol) {\n        var items = [];\n        for (var i = 0; i < symbol.length; i++) {\n            for (var j = 0; j < this.ignoreSymbolsOnSearch.length; j++) {\n                if (this.ignoreSymbolsOnSearch[j] !== symbol[i].id) {\n                    items.push(symbol[0]);\n                }\n            }\n        }\n        return items;\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        if (this.ignoreSymbolsOnSearch && this.ignoreSymbolsOnSearch.length > 0) {\n            symbolGroup = this.getFilterSymbol(symbolGroup);\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"ignoreSymbolsOnSearch\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Complex({}, SymbolDragSize)\n    ], SymbolPalette.prototype, \"symbolDragSize\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"connectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement, getHTMLLayer } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.overviewid = 88123;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param {OverviewModel} newProp - Lists the new values of the changed properties\n     * @param {OverviewModel} oldProp - Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-overview').length;\n            this.element.id = 'overview_' + this.overviewid + '_' + collection;\n        }\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n        this.renderComplete();\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; margin-top:6px; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        if (!document.getElementById(this.element.id + '_nativeLayer_svg')) {\n            var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n            var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n            nativeLayerSvg.appendChild(nativeLayer);\n            view.diagramLayerDiv.appendChild(nativeLayerSvg);\n            setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n        }\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            class: 'overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y + 1, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height + 3, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 11, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 11, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y + 3, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y + 3, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height + 3, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height + 3, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByClassName('overviewsvg')[0];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    Overview.prototype.updateHtmlLayer = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        var bounds = this.parent.scroller.getPageBounds(true);\n        var width = bounds.width;\n        var height = bounds.height;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        var scale = Math.min(Number(this.model.width) / w, Number(this.model.height) / h);\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + this.parent.scroller.transform.tx + 'px,'\n            + (this.parent.scroller.transform.ty) + 'px)';\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        var diagramBoundsWidth = this.parent.scroller.viewPortWidth / this.parent.scroller.currentZoom;\n        var diagramBoundsHeight = this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom;\n        var transformWidth = 0;\n        var transformHeight = 0;\n        if (this.parent.scroller.currentZoom < 1 && diagramBoundsWidth > bounds.width && diagramBoundsHeight > bounds.height) {\n            transformWidth = (diagramBoundsWidth - bounds.width) / 2;\n            transformHeight = (diagramBoundsHeight - bounds.height) / 2;\n        }\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + ((-(bounds.x)) + transformWidth) + 'px,'\n            + (((-bounds.y) + transformHeight)) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width > 0 ? bRect.width : _this.model.width;\n            _this.model.height = bRect.height > 0 ? bRect.height : _this.model.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n","import * as index from './index';\nindex.Diagram.Inject(index.HierarchicalTree, index.MindMap, index.RadialTree, index.ComplexHierarchicalTree, index.DataBinding, index.Snapping, index.PrintAndExport, index.BpmnDiagrams, index.SymmetricLayout, index.ConnectorBridging, index.UndoRedo, index.LayoutAnimation, index.DiagramContextMenu, index.LineRouting, index.ConnectorEditing);\nindex.SymbolPalette.Inject(index.BpmnDiagrams);\nexport * from './index';\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","id","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","sourcePadding","addPaddingToConnector","targetPadding","isTarget","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","bottomRight","bottomLeft","thisSegment","getIntersectionPoints","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","middleLeft","bottomCenter","middleRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","reverse","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","class","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","parentNode","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canEnableRouting","state","LineRouting","InheritLineRouting","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","canPreventClearSelection","PreventClearSelection","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","connectorList","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","propertyChangeValue","AllowMovingOutsideLane","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","moveSwinLaneChild","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","enableServerDataBinding","nodes","isBlazor","selectedObject","helperObject","selectedItems","connectors","actualObject","currentSymbol","isLane","canLaneInterchange","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","checkChildNodeInContainer","nodePropertyChange","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","parentObj","Diagram","UndoRedo","getDiagramElement","appendChild","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","considerSwimLanePadding","updateDiagramElementQuad","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","phases","row","index","header","hasHeader","createRow","initGridRow","initGridColumns","setDefinitions","headerDefine","k","randomId","phaseDefine","laneCollection","addObjectToGrid","isPhase","canvas","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","columnDefinitions","annotations","addObject","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","phaseHeight","phaseOffset","totalWidth","getConnectors","isRowUpdate","childNode","edges","conn","rowDefinitions","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","updateChildOuterBounds","checkLaneChildrenOffset","findStartLaneIndex","phaseRow","phase","gridRowIndex","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","changeHeaderIndex","columnSpan","updateColumnIndex","updateSwimLaneChildPosition","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","findPhaseIndex","headerNode","addLane","count","redoObj","orientation_1","Lane","cause","cancel","triggerEvent","DiagramEvent","collectionChange","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","addLastPhase","phaseObj","Phase","fristRow","i_2","addHorizontalPhase","nextPhaseNode","addVerticalPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addSwimlanePhases","nextCell","prevRow","prevCell","desiredCellWidth","desiredCellHeight","arrangeChildInGrid","changeCell","zIndex","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","Canvas","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","removeSwimLane","removeNode","deleteNode","PreventHistory","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","swimLanePhases","phaseLength","removeHorizontalPhase","removeVerticalPhase","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevWidth","prevChild","phaseRowIndex","prevHeight","laneHeader","findLane","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","getSpaceValue","intervals","isLine","space","getInterval","newInterval","setUMLActivityDefaults","umlActivityShape","umlActivityFlow","flow","setConnectorDefaults","bpmnFlow","hasRelation","relationship","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","updateDefaultValues","actualNode","plainValue","defaultValue","property","oldKey","keyObj","key","Array","isArray","createObject","PointPort","ports","updateLayoutValue","assitants","assistants","hasSubTree","canEnableSubTree","layoutInfo","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","getSwimLaneChildren","removeUnnecessaryNodes","serialize","removeNodes","clonedObject","getCustomProperty","serializationSettings","preventDefaults","JSON","stringify","defaultObject","isNodeShape","getConstructor","properties","properties_1","preventArrayDefaults","SwimLane","every","isSameArray","constructor","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","Header","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","gradient","updateGradient","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","basicShape","flowShapeElement","flowShape","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getCollectionChangeEventArguements","args1","cloneBlazorObject","getDropEventArguements","arg","getPoint","w","h","cornerPoint","trans","checkBrowserInfo","navigator","platform","Browser","info","canMeasureDecoratorPath","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","removeElementsByClass","className","elements","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","laneWidth","txtValue","bounds1","bBoxText","dy","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","callback","imageElement","createElement","setAttributeHtml","onload","event","loadedImage","currentTarget","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","CSS","escape","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","expandCollapse","elementType","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","nodeObject","sentNode","isTemplate","compiledString","getNodeTemplate","template","compile","cloneNode","svg","applyStyleAgainstCsp","trim","createMeasureElements","usageCount","divElement","createTextNode","tSpan","setChildPosition","getTemplateContent","annotationcontent","annotationTemplate","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","getIndex","comp","templateCompiler","querySelectorAll","baseTemplateComplier","innerHTML","updateCloneProp","Decorator","Shape","IconShape","BpmnTask","BpmnSubProcess","Port","Annotation","Margin","TextStyle","ShapeStyle","additionalProp","cloneBlazorProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","connectorEditingToolModule","allowDrag","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","DiagramGradient","LinearGradient","RadialGradient","Thickness","Gradient","Collection","ComplexFactory","DiagramShapeStyle","BlazorAction","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","inversedAlignment","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","pointTimer","setTimeout","imageSource","stretch","templatePosition","getAvailableSize","Complex","Connect","Hyperlink","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","DiagramTooltip","NodeBase","nodeTemplate","templateFn","SymbolSize","getConnectorType","DiagramConnectorShape","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","DiagramConnectorSegment","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","annotationType","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","diagramAction","len","DecoratorPropertyChange","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","renderComplete","getModuleName","destroy","notify","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","cloneSelectedObjects","isEnableServerDatabind","allowServerDataBinding","clonedSelectedItems","pathseqData","pathElement","checkPort","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","LayoutInfo","getShapeType","DiagramShape","BpmnTransactionSubProcess","trigger","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","bpmnShape","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","initIconContainer","iconContent","iconContentBounds","getWrapper","All","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","childNodesHeight","innerHtmlTextElement","svgLabelAlign","setText","isHorizontalLane","parentOffsetX","parentOffsetY","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","parentHtmlElement","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","location","href","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","isPreviewNode","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","disableConnectors","disableNodes","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","gridType","verticalLineIntervals","verticalGridlines","lineIntervals","dotIntervals","horizontalLineIntervals","horizontalGridlines","dynamicGrid","scaledIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","lineDashArray","updateLineIntervals","lineColor","renderDotGrid","spacey","vLine","updateGrid","svgGrid","snapIntervals","gridlines","parentWidth","parentHeight","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","domTable","updateNode","diagramElementsLayer","insertIndex","Background","FitOptions","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataMappingItems","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","DeepDiffMapper","valueCreated","valueUpdated","valueDeleted","valueUnchanged","newNodeObject","newConnectorObject","diagramObject","updateObjectCollection","getOldObject","isNode","oldNodeObjects","oldConnectorObjects","changeSegments","removeNullValues","newSegments","removeNullObjectValues","newSegObject","getDifferenceValues","labelDrag","diffValue","frameObject","removeEmptyValues","getDiagramObjects","getLayerObject","oldDiagram","diffLayers","newDiagram","sfIndex","tempObject","objectValue","removeArrayValues","newValue","frame","obj1","obj2","arrayName","isFunction","isValue","compareValues","ss","value2","kk","value1","isDate","getTime","isObject","final","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","__generator","verb","op","f","TypeError","_","ops","pop","trys","sent","throw","return","Symbol","iterator","ToolBase","protectChange","deepDiffer","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","enableCloneObject","ismouseEvents","startPosition","currentPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","getBlazorOldValues","LabelDragTool","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","isUserHandle","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","updateBlazorSelector","selectObjects","labelSelect","ConnectTool","isConnected","temparg","oldValue","segmentpoint1","segmentpoint2","oldConnector","connectorTargetValue","connectorEnd","connectionChange","tempArgs","canCancel","ConnectorDrawingTool","selectedSegment","nodeEndId","portEndId","oldValues","targetPortName","targetNodeNode","connectorSourceValue","updateConnectorValue","updateSelector","removeSnap","changeAnnotationDrag","findTarget","sourcePointChange","targetPointChange","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","objectType","getSubProcess","initialOffset","targetPosition","allowDrop","isPreventHistory","blazorArgs","historyAdded","entry_1","snappedPoint","isEndGroup","positionChange","dragSelectedObjects","getBlazorPositionChangeEventArgs","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","removeChildFromBPmn","arg_1","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","object_2","rotateChange","rotatePropertyChnage","oldValue_1","arg_2","snapAngle","arg1","rotateSelectedItems","ResizeTool","checkSelection","blazarArgs","scaleWidth","scaleHeight","deltaValues","entry_2","sizeChange","scaleSelectedItems","scaleObjects","changes","getChanges","change","AspectRatio","NodeDrawingTool","setFocus","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","edit","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","previousAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","keyArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","checkPreviousAction","checkUserHandleEvent","onUserHandleMouseLeave","eventName","onUserHandleMouseUp","onUserHandleMouseEnter","onUserHandleMouseDown","userHandleObject","isScrolling","preventDefault","oldSelectedObjects","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","hoverNode","checkAction","isSwimlaneElements","touchMoveList","content_1","openOn","elementLeave","canResetElement","elementEnter","mouseEvents","getConnectorPadding","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","checkMenu","userAgent","contextMenuModule","contextMenu","hasStack","updateSelectedNodeProperties","renderSelector","click","getBlazorClickEventArgs","targetObject","selectedConnector","ConnectToNearByPort","connectionPadding","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","blazorActions","interaction","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","commandExecute","getKeyModifier","getlabel","Control","Shift","Alt","Meta","keyUp","movingPosition","autoScrollBorder","delay","autoScroll","targets","mouseEnter","getBlazorCollectionObject","lastObjectUnderMouse","elementOver","isPrivateTooltip","keyModifier","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","currentConnector","ConnectToNearByNode","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","laneId","firstlane","updateContainerPropertiesExtend","realActions","EnableGroupAction","updateLaneChildNode","innerNode","actions","layerTarger","endPadding","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","findTargetElement","portElement_2","objj1","portElement_1","selected","Layer","objectZIndex","zIndexTable","CommandHandler","newSelectedObjects","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","newChanges","oldChanges","connectionEnd","dragOverArg","dragOver","returnargs","checkBlazor","insertValue","connectionEventChange","connectedNode","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","UpdateBlazorDiagramModelLayers","updatedModel","methodName","diagramobj","updateBlazorProperties","addLayer","isClone","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","copiedObject","isServerUpdate","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","UpdateBlazorDiagramModelCollection","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","oldProtectPropertyChangeValue","getProtectPropertyChangeValue","enable","updateArgsObject","argValue","updateSelectionChangeEventArgs","argOldValue","argNewValue","multipleSelection","canDoMultipleSelection","canDoSingleSelection","selectionChange","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","updateBlazorSelectorModel","hasProcesses","preventUpdate","hasLayer","getObjectCollectionId","oldItemsCollection","oldItems","newItems","updateDiagramCollection","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","orderCommands","isRedo","sendBackward","sendForward","startZIndex","endZIndex","layerIndex","undoObject_1","layer_2","moveObject","layer_3","sourceId","targetId","intersectArray","temp_1","overlapObject","currentObject","temp_2","redo","historyEntry","temp_3","temp_4","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","isObjectInteraction","canEnableBlazorObject","updateLayerObject","getDiagramOldValues","oldNodeObject","oldConnectorObject","getObjectChanges","previousObject","changedNodes","triggerAction","isTriggered","selectNodes","selectedNodes","selectedConnectors","highlighter","symbolDrag","parentObject","isGroupDragging","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","AnimationClick","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","pivotValue","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","isOutsideBoundary","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","PreventZIndexOnDragging","DragUsingMouse","preventNodesUpdate","PreventIconsUpdate","view","refreshCanvasDiagramLayer","expandNode","expand","preventConnectorsUpdate","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","resetSegments","getparentexpand","boolean","previousNode","previousNodeObject","previousConnectorObject","updateNodeObject","updateConnectorObject","changeNodes","changeConnectors","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableBounds","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","CustomCursorAction","DiagramSettings","oldDiagramObject","groupTable","isGroup","callBlazorModel","selectionConnectorsList","changedConnectorCollection","changedNodesCollection","previousNodeCollection","previousConnectorCollection","crudDeleteNodes","diagramid","renderTimer","canCloneObject","dataSource","ignoreCollectionWatch","updateAnnotationText","defaultConnector","defaultPropChanges","bulkChanges","join","callFromServer","isOutEdge","loadDiagram","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","Render","eventHandler","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","locale","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","scrollAlone","_k","_l","updateHtmlLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","collapsedNode","changedConnectors","blazorInterop","blazor","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","isLayout","lineRouting","renderPageBreaks","isDevice","updateTemplate","updateFitToPage","fitOptions","canFit","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","Ajax","onSuccess","dataManager","send","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","getZoomingAttribute","updateBlazorDiagramProperties","cutCommand","removeProcess","pasteCommand","copyCommand","insertBlazorDiagramObjects","layerObjectUpdate","leyerObject","moveForward","getNodeObject","getConnectorObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","customCursor","historyChangeTrigger","addCustomHistoryEntry","sourceValue","historyChange","undo","getBlazorDiagramObjects","PublicMethod","canCall","focusedPoint","zoomTo","updateEventValue","addNodeToLane","hideTooltip","addNode","addChildToGroup","getHistoryStack","isUndoStack","undoStack","redoStack","stackLimit","getEdges","getParentId","addConnector","multiSelectDelete","removalIndexCollection","updatedModelCollection","connectorModelCollection","removalIndex","objectTypeCollection","dgmObj","nodeObj","ObjectType","isMultipleObjects","annotationIndex","UpdateBlazorDiagramModel","annotationNodeIndex","Clear","addBlazorDiagramObjects","nodesCollection","connectorCollection","dataBindingModule","removeNodeEdges","isOutEdges","PreventCollectionChangeOnDragOver","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateBlazorCollectionChange","updateSvgNodes","updateTextElementValue","updateProcesses","moveNode","isAdding","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","nodeIndex","removeCommand","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","check","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","removeChildrenFromLayout","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updatedNodes","updatedNodes_1","updateIcon","updateDefaultLayoutIcons","saveDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","addNodeLabels","labels","addConnectorLabels","removelabelExtension","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","updateBazorShape","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","alignedGroups_1","alignGroup","_o","connectors_1","_p","_q","obj_2","_r","_s","obj_3","parents","newList","parentist","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","diagramSettings","childCollection","onLoadImageSize","bind","updateChildPosition","onImageLoad","newCommands","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","isInEdges","portEdges","refreshDiagram","isRootInverse","isProtectedChange","renderDocument","renderNodes","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","isUpdateObject","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","isProtectedOnChangeValue","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","annotation_1","phaseHeader","textEdit","getBlazorTextEditArgs","isBpmnTextAnnotation","updateTextAnnotationContent","nodeAnnotation","connectorAnnotation","isAction","tempNode_1","updateObject","oldNode","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","oldSelectConstraints","newSelectConstraints","node_2","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","removePortEdges","oldSource","updateAnnotations","triggerPropertyChange","getpropertyChangeArgs","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","nodeShadow","changedShadow","entryTable","Droppable","over","dragDataHelper","dragData","helper","selectedSymbol","paletteId","getAttribute","nodeDragSize","nodePreviewSize","paletteDragSize","ej2_instances","dragSize","previewSize","palettePreview","tempTable","getBlazorDragEventArgs","dragEnter","swimLaneObj","child1","child2","findChild","selectedSymbols","getDropEventArgs","removeChildInNodes","addChildNodes","droppedElement","out","args_1","getBlazorDragLeaveEventArgs","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","replace","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","nodeModel","dataMapSettings","arrayProperty","innerProperty","splitString","field","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","entryType","getHistoryChangeEvent","blazorHistoryEntryType","historyStateChange","shapeAnnotation","pointPortModel","currEntry","getHistroyObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","recordOrderCommandChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","ignoreProperty","getProperty","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","considerWalkable","isUpdate","extraBounds","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","intersectRect","findEndPoint","isPortBounds","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","findEdgeBoundary","checkObstacles","startGridNode","getIntermediatePoints","updateConnectorSegments","portID","neigbours","findNearestNeigbours","resetGridColl","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","findIntermediatePoints","octile","manhattan","sorting","tmp","SQRT2","dx","isWalkable","nearGrid","grid_1","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutBounds","mod","yValue","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","branch","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","nodeGraph","exploreGraphEdge","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","isNodeOverLap","calculateRectValue","nodeRect","tempnode1","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolDragSize","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isExpandMode","isMethod","paletteid","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","paletteobj","palette","accordionDiv","Accordion","isAllowDatabind","updatePalettes","addPalettes","initSymbols","renderPalette","removePalette","removePalettes","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","bindEvents","dragElement","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","getFilterSymbol","ignoreSymbolsOnSearch","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","overviewid","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","diagramBoundsWidth","diagramBoundsHeight","transformWidth","transformHeight","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering","index.Diagram","Inject","index.HierarchicalTree","index.MindMap","index.RadialTree","index.ComplexHierarchicalTree","index.DataBinding","index.Snapping","index.PrintAndExport","index.BpmnDiagrams","index.SymmetricLayout","index.ConnectorBridging","index.UndoRedo","index.LayoutAnimation","index.DiagramContextMenu","index.LineRouting","index.ConnectorEditing","index.SymbolPalette"],"mappings":"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"}